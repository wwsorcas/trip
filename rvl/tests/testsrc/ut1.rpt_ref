
/*************************************************
 *            BEGIN RVL UNIT TEST 1              *
 * Purpose: exercise RnArray, StdSpace, RnSpace, *
 * and Vector constructors, also RVLRandomize.   *
 *************************************************/

1. construct 10-diml RnSpace<float>

2. construct RVL::Vector in this space

3. construct std::vector of RVL::Vector * cloning RVL::Vector
   just constructed - exercises copy constructor

4. construct RVLRandomize<float> FO

5. loop through components of std::vector<RVL::Vector>,
   evaluating RVLRandomize FO on each, and printing it out
   using write method of Vector class, which calls RnSpace
   and RnArray write methods

*** component 0
Vector Object
member of space:
RnSpace: simple dense vector space
dimension = 10
data container:
RnArray Local Data Container object
length = 10
samples: 
data[0] = 0.108797
data[1] = 0.728763
data[2] = 0.109489
data[3] = 0.131133
data[4] = 0.924143
data[5] = 0.312103
data[6] = 0.523156
data[7] = 0.26092
data[8] = 0.851918
data[9] = 0.940463

*** component 1
Vector Object
member of space:
RnSpace: simple dense vector space
dimension = 10
data container:
RnArray Local Data Container object
length = 10
samples: 
data[0] = 0.102822
data[1] = 0.342666
data[2] = 0.810382
data[3] = 0.955235
data[4] = 0.166588
data[5] = 0.356361
data[6] = 0.880276
data[7] = 0.815589
data[8] = 0.315654
data[9] = 0.930433

*** component 2
Vector Object
member of space:
RnSpace: simple dense vector space
dimension = 10
data container:
RnArray Local Data Container object
length = 10
samples: 
data[0] = 0.919427
data[1] = 0.650622
data[2] = 0.171092
data[3] = 0.776692
data[4] = 0.683219
data[5] = 0.640661
data[6] = 0.362017
data[7] = 0.900816
data[8] = 0.292981
data[9] = 0.472198

*** component 3
Vector Object
member of space:
RnSpace: simple dense vector space
dimension = 10
data container:
RnArray Local Data Container object
length = 10
samples: 
data[0] = 0.48476
data[1] = 0.844594
data[2] = 0.400518
data[3] = 0.382634
data[4] = 0.146926
data[5] = 0.245046
data[6] = 0.608391
data[7] = 0.631475
data[8] = 0.951349
data[9] = 0.568274

*** component 4
Vector Object
member of space:
RnSpace: simple dense vector space
dimension = 10
data container:
RnArray Local Data Container object
length = 10
samples: 
data[0] = 0.144476
data[1] = 0.989142
data[2] = 0.849193
data[3] = 0.40601
data[4] = 0.529715
data[5] = 0.883193
data[6] = 0.617763
data[7] = 0.0226404
data[8] = 0.873135
data[9] = 0.116418

6. use RVL::Vector::linComb to form 1.0 * 2nd component
   plus 0.5 * 3rd component, store over first component,
   write latter out.

Vector Object
member of space:
RnSpace: simple dense vector space
dimension = 10
data container:
RnArray Local Data Container object
length = 10
samples: 
data[0] = 0.562536
data[1] = 0.667977
data[2] = 0.895928
data[3] = 1.34358
data[4] = 0.508197
data[5] = 0.676691
data[6] = 1.06128
data[7] = 1.266
data[8] = 0.462144
data[9] = 1.16653

/*************************************************
 *              END RVL UNIT TEST 1              *
 *************************************************/
