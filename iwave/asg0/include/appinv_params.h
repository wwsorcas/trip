" ---------------------------- appinv params-------------------------------------",
  " Make choices for both free and absorbing surface parameters, as both are ",
  " needed in approximate inversion. Prefix: \"free\" for free surface, \"absb\" for",
  " absorbing surface. Example: freebulkmod = <path>. Spatial fields (bulkmod, ",
  " buoyancy) for absorbing surface should differ from free surface by having ",
  " one or more rows of grid cells added on top of the model, extending the values",
  " on the top row of grid cells for the corresponding free surface parameter. Grid",
  " geometry for the two cases should otherwise be exactly the same. The free ",
  " surface grid should specify o1=0, that is, the top of the free surface model",
  " is at zero depth.",
  " ",
  " For example, if x[i1][i0] is one of the free surface arrays, sx0<=i0<=ex0,",
  " sx1<=i1<=ex1, then the corrsponding absorbing surface array y[i1][i0] should",
  " have index ranges sy0<=i0<=ex0, sy1<=i1<=ex1, sy0 < sx0, sy1<sx1, and ",
  " y[i1][i0] = x[i1][sx0] for sy0<=i0<sx0. It is easy to create either of these",
  " cases from the other in M8R using sfwindow and sfspray.",
  " ",
  " You must also specify a perturbational bulk modulus file (no bouyancy perturbation ",
  " in this app). Syntax is (prefix)bulkmodpert. The perturbation may be extended in",
  " subsurface offset (3rd index), like so: p[i2][i1][i0]. Can build these from non-",
  " extended fields using sfpad. ",
  " ",
  " The data and source arrays should also have free and absorbing surface instances",
  " specified, using the same prefixes, for instance freedata_p, absbsource_v1, and so",
  " on. These are su (segy) traces with selev, gelev < 0 in the free surface case, ",
  " selev, gelev = 0 in the absorbing surface case (and these properties are checked ",
  " in the code). Approximate inversion uses the shallow tow depth assumption, that is,",
  " source and receiver ghosts are presumed to accurately approximate source and receiver ",
  " z-derivatives of the data. Prototype data files on either type can be derived from the ",
  " other using sushw, and suitable source files using the iwave towed_array command.",
  " ",
  " Appinv action choices:",
  " ",
  " deriv:   0 for forward and adjoint linearized maps, 1 for derivative of either",
  "          wrt background bulkmod",
  " adjoint: 0 for forward map, 1 for adjoint map",
  " appinv:  0 for ordinary modeling and migration, 1 for modeling and approximate ",
  "          inverse (adjoint wrt weighted norms). For the free surface case only,",
  "          adjoint=0 and appinv=1 computes the forward map followed by two time",
  "          integrations, which levels the forward map spectrum.",
  " ",
  " Model Parameters:",
  " ",
  "        bulkmod = <path>      input bulk modulus reference file, ",
  "                              determines simulation spatial grid,",
  "       buoyancy = <path>      input buoyancy (1/density) reference file, ",
  "                              must us same spatial grid as bulkmod",
  " Source Parameters:",
  "       source_p = \"\"        RHS data for p update",
  "      source_v0 = \"\"        RHS data for v0 update",
  "      source_v1 = \"\"        RHS data for v1 update",
  "      source_v2 = \"\"        RHS data for v2 update",
  " Note: at least one source file must be specified",
  " ",
  " Output Parameters:",
  "        data_p  = \"\"        pressure",
  "        data_v0 = \"\"        z component of velocity",
  "        data_v1 = \"\"        x component of velocity",
  "        data_v2 = \"\"        y component of velocity",
    " Note: at least one output file must be specified",
  " ",
" --------------------------- appinv params-------------------------------------",
