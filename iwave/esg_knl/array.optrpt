Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.

Intel(R) C++ Intel(R) 64 Compiler for applications running on Intel(R) 64, Version 17.0.0.102 Build 20160720

Compiler options: -I/Users/muhongzhou/Softwares/madagascar/include -o array.o -c -O3 -qopenmp -restrict -qopt-report=4

    Report from: Interprocedural optimizations [ipo]

  WHOLE PROGRAM (SAFE) [EITHER METHOD]: false
  WHOLE PROGRAM (SEEN) [TABLE METHOD]: false
  WHOLE PROGRAM (READ) [OBJECT READER METHOD]: false

INLINING OPTION VALUES:
  -inline-factor: 100
  -inline-min-size: 30
  -inline-max-size: 230
  -inline-max-total-size: 2000
  -inline-max-per-routine: 10000
  -inline-max-per-compile: 500000

In the inlining report below:
   "sz" refers to the "size" of the routine. The smaller a routine's size,
      the more likely it is to be inlined.
   "isz" refers to the "inlined size" of the routine. This is the amount
      the calling routine will grow if the called routine is inlined into it.
      The compiler generally limits the amount a routine can grow by having
      routines inlined into it.

Begin optimization report for: Array::Allocate(Array *, int)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (Array::Allocate(Array *, int)) [1/74=1.4%] array.cpp(23,1)
  -> EXTERN: (25,28) operator new[](size_t)
  -> EXTERN: (28,5) ___cxa_end_catch
  -> EXTERN: (28,5) ___cxa_begin_catch
  -> (29,19) std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char, std::__1::char_traits<char>> &, const char *) (isz = 266) (sz = 275)
     [[ Callee not marked with inlining pragma ]]
  -> (29,58) std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char, std::__1::char_traits<char>> &, const char *) (isz = 266) (sz = 275)
     [[ Callee not marked with inlining pragma ]]
  -> INDIRECT- (VIRTUAL): (29,61)  EXPR_CONV.SI64.P64(*((SI64*) (_e.19366_V$1b9.0.57->__vptr_V$2d_2.14 + EXPR_CONV.SI32.I64(2(SI32)) * 8(I64))))
     [[ Unable to inline indirect callsite ]]
  -> INLINE (MANUAL): (29,70) std::__1::basic_ostream<char, std::__1::char_traits<char>>::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char>> *, std::__1::basic_ostream<char, std::__1::char_traits<char>> &(*)(std::__1::basic_ostream<char, std::__1::char_traits<char>> &)) (isz = 0) (sz = 9)
    -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ostream:(322,12) std::__1::endl<char, std::__1::char_traits<char>>(std::__1::basic_ostream<char, std::__1::char_traits<char>> &) (isz = 20) (sz = 27)
      -> EXTERN: (1034,10) std::__1::basic_ostream<char, std::__1::char_traits<char>>::put(std::__1::basic_ostream<char, std::__1::char_traits<char>> *, std::__1::basic_ostream<char, std::__1::char_traits<char>>::char_type)
      -> INLINE (MANUAL): (1034,19) std::__1::basic_ios<char, std::__1::char_traits<char>>::widen(const std::__1::basic_ios<char, std::__1::char_traits<char>> *, char) const (isz = 28) (sz = 37)
        -> /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,12) std::__1::use_facet<std::__1::ctype<char>>(const std::__1::locale &) (isz = 3) (sz = 10)
           [[ Callee not marked with inlining pragma ]]
        -> EXTERN: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,41) std::__1::locale::~locale(std::__1::locale *)
        -> EXTERN: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,41) std::__1::ios_base::getloc(std::__1::locale *, const std::__1::ios_base *) const
        -> EXTERN: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,51) std::__1::locale::~locale(std::__1::locale *)
        -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,51) std::__1::ctype<char>::widen(const std::__1::ctype<char> *, char) const (isz = 6) (sz = 15)
          -> INDIRECT- (VIRTUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/__locale:(603,25)  EXPR_CONV.SI64.P64(*((SI64*) (this_14503_V$155.0.26.171->__vptr_V$4d_2.12 + EXPR_CONV.SI32.I64(7(SI32)) * 8(I64))))
             [[ Unable to inline indirect callsite ]]
      -> EXTERN: (1035,10) std::__1::basic_ostream<char, std::__1::char_traits<char>>::flush(std::__1::basic_ostream<char, std::__1::char_traits<char>> *)
  -> (30,19) std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char, std::__1::char_traits<char>> &, const char *) (isz = 266) (sz = 275)
     [[ Callee not marked with inlining pragma ]]
  -> (30,31) std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char, std::__1::char_traits<char>> &, const char *) (isz = 266) (sz = 275)
     [[ Callee not marked with inlining pragma ]]
  -> (30,43) std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char, std::__1::char_traits<char>> &, const char *) (isz = 266) (sz = 275)
     [[ Callee not marked with inlining pragma ]]
  -> EXTERN: (30,58) std::__1::basic_ostream<char, std::__1::char_traits<char>>::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char>> *, int)
  -> (30,70) std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char, std::__1::char_traits<char>> &, const char *) (isz = 266) (sz = 275)
     [[ Callee not marked with inlining pragma ]]
  -> INLINE (MANUAL): (30,78) std::__1::basic_ostream<char, std::__1::char_traits<char>>::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char>> *, std::__1::basic_ostream<char, std::__1::char_traits<char>> &(*)(std::__1::basic_ostream<char, std::__1::char_traits<char>> &)) (isz = 0) (sz = 9)
    -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ostream:(322,12) std::__1::endl<char, std::__1::char_traits<char>>(std::__1::basic_ostream<char, std::__1::char_traits<char>> &) (isz = 20) (sz = 27)
      -> EXTERN: (1034,10) std::__1::basic_ostream<char, std::__1::char_traits<char>>::put(std::__1::basic_ostream<char, std::__1::char_traits<char>> *, std::__1::basic_ostream<char, std::__1::char_traits<char>>::char_type)
      -> INLINE (MANUAL): (1034,19) std::__1::basic_ios<char, std::__1::char_traits<char>>::widen(const std::__1::basic_ios<char, std::__1::char_traits<char>> *, char) const (isz = 28) (sz = 37)
        -> /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,12) std::__1::use_facet<std::__1::ctype<char>>(const std::__1::locale &) (isz = 3) (sz = 10)
           [[ Callee not marked with inlining pragma ]]
        -> EXTERN: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,41) std::__1::locale::~locale(std::__1::locale *)
        -> EXTERN: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,41) std::__1::ios_base::getloc(std::__1::locale *, const std::__1::ios_base *) const
        -> EXTERN: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,51) std::__1::locale::~locale(std::__1::locale *)
        -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,51) std::__1::ctype<char>::widen(const std::__1::ctype<char> *, char) const (isz = 6) (sz = 15)
          -> INDIRECT- (VIRTUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/__locale:(603,25)  EXPR_CONV.SI64.P64(*((SI64*) (this_14503_V$155.0.26.174->__vptr_V$4d_2.12 + EXPR_CONV.SI32.I64(7(SI32)) * 8(I64))))
             [[ Unable to inline indirect callsite ]]
      -> EXTERN: (1035,10) std::__1::basic_ostream<char, std::__1::char_traits<char>>::flush(std::__1::basic_ostream<char, std::__1::char_traits<char>> *)
  -> (31,9) Array::Destroy(Array *) (isz = 19) (sz = 24)
     [[ Callee not marked with inlining pragma ]]
  -> EXTERN: (32,9) exit(int)
  -> INLINE (MANUAL): (35,5) std::__1::fill<real *, double>(real *, real *, const double &) (isz = 1) (sz = 10)
    -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm:(2099,5) std::__1::__fill<real *, double>(real *, real *, const double &, std::__1::random_access_iterator_tag) (isz = 3) (sz = 14)
      -> INLINE (MANUAL): (2091,5) std::__1::fill_n<real *, long, double>(real *, long, const double &) (isz = 4) (sz = 15)
        -> INLINE (MANUAL): (2072,11) std::__1::__fill_n<real *, long, double>(real *, long, const double &) (isz = 13) (sz = 24)
        -> INLINE (MANUAL): (2072,36) std::__1::__convert_to_integral(long) (isz = 0) (sz = 5)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm(2046,5) inlined into array.cpp(35,5)
   remark #25408: memset generated
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm(2046,5) inlined into array.cpp(35,5)
      remark #15389: vectorization support: reference *__first has unaligned access   [ /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm(2047,10) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 2
      remark #15399: vectorization support: unroll factor set to 2
      remark #15309: vectorization support: normalized vectorization overhead 0.300
      remark #15300: LOOP WAS VECTORIZED
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 2.500 
      remark #15478: estimated potential speedup: 1.090 
      remark #15488: --- end vector cost summary ---
      remark #25015: Estimate of max trip count of loop=3
   LOOP END

   LOOP BEGIN at /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm(2046,5) inlined into array.cpp(35,5)
   <Remainder loop for vectorization>
      remark #25015: Estimate of max trip count of loop=12
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm(2047,10):remark #34014: optimization advice for memset: increase the destination's alignment to 16 (and use __assume_aligned) to speed up library implementation
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm(2047,10):remark #34026: call to memset implemented as a call to optimized library version
array.cpp(23,1):remark #34051: REGISTER ALLOCATION : [__ZN5Array8AllocateEi] array.cpp:23

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    8[ rax rdx rcx rbp rsi rdi r15 zmm0]
        
    Routine temporaries
        Total         :     129
            Global    :      47
            Local     :      82
        Regenerable   :      30
        Spilled       :       8
        
    Routine stack
        Variables     :      28 bytes*
            Reads     :       4 [0.00e+00 ~ 0.0%]
            Writes    :       8 [0.00e+00 ~ 0.0%]
        Spills        :      48 bytes*
            Reads     :      10 [0.00e+00 ~ 0.0%]
            Writes    :       6 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: Array::Allocate(Array *, int, int)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (Array::Allocate(Array *, int, int)) [2/74=2.7%] array.cpp(39,1)
  -> EXTERN: (41,29) operator new[](size_t)
  -> EXTERN: (42,29) operator new[](size_t)
  -> EXTERN: (45,5) ___cxa_begin_catch
  -> EXTERN: (45,5) ___cxa_end_catch
  -> (46,19) std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char, std::__1::char_traits<char>> &, const char *) (isz = 266) (sz = 275)
     [[ Callee not marked with inlining pragma ]]
  -> (46,58) std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char, std::__1::char_traits<char>> &, const char *) (isz = 266) (sz = 275)
     [[ Callee not marked with inlining pragma ]]
  -> INDIRECT- (VIRTUAL): (46,61)  EXPR_CONV.SI64.P64(*((SI64*) (_e.19611_V$1c8.0.58->__vptr_V$2d_2.14 + EXPR_CONV.SI32.I64(2(SI32)) * 8(I64))))
     [[ Unable to inline indirect callsite ]]
  -> INLINE (MANUAL): (46,70) std::__1::basic_ostream<char, std::__1::char_traits<char>>::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char>> *, std::__1::basic_ostream<char, std::__1::char_traits<char>> &(*)(std::__1::basic_ostream<char, std::__1::char_traits<char>> &)) (isz = 0) (sz = 9)
    -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ostream:(322,12) std::__1::endl<char, std::__1::char_traits<char>>(std::__1::basic_ostream<char, std::__1::char_traits<char>> &) (isz = 20) (sz = 27)
      -> EXTERN: (1034,10) std::__1::basic_ostream<char, std::__1::char_traits<char>>::put(std::__1::basic_ostream<char, std::__1::char_traits<char>> *, std::__1::basic_ostream<char, std::__1::char_traits<char>>::char_type)
      -> INLINE (MANUAL): (1034,19) std::__1::basic_ios<char, std::__1::char_traits<char>>::widen(const std::__1::basic_ios<char, std::__1::char_traits<char>> *, char) const (isz = 28) (sz = 37)
        -> /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,12) std::__1::use_facet<std::__1::ctype<char>>(const std::__1::locale &) (isz = 3) (sz = 10)
           [[ Callee not marked with inlining pragma ]]
        -> EXTERN: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,41) std::__1::locale::~locale(std::__1::locale *)
        -> EXTERN: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,41) std::__1::ios_base::getloc(std::__1::locale *, const std::__1::ios_base *) const
        -> EXTERN: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,51) std::__1::locale::~locale(std::__1::locale *)
        -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,51) std::__1::ctype<char>::widen(const std::__1::ctype<char> *, char) const (isz = 6) (sz = 15)
          -> INDIRECT- (VIRTUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/__locale:(603,25)  EXPR_CONV.SI64.P64(*((SI64*) (this_14503_V$155.0.26.165->__vptr_V$4d_2.12 + EXPR_CONV.SI32.I64(7(SI32)) * 8(I64))))
             [[ Unable to inline indirect callsite ]]
      -> EXTERN: (1035,10) std::__1::basic_ostream<char, std::__1::char_traits<char>>::flush(std::__1::basic_ostream<char, std::__1::char_traits<char>> *)
  -> (47,19) std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char, std::__1::char_traits<char>> &, const char *) (isz = 266) (sz = 275)
     [[ Callee not marked with inlining pragma ]]
  -> (47,31) std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char, std::__1::char_traits<char>> &, const char *) (isz = 266) (sz = 275)
     [[ Callee not marked with inlining pragma ]]
  -> (47,43) std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char, std::__1::char_traits<char>> &, const char *) (isz = 266) (sz = 275)
     [[ Callee not marked with inlining pragma ]]
  -> EXTERN: (47,58) std::__1::basic_ostream<char, std::__1::char_traits<char>>::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char>> *, int)
  -> (47,70) std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char, std::__1::char_traits<char>> &, const char *) (isz = 266) (sz = 275)
     [[ Callee not marked with inlining pragma ]]
  -> INLINE (MANUAL): (47,78) std::__1::basic_ostream<char, std::__1::char_traits<char>>::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char>> *, std::__1::basic_ostream<char, std::__1::char_traits<char>> &(*)(std::__1::basic_ostream<char, std::__1::char_traits<char>> &)) (isz = 0) (sz = 9)
    -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ostream:(322,12) std::__1::endl<char, std::__1::char_traits<char>>(std::__1::basic_ostream<char, std::__1::char_traits<char>> &) (isz = 20) (sz = 27)
      -> EXTERN: (1034,10) std::__1::basic_ostream<char, std::__1::char_traits<char>>::put(std::__1::basic_ostream<char, std::__1::char_traits<char>> *, std::__1::basic_ostream<char, std::__1::char_traits<char>>::char_type)
      -> INLINE (MANUAL): (1034,19) std::__1::basic_ios<char, std::__1::char_traits<char>>::widen(const std::__1::basic_ios<char, std::__1::char_traits<char>> *, char) const (isz = 28) (sz = 37)
        -> /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,12) std::__1::use_facet<std::__1::ctype<char>>(const std::__1::locale &) (isz = 3) (sz = 10)
           [[ Callee not marked with inlining pragma ]]
        -> EXTERN: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,41) std::__1::locale::~locale(std::__1::locale *)
        -> EXTERN: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,41) std::__1::ios_base::getloc(std::__1::locale *, const std::__1::ios_base *) const
        -> EXTERN: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,51) std::__1::locale::~locale(std::__1::locale *)
        -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,51) std::__1::ctype<char>::widen(const std::__1::ctype<char> *, char) const (isz = 6) (sz = 15)
          -> INDIRECT- (VIRTUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/__locale:(603,25)  EXPR_CONV.SI64.P64(*((SI64*) (this_14503_V$155.0.26.168->__vptr_V$4d_2.12 + EXPR_CONV.SI32.I64(7(SI32)) * 8(I64))))
             [[ Unable to inline indirect callsite ]]
      -> EXTERN: (1035,10) std::__1::basic_ostream<char, std::__1::char_traits<char>>::flush(std::__1::basic_ostream<char, std::__1::char_traits<char>> *)
  -> (48,9) Array::Destroy(Array *) (isz = 19) (sz = 24)
     [[ Callee not marked with inlining pragma ]]
  -> EXTERN: (49,9) exit(int)
  -> INLINE (MANUAL): (55,5) std::__1::fill<real *, double>(real *, real *, const double &) (isz = 1) (sz = 10)
    -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm:(2099,5) std::__1::__fill<real *, double>(real *, real *, const double &, std::__1::random_access_iterator_tag) (isz = 3) (sz = 14)
      -> INLINE (MANUAL): (2091,5) std::__1::fill_n<real *, long, double>(real *, long, const double &) (isz = 4) (sz = 15)
        -> INLINE (MANUAL): (2072,11) std::__1::__fill_n<real *, long, double>(real *, long, const double &) (isz = 13) (sz = 24)
        -> INLINE (MANUAL): (2072,36) std::__1::__convert_to_integral(long) (isz = 0) (sz = 5)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at array.cpp(52,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this->ptr2[i1] (53:9) and this->ptr2 (53:9)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at array.cpp(52,5)
<Remainder>
LOOP END

LOOP BEGIN at /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm(2046,5) inlined into array.cpp(55,5)
   remark #25408: memset generated
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm(2046,5) inlined into array.cpp(55,5)
      remark #15389: vectorization support: reference *__first has unaligned access   [ /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm(2047,10) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 2
      remark #15399: vectorization support: unroll factor set to 2
      remark #15309: vectorization support: normalized vectorization overhead 0.300
      remark #15300: LOOP WAS VECTORIZED
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 2.500 
      remark #15478: estimated potential speedup: 1.090 
      remark #15488: --- end vector cost summary ---
      remark #25015: Estimate of max trip count of loop=3
   LOOP END

   LOOP BEGIN at /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm(2046,5) inlined into array.cpp(55,5)
   <Remainder loop for vectorization>
      remark #25015: Estimate of max trip count of loop=12
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm(2047,10):remark #34014: optimization advice for memset: increase the destination's alignment to 16 (and use __assume_aligned) to speed up library implementation
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm(2047,10):remark #34026: call to memset implemented as a call to optimized library version
array.cpp(39,1):remark #34051: REGISTER ALLOCATION : [__ZN5Array8AllocateEii] array.cpp:39

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   14[ rax rdx rcx rsi rdi r8-r15 zmm0]
        
    Routine temporaries
        Total         :     163
            Global    :      58
            Local     :     105
        Regenerable   :      31
        Spilled       :       5
        
    Routine stack
        Variables     :      28 bytes*
            Reads     :       4 [0.00e+00 ~ 0.0%]
            Writes    :       8 [0.00e+00 ~ 0.0%]
        Spills        :       8 bytes*
            Reads     :       1 [0.00e+00 ~ 0.0%]
            Writes    :       1 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: Array::Allocate(Array *, int, int, int)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (Array::Allocate(Array *, int, int, int)) [3/74=4.1%] array.cpp(59,1)
  -> EXTERN: (61,32) operator new[](size_t)
  -> EXTERN: (62,30) operator new[](size_t)
  -> EXTERN: (63,30) operator new[](size_t)
  -> EXTERN: (66,5) ___cxa_begin_catch
  -> EXTERN: (66,5) ___cxa_end_catch
  -> (67,19) std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char, std::__1::char_traits<char>> &, const char *) (isz = 266) (sz = 275)
     [[ Callee not marked with inlining pragma ]]
  -> (67,58) std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char, std::__1::char_traits<char>> &, const char *) (isz = 266) (sz = 275)
     [[ Callee not marked with inlining pragma ]]
  -> INDIRECT- (VIRTUAL): (67,61)  EXPR_CONV.SI64.P64(*((SI64*) (_e.19832_V$1cf.0.59->__vptr_V$2d_2.14 + EXPR_CONV.SI32.I64(2(SI32)) * 8(I64))))
     [[ Unable to inline indirect callsite ]]
  -> INLINE (MANUAL): (67,70) std::__1::basic_ostream<char, std::__1::char_traits<char>>::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char>> *, std::__1::basic_ostream<char, std::__1::char_traits<char>> &(*)(std::__1::basic_ostream<char, std::__1::char_traits<char>> &)) (isz = 0) (sz = 9)
    -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ostream:(322,12) std::__1::endl<char, std::__1::char_traits<char>>(std::__1::basic_ostream<char, std::__1::char_traits<char>> &) (isz = 20) (sz = 27)
      -> EXTERN: (1034,10) std::__1::basic_ostream<char, std::__1::char_traits<char>>::put(std::__1::basic_ostream<char, std::__1::char_traits<char>> *, std::__1::basic_ostream<char, std::__1::char_traits<char>>::char_type)
      -> INLINE (MANUAL): (1034,19) std::__1::basic_ios<char, std::__1::char_traits<char>>::widen(const std::__1::basic_ios<char, std::__1::char_traits<char>> *, char) const (isz = 28) (sz = 37)
        -> /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,12) std::__1::use_facet<std::__1::ctype<char>>(const std::__1::locale &) (isz = 3) (sz = 10)
           [[ Callee not marked with inlining pragma ]]
        -> EXTERN: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,41) std::__1::locale::~locale(std::__1::locale *)
        -> EXTERN: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,41) std::__1::ios_base::getloc(std::__1::locale *, const std::__1::ios_base *) const
        -> EXTERN: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,51) std::__1::locale::~locale(std::__1::locale *)
        -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,51) std::__1::ctype<char>::widen(const std::__1::ctype<char> *, char) const (isz = 6) (sz = 15)
          -> INDIRECT- (VIRTUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/__locale:(603,25)  EXPR_CONV.SI64.P64(*((SI64*) (this_14503_V$155.0.26.159->__vptr_V$4d_2.12 + EXPR_CONV.SI32.I64(7(SI32)) * 8(I64))))
             [[ Unable to inline indirect callsite ]]
      -> EXTERN: (1035,10) std::__1::basic_ostream<char, std::__1::char_traits<char>>::flush(std::__1::basic_ostream<char, std::__1::char_traits<char>> *)
  -> (68,19) std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char, std::__1::char_traits<char>> &, const char *) (isz = 266) (sz = 275)
     [[ Callee not marked with inlining pragma ]]
  -> (68,31) std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char, std::__1::char_traits<char>> &, const char *) (isz = 266) (sz = 275)
     [[ Callee not marked with inlining pragma ]]
  -> (68,43) std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char, std::__1::char_traits<char>> &, const char *) (isz = 266) (sz = 275)
     [[ Callee not marked with inlining pragma ]]
  -> EXTERN: (68,58) std::__1::basic_ostream<char, std::__1::char_traits<char>>::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char>> *, int)
  -> (68,70) std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char, std::__1::char_traits<char>> &, const char *) (isz = 266) (sz = 275)
     [[ Callee not marked with inlining pragma ]]
  -> INLINE (MANUAL): (68,78) std::__1::basic_ostream<char, std::__1::char_traits<char>>::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char>> *, std::__1::basic_ostream<char, std::__1::char_traits<char>> &(*)(std::__1::basic_ostream<char, std::__1::char_traits<char>> &)) (isz = 0) (sz = 9)
    -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ostream:(322,12) std::__1::endl<char, std::__1::char_traits<char>>(std::__1::basic_ostream<char, std::__1::char_traits<char>> &) (isz = 20) (sz = 27)
      -> EXTERN: (1034,10) std::__1::basic_ostream<char, std::__1::char_traits<char>>::put(std::__1::basic_ostream<char, std::__1::char_traits<char>> *, std::__1::basic_ostream<char, std::__1::char_traits<char>>::char_type)
      -> INLINE (MANUAL): (1034,19) std::__1::basic_ios<char, std::__1::char_traits<char>>::widen(const std::__1::basic_ios<char, std::__1::char_traits<char>> *, char) const (isz = 28) (sz = 37)
        -> /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,12) std::__1::use_facet<std::__1::ctype<char>>(const std::__1::locale &) (isz = 3) (sz = 10)
           [[ Callee not marked with inlining pragma ]]
        -> EXTERN: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,41) std::__1::locale::~locale(std::__1::locale *)
        -> EXTERN: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,41) std::__1::ios_base::getloc(std::__1::locale *, const std::__1::ios_base *) const
        -> EXTERN: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,51) std::__1::locale::~locale(std::__1::locale *)
        -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,51) std::__1::ctype<char>::widen(const std::__1::ctype<char> *, char) const (isz = 6) (sz = 15)
          -> INDIRECT- (VIRTUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/__locale:(603,25)  EXPR_CONV.SI64.P64(*((SI64*) (this_14503_V$155.0.26.162->__vptr_V$4d_2.12 + EXPR_CONV.SI32.I64(7(SI32)) * 8(I64))))
             [[ Unable to inline indirect callsite ]]
      -> EXTERN: (1035,10) std::__1::basic_ostream<char, std::__1::char_traits<char>>::flush(std::__1::basic_ostream<char, std::__1::char_traits<char>> *)
  -> (69,9) Array::Destroy(Array *) (isz = 19) (sz = 24)
     [[ Callee not marked with inlining pragma ]]
  -> EXTERN: (70,9) exit(int)
  -> INLINE (MANUAL): (79,5) std::__1::fill<real *, double>(real *, real *, const double &) (isz = 1) (sz = 10)
    -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm:(2099,5) std::__1::__fill<real *, double>(real *, real *, const double &, std::__1::random_access_iterator_tag) (isz = 3) (sz = 14)
      -> INLINE (MANUAL): (2091,5) std::__1::fill_n<real *, long, double>(real *, long, const double &) (isz = 4) (sz = 15)
        -> INLINE (MANUAL): (2072,11) std::__1::__fill_n<real *, long, double>(real *, long, const double &) (isz = 13) (sz = 24)
        -> INLINE (MANUAL): (2072,36) std::__1::__convert_to_integral(long) (isz = 0) (sz = 5)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at array.cpp(74,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this->ptr2[i1] (75:9) and this->ptr2 (75:9)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at array.cpp(74,5)
<Remainder>
LOOP END

LOOP BEGIN at array.cpp(76,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this->ptr3[i2] (77:9) and this->ptr3 (77:9)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at array.cpp(76,5)
<Remainder>
LOOP END

LOOP BEGIN at /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm(2046,5) inlined into array.cpp(79,5)
   remark #25408: memset generated
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm(2046,5) inlined into array.cpp(79,5)
      remark #15389: vectorization support: reference *__first has unaligned access   [ /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm(2047,10) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 2
      remark #15399: vectorization support: unroll factor set to 2
      remark #15309: vectorization support: normalized vectorization overhead 0.300
      remark #15300: LOOP WAS VECTORIZED
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 2.500 
      remark #15478: estimated potential speedup: 1.090 
      remark #15488: --- end vector cost summary ---
      remark #25015: Estimate of max trip count of loop=3
   LOOP END

   LOOP BEGIN at /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm(2046,5) inlined into array.cpp(79,5)
   <Remainder loop for vectorization>
      remark #25015: Estimate of max trip count of loop=12
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm(2047,10):remark #34014: optimization advice for memset: increase the destination's alignment to 16 (and use __assume_aligned) to speed up library implementation
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm(2047,10):remark #34026: call to memset implemented as a call to optimized library version
array.cpp(59,1):remark #34051: REGISTER ALLOCATION : [__ZN5Array8AllocateEiii] array.cpp:59

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   16[ rax rdx rcx rbx rbp rsi rdi r8-r15 zmm0]
        
    Routine temporaries
        Total         :     197
            Global    :      68
            Local     :     129
        Regenerable   :      32
        Spilled       :       6
        
    Routine stack
        Variables     :      28 bytes*
            Reads     :       4 [0.00e+00 ~ 0.0%]
            Writes    :       8 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: Array::Array(Array *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (Array::Array(Array *)) [4/74=5.4%] array.cpp(84,1)
  -> INLINE: (85,5) Array::Init(Array *) (isz = 28) (sz = 33)
    -> INLINE (MANUAL): (12,12) std::__1::__get_nullptr_t() (isz = 3) (sz = 8)
      -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/cstddef:(85,94) std::__1::nullptr_t::nullptr_t(std::__1::nullptr_t *, long) (isz = 0) (sz = 6)
    -> DELETED: (12,12) std::__1::nullptr_t::operator real *<real>(const std::__1::nullptr_t *) const (isz = 0) (sz = 5)
    -> INLINE (MANUAL): (12,28) std::__1::__get_nullptr_t() (isz = 3) (sz = 8)
      -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/cstddef:(85,94) std::__1::nullptr_t::nullptr_t(std::__1::nullptr_t *, long) (isz = 0) (sz = 6)
    -> DELETED: (12,28) std::__1::nullptr_t::operator real **<real *>(const std::__1::nullptr_t *) const (isz = 0) (sz = 5)
    -> INLINE (MANUAL): (12,44) std::__1::__get_nullptr_t() (isz = 3) (sz = 8)
      -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/cstddef:(85,94) std::__1::nullptr_t::nullptr_t(std::__1::nullptr_t *, long) (isz = 0) (sz = 6)
    -> DELETED: (12,44) std::__1::nullptr_t::operator real ***<real **>(const std::__1::nullptr_t *) const (isz = 0) (sz = 5)


    Report from: Code generation optimizations [cg]

array.cpp(84,1):remark #34051: REGISTER ALLOCATION : [__ZN5ArrayC1Ev] array.cpp:84

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rdx rdi]
        
    Routine temporaries
        Total         :      10
            Global    :       0
            Local     :      10
        Regenerable   :       2
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: Array::Array(Array *const)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (Array::Array(Array *const)) [5/74=6.8%] array.cpp(83,8)
  -> INLINE: (83,8) Array::Array(Array *) (isz = 28) (sz = 33)
    -> INLINE: (85,5) Array::Init(Array *) (isz = 28) (sz = 33)
      -> INLINE (MANUAL): (12,12) std::__1::__get_nullptr_t() (isz = 3) (sz = 8)
        -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/cstddef:(85,94) std::__1::nullptr_t::nullptr_t(std::__1::nullptr_t *, long) (isz = 0) (sz = 6)
      -> DELETED: (12,12) std::__1::nullptr_t::operator real *<real>(const std::__1::nullptr_t *) const (isz = 0) (sz = 5)
      -> INLINE (MANUAL): (12,28) std::__1::__get_nullptr_t() (isz = 3) (sz = 8)
        -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/cstddef:(85,94) std::__1::nullptr_t::nullptr_t(std::__1::nullptr_t *, long) (isz = 0) (sz = 6)
      -> DELETED: (12,28) std::__1::nullptr_t::operator real **<real *>(const std::__1::nullptr_t *) const (isz = 0) (sz = 5)
      -> INLINE (MANUAL): (12,44) std::__1::__get_nullptr_t() (isz = 3) (sz = 8)
        -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/cstddef:(85,94) std::__1::nullptr_t::nullptr_t(std::__1::nullptr_t *, long) (isz = 0) (sz = 6)
      -> DELETED: (12,44) std::__1::nullptr_t::operator real ***<real **>(const std::__1::nullptr_t *) const (isz = 0) (sz = 5)


    Report from: Code generation optimizations [cg]

array.cpp(83,8):remark #34051: REGISTER ALLOCATION : [__ZN5ArrayC2Ev] array.cpp:83

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rdx rdi]
        
    Routine temporaries
        Total         :      10
            Global    :       0
            Local     :      10
        Regenerable   :       2
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: Array::Array(Array *, int)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (Array::Array(Array *, int)) [6/74=8.1%] array.cpp(89,1)
  -> INLINE: (90,5) Array::Init(Array *) (isz = 28) (sz = 33)
    -> INLINE (MANUAL): (12,12) std::__1::__get_nullptr_t() (isz = 3) (sz = 8)
      -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/cstddef:(85,94) std::__1::nullptr_t::nullptr_t(std::__1::nullptr_t *, long) (isz = 0) (sz = 6)
    -> DELETED: (12,12) std::__1::nullptr_t::operator real *<real>(const std::__1::nullptr_t *) const (isz = 0) (sz = 5)
    -> INLINE (MANUAL): (12,28) std::__1::__get_nullptr_t() (isz = 3) (sz = 8)
      -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/cstddef:(85,94) std::__1::nullptr_t::nullptr_t(std::__1::nullptr_t *, long) (isz = 0) (sz = 6)
    -> DELETED: (12,28) std::__1::nullptr_t::operator real **<real *>(const std::__1::nullptr_t *) const (isz = 0) (sz = 5)
    -> INLINE (MANUAL): (12,44) std::__1::__get_nullptr_t() (isz = 3) (sz = 8)
      -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/cstddef:(85,94) std::__1::nullptr_t::nullptr_t(std::__1::nullptr_t *, long) (isz = 0) (sz = 6)
    -> DELETED: (12,44) std::__1::nullptr_t::operator real ***<real **>(const std::__1::nullptr_t *) const (isz = 0) (sz = 5)
  -> INLINE: (91,5) Array::Allocate(Array *, int) (isz = 93) (sz = 100)
    -> EXTERN: (25,28) operator new[](size_t)
    -> EXTERN: (28,5) ___cxa_begin_catch
    -> EXTERN: (28,5) ___cxa_end_catch
    -> (29,19) std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char, std::__1::char_traits<char>> &, const char *) (isz = 266) (sz = 275)
       [[ Callee not marked with inlining pragma ]]
    -> (29,58) std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char, std::__1::char_traits<char>> &, const char *) (isz = 266) (sz = 275)
       [[ Callee not marked with inlining pragma ]]
    -> INDIRECT- (VIRTUAL): (29,61)  EXPR_CONV.SI64.P64(*((SI64*) (_e.19366_V$1b9.0.57.313->__vptr_V$2d_2.14 + EXPR_CONV.SI32.I64(2(SI32)) * 8(I64))))
       [[ Unable to inline indirect callsite ]]
    -> INLINE (MANUAL): (29,70) std::__1::basic_ostream<char, std::__1::char_traits<char>>::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char>> *, std::__1::basic_ostream<char, std::__1::char_traits<char>> &(*)(std::__1::basic_ostream<char, std::__1::char_traits<char>> &)) (isz = 0) (sz = 9)
      -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ostream:(322,12) std::__1::endl<char, std::__1::char_traits<char>>(std::__1::basic_ostream<char, std::__1::char_traits<char>> &) (isz = 20) (sz = 27)
        -> EXTERN: (1034,10) std::__1::basic_ostream<char, std::__1::char_traits<char>>::put(std::__1::basic_ostream<char, std::__1::char_traits<char>> *, std::__1::basic_ostream<char, std::__1::char_traits<char>>::char_type)
        -> INLINE (MANUAL): (1034,19) std::__1::basic_ios<char, std::__1::char_traits<char>>::widen(const std::__1::basic_ios<char, std::__1::char_traits<char>> *, char) const (isz = 28) (sz = 37)
          -> /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,12) std::__1::use_facet<std::__1::ctype<char>>(const std::__1::locale &) (isz = 3) (sz = 10)
             [[ Callee not marked with inlining pragma ]]
          -> EXTERN: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,41) std::__1::ios_base::getloc(std::__1::locale *, const std::__1::ios_base *) const
          -> EXTERN: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,41) std::__1::locale::~locale(std::__1::locale *)
          -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,51) std::__1::ctype<char>::widen(const std::__1::ctype<char> *, char) const (isz = 6) (sz = 15)
            -> INDIRECT- (VIRTUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/__locale:(603,25)  EXPR_CONV.SI64.P64(*((SI64*) (this_14503_V$155.0.26.322->__vptr_V$4d_2.12 + EXPR_CONV.SI32.I64(7(SI32)) * 8(I64))))
               [[ Unable to inline indirect callsite ]]
          -> EXTERN: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,51) std::__1::locale::~locale(std::__1::locale *)
        -> EXTERN: (1035,10) std::__1::basic_ostream<char, std::__1::char_traits<char>>::flush(std::__1::basic_ostream<char, std::__1::char_traits<char>> *)
    -> (30,19) std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char, std::__1::char_traits<char>> &, const char *) (isz = 266) (sz = 275)
       [[ Callee not marked with inlining pragma ]]
    -> (30,31) std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char, std::__1::char_traits<char>> &, const char *) (isz = 266) (sz = 275)
       [[ Callee not marked with inlining pragma ]]
    -> (30,43) std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char, std::__1::char_traits<char>> &, const char *) (isz = 266) (sz = 275)
       [[ Callee not marked with inlining pragma ]]
    -> EXTERN: (30,58) std::__1::basic_ostream<char, std::__1::char_traits<char>>::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char>> *, int)
    -> (30,70) std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char, std::__1::char_traits<char>> &, const char *) (isz = 266) (sz = 275)
       [[ Callee not marked with inlining pragma ]]
    -> INLINE (MANUAL): (30,78) std::__1::basic_ostream<char, std::__1::char_traits<char>>::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char>> *, std::__1::basic_ostream<char, std::__1::char_traits<char>> &(*)(std::__1::basic_ostream<char, std::__1::char_traits<char>> &)) (isz = 0) (sz = 9)
      -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ostream:(322,12) std::__1::endl<char, std::__1::char_traits<char>>(std::__1::basic_ostream<char, std::__1::char_traits<char>> &) (isz = 20) (sz = 27)
        -> EXTERN: (1034,10) std::__1::basic_ostream<char, std::__1::char_traits<char>>::put(std::__1::basic_ostream<char, std::__1::char_traits<char>> *, std::__1::basic_ostream<char, std::__1::char_traits<char>>::char_type)
        -> INLINE (MANUAL): (1034,19) std::__1::basic_ios<char, std::__1::char_traits<char>>::widen(const std::__1::basic_ios<char, std::__1::char_traits<char>> *, char) const (isz = 28) (sz = 37)
          -> /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,12) std::__1::use_facet<std::__1::ctype<char>>(const std::__1::locale &) (isz = 3) (sz = 10)
             [[ Callee not marked with inlining pragma ]]
          -> EXTERN: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,41) std::__1::ios_base::getloc(std::__1::locale *, const std::__1::ios_base *) const
          -> EXTERN: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,41) std::__1::locale::~locale(std::__1::locale *)
          -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,51) std::__1::ctype<char>::widen(const std::__1::ctype<char> *, char) const (isz = 6) (sz = 15)
            -> INDIRECT- (VIRTUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/__locale:(603,25)  EXPR_CONV.SI64.P64(*((SI64*) (this_14503_V$155.0.26.326->__vptr_V$4d_2.12 + EXPR_CONV.SI32.I64(7(SI32)) * 8(I64))))
               [[ Unable to inline indirect callsite ]]
          -> EXTERN: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,51) std::__1::locale::~locale(std::__1::locale *)
        -> EXTERN: (1035,10) std::__1::basic_ostream<char, std::__1::char_traits<char>>::flush(std::__1::basic_ostream<char, std::__1::char_traits<char>> *)
    -> (31,9) Array::Destroy(Array *) (isz = 19) (sz = 24)
       [[ Callee not marked with inlining pragma ]]
    -> EXTERN: (32,9) exit(int)
    -> INLINE (MANUAL): (35,5) std::__1::fill<real *, double>(real *, real *, const double &) (isz = 1) (sz = 10)
      -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm:(2099,5) std::__1::__fill<real *, double>(real *, real *, const double &, std::__1::random_access_iterator_tag) (isz = 3) (sz = 14)
        -> INLINE (MANUAL): (2091,5) std::__1::fill_n<real *, long, double>(real *, long, const double &) (isz = 4) (sz = 15)
          -> INLINE (MANUAL): (2072,11) std::__1::__fill_n<real *, long, double>(real *, long, const double &) (isz = 13) (sz = 24)
          -> INLINE (MANUAL): (2072,36) std::__1::__convert_to_integral(long) (isz = 0) (sz = 5)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm(2046,5) inlined into array.cpp(91,5)
   remark #25408: memset generated
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm(2046,5) inlined into array.cpp(91,5)
      remark #15389: vectorization support: reference *__first has unaligned access   [ /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm(2047,10) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 2
      remark #15399: vectorization support: unroll factor set to 2
      remark #15309: vectorization support: normalized vectorization overhead 0.300
      remark #15300: LOOP WAS VECTORIZED
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 2.500 
      remark #15478: estimated potential speedup: 1.090 
      remark #15488: --- end vector cost summary ---
      remark #25015: Estimate of max trip count of loop=3
   LOOP END

   LOOP BEGIN at /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm(2046,5) inlined into array.cpp(91,5)
   <Remainder loop for vectorization>
      remark #25015: Estimate of max trip count of loop=12
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm(2047,10):remark #34014: optimization advice for memset: increase the destination's alignment to 16 (and use __assume_aligned) to speed up library implementation
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm(2047,10):remark #34026: call to memset implemented as a call to optimized library version
array.cpp(89,1):remark #34051: REGISTER ALLOCATION : [__ZN5ArrayC1Ei] array.cpp:89

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   10[ rax rdx rcx rbx rbp rsi rdi r14-r15 zmm0]
        
    Routine temporaries
        Total         :     129
            Global    :      47
            Local     :      82
        Regenerable   :      30
        Spilled       :       5
        
    Routine stack
        Variables     :      28 bytes*
            Reads     :       4 [0.00e+00 ~ 0.0%]
            Writes    :       8 [0.00e+00 ~ 0.0%]
        Spills        :       8 bytes*
            Reads     :       1 [0.00e+00 ~ 0.0%]
            Writes    :       1 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: Array::Array(Array *const, int)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (Array::Array(Array *const, int)) [7/74=9.5%] array.cpp(88,8)
  -> INLINE: (88,8) Array::Array(Array *, int) (isz = 125) (sz = 132)
    -> INLINE: (90,5) Array::Init(Array *) (isz = 28) (sz = 33)
      -> INLINE (MANUAL): (12,12) std::__1::__get_nullptr_t() (isz = 3) (sz = 8)
        -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/cstddef:(85,94) std::__1::nullptr_t::nullptr_t(std::__1::nullptr_t *, long) (isz = 0) (sz = 6)
      -> DELETED: (12,12) std::__1::nullptr_t::operator real *<real>(const std::__1::nullptr_t *) const (isz = 0) (sz = 5)
      -> INLINE (MANUAL): (12,28) std::__1::__get_nullptr_t() (isz = 3) (sz = 8)
        -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/cstddef:(85,94) std::__1::nullptr_t::nullptr_t(std::__1::nullptr_t *, long) (isz = 0) (sz = 6)
      -> DELETED: (12,28) std::__1::nullptr_t::operator real **<real *>(const std::__1::nullptr_t *) const (isz = 0) (sz = 5)
      -> INLINE (MANUAL): (12,44) std::__1::__get_nullptr_t() (isz = 3) (sz = 8)
        -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/cstddef:(85,94) std::__1::nullptr_t::nullptr_t(std::__1::nullptr_t *, long) (isz = 0) (sz = 6)
      -> DELETED: (12,44) std::__1::nullptr_t::operator real ***<real **>(const std::__1::nullptr_t *) const (isz = 0) (sz = 5)
    -> INLINE: (91,5) Array::Allocate(Array *, int) (isz = 93) (sz = 100)
      -> EXTERN: (25,28) operator new[](size_t)
      -> EXTERN: (28,5) ___cxa_begin_catch
      -> EXTERN: (28,5) ___cxa_end_catch
      -> (29,19) std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char, std::__1::char_traits<char>> &, const char *) (isz = 266) (sz = 275)
         [[ Callee not marked with inlining pragma ]]
      -> (29,58) std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char, std::__1::char_traits<char>> &, const char *) (isz = 266) (sz = 275)
         [[ Callee not marked with inlining pragma ]]
      -> INDIRECT- (VIRTUAL): (29,61)  EXPR_CONV.SI64.P64(*((SI64*) (_e.19366_V$1b9.0.57.327->__vptr_V$2d_2.14 + EXPR_CONV.SI32.I64(2(SI32)) * 8(I64))))
         [[ Unable to inline indirect callsite ]]
      -> INLINE (MANUAL): (29,70) std::__1::basic_ostream<char, std::__1::char_traits<char>>::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char>> *, std::__1::basic_ostream<char, std::__1::char_traits<char>> &(*)(std::__1::basic_ostream<char, std::__1::char_traits<char>> &)) (isz = 0) (sz = 9)
        -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ostream:(322,12) std::__1::endl<char, std::__1::char_traits<char>>(std::__1::basic_ostream<char, std::__1::char_traits<char>> &) (isz = 20) (sz = 27)
          -> EXTERN: (1034,10) std::__1::basic_ostream<char, std::__1::char_traits<char>>::put(std::__1::basic_ostream<char, std::__1::char_traits<char>> *, std::__1::basic_ostream<char, std::__1::char_traits<char>>::char_type)
          -> INLINE (MANUAL): (1034,19) std::__1::basic_ios<char, std::__1::char_traits<char>>::widen(const std::__1::basic_ios<char, std::__1::char_traits<char>> *, char) const (isz = 28) (sz = 37)
            -> /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,12) std::__1::use_facet<std::__1::ctype<char>>(const std::__1::locale &) (isz = 3) (sz = 10)
               [[ Callee not marked with inlining pragma ]]
            -> EXTERN: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,41) std::__1::ios_base::getloc(std::__1::locale *, const std::__1::ios_base *) const
            -> EXTERN: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,41) std::__1::locale::~locale(std::__1::locale *)
            -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,51) std::__1::ctype<char>::widen(const std::__1::ctype<char> *, char) const (isz = 6) (sz = 15)
              -> INDIRECT- (VIRTUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/__locale:(603,25)  EXPR_CONV.SI64.P64(*((SI64*) (this_14503_V$155.0.26.336->__vptr_V$4d_2.12 + EXPR_CONV.SI32.I64(7(SI32)) * 8(I64))))
                 [[ Unable to inline indirect callsite ]]
            -> EXTERN: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,51) std::__1::locale::~locale(std::__1::locale *)
          -> EXTERN: (1035,10) std::__1::basic_ostream<char, std::__1::char_traits<char>>::flush(std::__1::basic_ostream<char, std::__1::char_traits<char>> *)
      -> (30,19) std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char, std::__1::char_traits<char>> &, const char *) (isz = 266) (sz = 275)
         [[ Callee not marked with inlining pragma ]]
      -> (30,31) std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char, std::__1::char_traits<char>> &, const char *) (isz = 266) (sz = 275)
         [[ Callee not marked with inlining pragma ]]
      -> (30,43) std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char, std::__1::char_traits<char>> &, const char *) (isz = 266) (sz = 275)
         [[ Callee not marked with inlining pragma ]]
      -> EXTERN: (30,58) std::__1::basic_ostream<char, std::__1::char_traits<char>>::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char>> *, int)
      -> (30,70) std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char, std::__1::char_traits<char>> &, const char *) (isz = 266) (sz = 275)
         [[ Callee not marked with inlining pragma ]]
      -> INLINE (MANUAL): (30,78) std::__1::basic_ostream<char, std::__1::char_traits<char>>::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char>> *, std::__1::basic_ostream<char, std::__1::char_traits<char>> &(*)(std::__1::basic_ostream<char, std::__1::char_traits<char>> &)) (isz = 0) (sz = 9)
        -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ostream:(322,12) std::__1::endl<char, std::__1::char_traits<char>>(std::__1::basic_ostream<char, std::__1::char_traits<char>> &) (isz = 20) (sz = 27)
          -> EXTERN: (1034,10) std::__1::basic_ostream<char, std::__1::char_traits<char>>::put(std::__1::basic_ostream<char, std::__1::char_traits<char>> *, std::__1::basic_ostream<char, std::__1::char_traits<char>>::char_type)
          -> INLINE (MANUAL): (1034,19) std::__1::basic_ios<char, std::__1::char_traits<char>>::widen(const std::__1::basic_ios<char, std::__1::char_traits<char>> *, char) const (isz = 28) (sz = 37)
            -> /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,12) std::__1::use_facet<std::__1::ctype<char>>(const std::__1::locale &) (isz = 3) (sz = 10)
               [[ Callee not marked with inlining pragma ]]
            -> EXTERN: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,41) std::__1::ios_base::getloc(std::__1::locale *, const std::__1::ios_base *) const
            -> EXTERN: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,41) std::__1::locale::~locale(std::__1::locale *)
            -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,51) std::__1::ctype<char>::widen(const std::__1::ctype<char> *, char) const (isz = 6) (sz = 15)
              -> INDIRECT- (VIRTUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/__locale:(603,25)  EXPR_CONV.SI64.P64(*((SI64*) (this_14503_V$155.0.26.340->__vptr_V$4d_2.12 + EXPR_CONV.SI32.I64(7(SI32)) * 8(I64))))
                 [[ Unable to inline indirect callsite ]]
            -> EXTERN: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,51) std::__1::locale::~locale(std::__1::locale *)
          -> EXTERN: (1035,10) std::__1::basic_ostream<char, std::__1::char_traits<char>>::flush(std::__1::basic_ostream<char, std::__1::char_traits<char>> *)
      -> (31,9) Array::Destroy(Array *) (isz = 19) (sz = 24)
         [[ Callee not marked with inlining pragma ]]
      -> EXTERN: (32,9) exit(int)
      -> INLINE (MANUAL): (35,5) std::__1::fill<real *, double>(real *, real *, const double &) (isz = 1) (sz = 10)
        -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm:(2099,5) std::__1::__fill<real *, double>(real *, real *, const double &, std::__1::random_access_iterator_tag) (isz = 3) (sz = 14)
          -> INLINE (MANUAL): (2091,5) std::__1::fill_n<real *, long, double>(real *, long, const double &) (isz = 4) (sz = 15)
            -> INLINE (MANUAL): (2072,11) std::__1::__fill_n<real *, long, double>(real *, long, const double &) (isz = 13) (sz = 24)
            -> INLINE (MANUAL): (2072,36) std::__1::__convert_to_integral(long) (isz = 0) (sz = 5)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm(2046,5) inlined into array.cpp(88,8)
   remark #25408: memset generated
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm(2046,5) inlined into array.cpp(88,8)
      remark #15389: vectorization support: reference *__first has unaligned access   [ /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm(2047,10) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 2
      remark #15399: vectorization support: unroll factor set to 2
      remark #15309: vectorization support: normalized vectorization overhead 0.300
      remark #15300: LOOP WAS VECTORIZED
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 2.500 
      remark #15478: estimated potential speedup: 1.090 
      remark #15488: --- end vector cost summary ---
      remark #25015: Estimate of max trip count of loop=3
   LOOP END

   LOOP BEGIN at /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm(2046,5) inlined into array.cpp(88,8)
   <Remainder loop for vectorization>
      remark #25015: Estimate of max trip count of loop=12
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm(2047,10):remark #34014: optimization advice for memset: increase the destination's alignment to 16 (and use __assume_aligned) to speed up library implementation
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm(2047,10):remark #34026: call to memset implemented as a call to optimized library version
array.cpp(88,8):remark #34051: REGISTER ALLOCATION : [__ZN5ArrayC2Ei] array.cpp:88

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   10[ rax rdx rcx rbx rbp rsi rdi r14-r15 zmm0]
        
    Routine temporaries
        Total         :     129
            Global    :      47
            Local     :      82
        Regenerable   :      30
        Spilled       :       5
        
    Routine stack
        Variables     :      28 bytes*
            Reads     :       4 [0.00e+00 ~ 0.0%]
            Writes    :       8 [0.00e+00 ~ 0.0%]
        Spills        :       8 bytes*
            Reads     :       1 [0.00e+00 ~ 0.0%]
            Writes    :       1 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: Array::Array(Array *, int, int)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (Array::Array(Array *, int, int)) [8/74=10.8%] array.cpp(97,1)
  -> INLINE: (98,5) Array::Init(Array *) (isz = 28) (sz = 33)
    -> INLINE (MANUAL): (12,12) std::__1::__get_nullptr_t() (isz = 3) (sz = 8)
      -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/cstddef:(85,94) std::__1::nullptr_t::nullptr_t(std::__1::nullptr_t *, long) (isz = 0) (sz = 6)
    -> DELETED: (12,12) std::__1::nullptr_t::operator real *<real>(const std::__1::nullptr_t *) const (isz = 0) (sz = 5)
    -> INLINE (MANUAL): (12,28) std::__1::__get_nullptr_t() (isz = 3) (sz = 8)
      -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/cstddef:(85,94) std::__1::nullptr_t::nullptr_t(std::__1::nullptr_t *, long) (isz = 0) (sz = 6)
    -> DELETED: (12,28) std::__1::nullptr_t::operator real **<real *>(const std::__1::nullptr_t *) const (isz = 0) (sz = 5)
    -> INLINE (MANUAL): (12,44) std::__1::__get_nullptr_t() (isz = 3) (sz = 8)
      -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/cstddef:(85,94) std::__1::nullptr_t::nullptr_t(std::__1::nullptr_t *, long) (isz = 0) (sz = 6)
    -> DELETED: (12,44) std::__1::nullptr_t::operator real ***<real **>(const std::__1::nullptr_t *) const (isz = 0) (sz = 5)
  -> INLINE: (99,5) Array::Allocate(Array *, int, int) (isz = 123) (sz = 132)
    -> EXTERN: (41,29) operator new[](size_t)
    -> EXTERN: (42,29) operator new[](size_t)
    -> EXTERN: (45,5) ___cxa_begin_catch
    -> EXTERN: (45,5) ___cxa_end_catch
    -> (46,19) std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char, std::__1::char_traits<char>> &, const char *) (isz = 266) (sz = 275)
       [[ Callee not marked with inlining pragma ]]
    -> (46,58) std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char, std::__1::char_traits<char>> &, const char *) (isz = 266) (sz = 275)
       [[ Callee not marked with inlining pragma ]]
    -> INDIRECT- (VIRTUAL): (46,61)  EXPR_CONV.SI64.P64(*((SI64*) (_e.19611_V$1c8.0.58.355->__vptr_V$2d_2.14 + EXPR_CONV.SI32.I64(2(SI32)) * 8(I64))))
       [[ Unable to inline indirect callsite ]]
    -> INLINE (MANUAL): (46,70) std::__1::basic_ostream<char, std::__1::char_traits<char>>::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char>> *, std::__1::basic_ostream<char, std::__1::char_traits<char>> &(*)(std::__1::basic_ostream<char, std::__1::char_traits<char>> &)) (isz = 0) (sz = 9)
      -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ostream:(322,12) std::__1::endl<char, std::__1::char_traits<char>>(std::__1::basic_ostream<char, std::__1::char_traits<char>> &) (isz = 20) (sz = 27)
        -> EXTERN: (1034,10) std::__1::basic_ostream<char, std::__1::char_traits<char>>::put(std::__1::basic_ostream<char, std::__1::char_traits<char>> *, std::__1::basic_ostream<char, std::__1::char_traits<char>>::char_type)
        -> INLINE (MANUAL): (1034,19) std::__1::basic_ios<char, std::__1::char_traits<char>>::widen(const std::__1::basic_ios<char, std::__1::char_traits<char>> *, char) const (isz = 28) (sz = 37)
          -> /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,12) std::__1::use_facet<std::__1::ctype<char>>(const std::__1::locale &) (isz = 3) (sz = 10)
             [[ Callee not marked with inlining pragma ]]
          -> EXTERN: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,41) std::__1::ios_base::getloc(std::__1::locale *, const std::__1::ios_base *) const
          -> EXTERN: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,41) std::__1::locale::~locale(std::__1::locale *)
          -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,51) std::__1::ctype<char>::widen(const std::__1::ctype<char> *, char) const (isz = 6) (sz = 15)
            -> INDIRECT- (VIRTUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/__locale:(603,25)  EXPR_CONV.SI64.P64(*((SI64*) (this_14503_V$155.0.26.364->__vptr_V$4d_2.12 + EXPR_CONV.SI32.I64(7(SI32)) * 8(I64))))
               [[ Unable to inline indirect callsite ]]
          -> EXTERN: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,51) std::__1::locale::~locale(std::__1::locale *)
        -> EXTERN: (1035,10) std::__1::basic_ostream<char, std::__1::char_traits<char>>::flush(std::__1::basic_ostream<char, std::__1::char_traits<char>> *)
    -> (47,19) std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char, std::__1::char_traits<char>> &, const char *) (isz = 266) (sz = 275)
       [[ Callee not marked with inlining pragma ]]
    -> (47,31) std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char, std::__1::char_traits<char>> &, const char *) (isz = 266) (sz = 275)
       [[ Callee not marked with inlining pragma ]]
    -> (47,43) std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char, std::__1::char_traits<char>> &, const char *) (isz = 266) (sz = 275)
       [[ Callee not marked with inlining pragma ]]
    -> EXTERN: (47,58) std::__1::basic_ostream<char, std::__1::char_traits<char>>::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char>> *, int)
    -> (47,70) std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char, std::__1::char_traits<char>> &, const char *) (isz = 266) (sz = 275)
       [[ Callee not marked with inlining pragma ]]
    -> INLINE (MANUAL): (47,78) std::__1::basic_ostream<char, std::__1::char_traits<char>>::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char>> *, std::__1::basic_ostream<char, std::__1::char_traits<char>> &(*)(std::__1::basic_ostream<char, std::__1::char_traits<char>> &)) (isz = 0) (sz = 9)
      -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ostream:(322,12) std::__1::endl<char, std::__1::char_traits<char>>(std::__1::basic_ostream<char, std::__1::char_traits<char>> &) (isz = 20) (sz = 27)
        -> EXTERN: (1034,10) std::__1::basic_ostream<char, std::__1::char_traits<char>>::put(std::__1::basic_ostream<char, std::__1::char_traits<char>> *, std::__1::basic_ostream<char, std::__1::char_traits<char>>::char_type)
        -> INLINE (MANUAL): (1034,19) std::__1::basic_ios<char, std::__1::char_traits<char>>::widen(const std::__1::basic_ios<char, std::__1::char_traits<char>> *, char) const (isz = 28) (sz = 37)
          -> /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,12) std::__1::use_facet<std::__1::ctype<char>>(const std::__1::locale &) (isz = 3) (sz = 10)
             [[ Callee not marked with inlining pragma ]]
          -> EXTERN: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,41) std::__1::ios_base::getloc(std::__1::locale *, const std::__1::ios_base *) const
          -> EXTERN: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,41) std::__1::locale::~locale(std::__1::locale *)
          -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,51) std::__1::ctype<char>::widen(const std::__1::ctype<char> *, char) const (isz = 6) (sz = 15)
            -> INDIRECT- (VIRTUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/__locale:(603,25)  EXPR_CONV.SI64.P64(*((SI64*) (this_14503_V$155.0.26.368->__vptr_V$4d_2.12 + EXPR_CONV.SI32.I64(7(SI32)) * 8(I64))))
               [[ Unable to inline indirect callsite ]]
          -> EXTERN: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,51) std::__1::locale::~locale(std::__1::locale *)
        -> EXTERN: (1035,10) std::__1::basic_ostream<char, std::__1::char_traits<char>>::flush(std::__1::basic_ostream<char, std::__1::char_traits<char>> *)
    -> (48,9) Array::Destroy(Array *) (isz = 19) (sz = 24)
       [[ Callee not marked with inlining pragma ]]
    -> EXTERN: (49,9) exit(int)
    -> INLINE (MANUAL): (55,5) std::__1::fill<real *, double>(real *, real *, const double &) (isz = 1) (sz = 10)
      -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm:(2099,5) std::__1::__fill<real *, double>(real *, real *, const double &, std::__1::random_access_iterator_tag) (isz = 3) (sz = 14)
        -> INLINE (MANUAL): (2091,5) std::__1::fill_n<real *, long, double>(real *, long, const double &) (isz = 4) (sz = 15)
          -> INLINE (MANUAL): (2072,11) std::__1::__fill_n<real *, long, double>(real *, long, const double &) (isz = 13) (sz = 24)
          -> INLINE (MANUAL): (2072,36) std::__1::__convert_to_integral(long) (isz = 0) (sz = 5)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at array.cpp(52,5) inlined into array.cpp(99,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this->ptr2[_i1] (53:9) and this->ptr2 (53:9)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at array.cpp(52,5) inlined into array.cpp(99,5)
<Remainder>
LOOP END

LOOP BEGIN at /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm(2046,5) inlined into array.cpp(99,5)
   remark #25408: memset generated
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm(2046,5) inlined into array.cpp(99,5)
      remark #15389: vectorization support: reference *__first has unaligned access   [ /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm(2047,10) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 2
      remark #15399: vectorization support: unroll factor set to 2
      remark #15309: vectorization support: normalized vectorization overhead 0.300
      remark #15300: LOOP WAS VECTORIZED
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 2.500 
      remark #15478: estimated potential speedup: 1.090 
      remark #15488: --- end vector cost summary ---
      remark #25015: Estimate of max trip count of loop=3
   LOOP END

   LOOP BEGIN at /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm(2046,5) inlined into array.cpp(99,5)
   <Remainder loop for vectorization>
      remark #25015: Estimate of max trip count of loop=12
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm(2047,10):remark #34014: optimization advice for memset: increase the destination's alignment to 16 (and use __assume_aligned) to speed up library implementation
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm(2047,10):remark #34026: call to memset implemented as a call to optimized library version
array.cpp(97,1):remark #34051: REGISTER ALLOCATION : [__ZN5ArrayC1Eii] array.cpp:97

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbx rbp rsi rdi r8-r11 r13-r15 zmm0]
        
    Routine temporaries
        Total         :     162
            Global    :      57
            Local     :     105
        Regenerable   :      30
        Spilled       :       5
        
    Routine stack
        Variables     :      28 bytes*
            Reads     :       4 [0.00e+00 ~ 0.0%]
            Writes    :       8 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: Array::Array(Array *const, int, int)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (Array::Array(Array *const, int, int)) [9/74=12.2%] array.cpp(96,8)
  -> INLINE: (96,8) Array::Array(Array *, int, int) (isz = 157) (sz = 166)
    -> INLINE: (98,5) Array::Init(Array *) (isz = 28) (sz = 33)
      -> INLINE (MANUAL): (12,12) std::__1::__get_nullptr_t() (isz = 3) (sz = 8)
        -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/cstddef:(85,94) std::__1::nullptr_t::nullptr_t(std::__1::nullptr_t *, long) (isz = 0) (sz = 6)
      -> DELETED: (12,12) std::__1::nullptr_t::operator real *<real>(const std::__1::nullptr_t *) const (isz = 0) (sz = 5)
      -> INLINE (MANUAL): (12,28) std::__1::__get_nullptr_t() (isz = 3) (sz = 8)
        -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/cstddef:(85,94) std::__1::nullptr_t::nullptr_t(std::__1::nullptr_t *, long) (isz = 0) (sz = 6)
      -> DELETED: (12,28) std::__1::nullptr_t::operator real **<real *>(const std::__1::nullptr_t *) const (isz = 0) (sz = 5)
      -> INLINE (MANUAL): (12,44) std::__1::__get_nullptr_t() (isz = 3) (sz = 8)
        -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/cstddef:(85,94) std::__1::nullptr_t::nullptr_t(std::__1::nullptr_t *, long) (isz = 0) (sz = 6)
      -> DELETED: (12,44) std::__1::nullptr_t::operator real ***<real **>(const std::__1::nullptr_t *) const (isz = 0) (sz = 5)
    -> INLINE: (99,5) Array::Allocate(Array *, int, int) (isz = 123) (sz = 132)
      -> EXTERN: (41,29) operator new[](size_t)
      -> EXTERN: (42,29) operator new[](size_t)
      -> EXTERN: (45,5) ___cxa_begin_catch
      -> EXTERN: (45,5) ___cxa_end_catch
      -> (46,19) std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char, std::__1::char_traits<char>> &, const char *) (isz = 266) (sz = 275)
         [[ Callee not marked with inlining pragma ]]
      -> (46,58) std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char, std::__1::char_traits<char>> &, const char *) (isz = 266) (sz = 275)
         [[ Callee not marked with inlining pragma ]]
      -> INDIRECT- (VIRTUAL): (46,61)  EXPR_CONV.SI64.P64(*((SI64*) (_e.19611_V$1c8.0.58.369->__vptr_V$2d_2.14 + EXPR_CONV.SI32.I64(2(SI32)) * 8(I64))))
         [[ Unable to inline indirect callsite ]]
      -> INLINE (MANUAL): (46,70) std::__1::basic_ostream<char, std::__1::char_traits<char>>::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char>> *, std::__1::basic_ostream<char, std::__1::char_traits<char>> &(*)(std::__1::basic_ostream<char, std::__1::char_traits<char>> &)) (isz = 0) (sz = 9)
        -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ostream:(322,12) std::__1::endl<char, std::__1::char_traits<char>>(std::__1::basic_ostream<char, std::__1::char_traits<char>> &) (isz = 20) (sz = 27)
          -> EXTERN: (1034,10) std::__1::basic_ostream<char, std::__1::char_traits<char>>::put(std::__1::basic_ostream<char, std::__1::char_traits<char>> *, std::__1::basic_ostream<char, std::__1::char_traits<char>>::char_type)
          -> INLINE (MANUAL): (1034,19) std::__1::basic_ios<char, std::__1::char_traits<char>>::widen(const std::__1::basic_ios<char, std::__1::char_traits<char>> *, char) const (isz = 28) (sz = 37)
            -> /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,12) std::__1::use_facet<std::__1::ctype<char>>(const std::__1::locale &) (isz = 3) (sz = 10)
               [[ Callee not marked with inlining pragma ]]
            -> EXTERN: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,41) std::__1::ios_base::getloc(std::__1::locale *, const std::__1::ios_base *) const
            -> EXTERN: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,41) std::__1::locale::~locale(std::__1::locale *)
            -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,51) std::__1::ctype<char>::widen(const std::__1::ctype<char> *, char) const (isz = 6) (sz = 15)
              -> INDIRECT- (VIRTUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/__locale:(603,25)  EXPR_CONV.SI64.P64(*((SI64*) (this_14503_V$155.0.26.378->__vptr_V$4d_2.12 + EXPR_CONV.SI32.I64(7(SI32)) * 8(I64))))
                 [[ Unable to inline indirect callsite ]]
            -> EXTERN: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,51) std::__1::locale::~locale(std::__1::locale *)
          -> EXTERN: (1035,10) std::__1::basic_ostream<char, std::__1::char_traits<char>>::flush(std::__1::basic_ostream<char, std::__1::char_traits<char>> *)
      -> (47,19) std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char, std::__1::char_traits<char>> &, const char *) (isz = 266) (sz = 275)
         [[ Callee not marked with inlining pragma ]]
      -> (47,31) std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char, std::__1::char_traits<char>> &, const char *) (isz = 266) (sz = 275)
         [[ Callee not marked with inlining pragma ]]
      -> (47,43) std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char, std::__1::char_traits<char>> &, const char *) (isz = 266) (sz = 275)
         [[ Callee not marked with inlining pragma ]]
      -> EXTERN: (47,58) std::__1::basic_ostream<char, std::__1::char_traits<char>>::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char>> *, int)
      -> (47,70) std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char, std::__1::char_traits<char>> &, const char *) (isz = 266) (sz = 275)
         [[ Callee not marked with inlining pragma ]]
      -> INLINE (MANUAL): (47,78) std::__1::basic_ostream<char, std::__1::char_traits<char>>::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char>> *, std::__1::basic_ostream<char, std::__1::char_traits<char>> &(*)(std::__1::basic_ostream<char, std::__1::char_traits<char>> &)) (isz = 0) (sz = 9)
        -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ostream:(322,12) std::__1::endl<char, std::__1::char_traits<char>>(std::__1::basic_ostream<char, std::__1::char_traits<char>> &) (isz = 20) (sz = 27)
          -> EXTERN: (1034,10) std::__1::basic_ostream<char, std::__1::char_traits<char>>::put(std::__1::basic_ostream<char, std::__1::char_traits<char>> *, std::__1::basic_ostream<char, std::__1::char_traits<char>>::char_type)
          -> INLINE (MANUAL): (1034,19) std::__1::basic_ios<char, std::__1::char_traits<char>>::widen(const std::__1::basic_ios<char, std::__1::char_traits<char>> *, char) const (isz = 28) (sz = 37)
            -> /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,12) std::__1::use_facet<std::__1::ctype<char>>(const std::__1::locale &) (isz = 3) (sz = 10)
               [[ Callee not marked with inlining pragma ]]
            -> EXTERN: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,41) std::__1::ios_base::getloc(std::__1::locale *, const std::__1::ios_base *) const
            -> EXTERN: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,41) std::__1::locale::~locale(std::__1::locale *)
            -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,51) std::__1::ctype<char>::widen(const std::__1::ctype<char> *, char) const (isz = 6) (sz = 15)
              -> INDIRECT- (VIRTUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/__locale:(603,25)  EXPR_CONV.SI64.P64(*((SI64*) (this_14503_V$155.0.26.382->__vptr_V$4d_2.12 + EXPR_CONV.SI32.I64(7(SI32)) * 8(I64))))
                 [[ Unable to inline indirect callsite ]]
            -> EXTERN: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,51) std::__1::locale::~locale(std::__1::locale *)
          -> EXTERN: (1035,10) std::__1::basic_ostream<char, std::__1::char_traits<char>>::flush(std::__1::basic_ostream<char, std::__1::char_traits<char>> *)
      -> (48,9) Array::Destroy(Array *) (isz = 19) (sz = 24)
         [[ Callee not marked with inlining pragma ]]
      -> EXTERN: (49,9) exit(int)
      -> INLINE (MANUAL): (55,5) std::__1::fill<real *, double>(real *, real *, const double &) (isz = 1) (sz = 10)
        -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm:(2099,5) std::__1::__fill<real *, double>(real *, real *, const double &, std::__1::random_access_iterator_tag) (isz = 3) (sz = 14)
          -> INLINE (MANUAL): (2091,5) std::__1::fill_n<real *, long, double>(real *, long, const double &) (isz = 4) (sz = 15)
            -> INLINE (MANUAL): (2072,11) std::__1::__fill_n<real *, long, double>(real *, long, const double &) (isz = 13) (sz = 24)
            -> INLINE (MANUAL): (2072,36) std::__1::__convert_to_integral(long) (isz = 0) (sz = 5)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at array.cpp(52,5) inlined into array.cpp(96,8)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this->ptr2[_i1] (53:9) and this->ptr2 (53:9)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at array.cpp(52,5) inlined into array.cpp(96,8)
<Remainder>
LOOP END

LOOP BEGIN at /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm(2046,5) inlined into array.cpp(96,8)
   remark #25408: memset generated
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm(2046,5) inlined into array.cpp(96,8)
      remark #15389: vectorization support: reference *__first has unaligned access   [ /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm(2047,10) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 2
      remark #15399: vectorization support: unroll factor set to 2
      remark #15309: vectorization support: normalized vectorization overhead 0.300
      remark #15300: LOOP WAS VECTORIZED
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 2.500 
      remark #15478: estimated potential speedup: 1.090 
      remark #15488: --- end vector cost summary ---
      remark #25015: Estimate of max trip count of loop=3
   LOOP END

   LOOP BEGIN at /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm(2046,5) inlined into array.cpp(96,8)
   <Remainder loop for vectorization>
      remark #25015: Estimate of max trip count of loop=12
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm(2047,10):remark #34014: optimization advice for memset: increase the destination's alignment to 16 (and use __assume_aligned) to speed up library implementation
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm(2047,10):remark #34026: call to memset implemented as a call to optimized library version
array.cpp(96,8):remark #34051: REGISTER ALLOCATION : [__ZN5ArrayC2Eii] array.cpp:96

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbx rbp rsi rdi r8-r11 r13-r15 zmm0]
        
    Routine temporaries
        Total         :     162
            Global    :      57
            Local     :     105
        Regenerable   :      30
        Spilled       :       5
        
    Routine stack
        Variables     :      28 bytes*
            Reads     :       4 [0.00e+00 ~ 0.0%]
            Writes    :       8 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: Array::Array(Array *, int, int, int)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (Array::Array(Array *, int, int, int)) [10/74=13.5%] array.cpp(105,1)
  -> INLINE: (106,5) Array::Init(Array *) (isz = 28) (sz = 33)
    -> INLINE (MANUAL): (12,12) std::__1::__get_nullptr_t() (isz = 3) (sz = 8)
      -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/cstddef:(85,94) std::__1::nullptr_t::nullptr_t(std::__1::nullptr_t *, long) (isz = 0) (sz = 6)
    -> DELETED: (12,12) std::__1::nullptr_t::operator real *<real>(const std::__1::nullptr_t *) const (isz = 0) (sz = 5)
    -> INLINE (MANUAL): (12,28) std::__1::__get_nullptr_t() (isz = 3) (sz = 8)
      -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/cstddef:(85,94) std::__1::nullptr_t::nullptr_t(std::__1::nullptr_t *, long) (isz = 0) (sz = 6)
    -> DELETED: (12,28) std::__1::nullptr_t::operator real **<real *>(const std::__1::nullptr_t *) const (isz = 0) (sz = 5)
    -> INLINE (MANUAL): (12,44) std::__1::__get_nullptr_t() (isz = 3) (sz = 8)
      -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/cstddef:(85,94) std::__1::nullptr_t::nullptr_t(std::__1::nullptr_t *, long) (isz = 0) (sz = 6)
    -> DELETED: (12,44) std::__1::nullptr_t::operator real ***<real **>(const std::__1::nullptr_t *) const (isz = 0) (sz = 5)
  -> INLINE: (107,5) Array::Allocate(Array *, int, int, int) (isz = 156) (sz = 167)
    -> EXTERN: (61,32) operator new[](size_t)
    -> EXTERN: (62,30) operator new[](size_t)
    -> EXTERN: (63,30) operator new[](size_t)
    -> EXTERN: (66,5) ___cxa_end_catch
    -> EXTERN: (66,5) ___cxa_begin_catch
    -> (67,19) std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char, std::__1::char_traits<char>> &, const char *) (isz = 266) (sz = 275)
       [[ Callee not marked with inlining pragma ]]
    -> (67,58) std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char, std::__1::char_traits<char>> &, const char *) (isz = 266) (sz = 275)
       [[ Callee not marked with inlining pragma ]]
    -> INDIRECT- (VIRTUAL): (67,61)  EXPR_CONV.SI64.P64(*((SI64*) (_e.19832_V$1cf.0.59.475->__vptr_V$2d_2.14 + EXPR_CONV.SI32.I64(2(SI32)) * 8(I64))))
       [[ Unable to inline indirect callsite ]]
    -> INLINE (MANUAL): (67,70) std::__1::basic_ostream<char, std::__1::char_traits<char>>::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char>> *, std::__1::basic_ostream<char, std::__1::char_traits<char>> &(*)(std::__1::basic_ostream<char, std::__1::char_traits<char>> &)) (isz = 0) (sz = 9)
      -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ostream:(322,12) std::__1::endl<char, std::__1::char_traits<char>>(std::__1::basic_ostream<char, std::__1::char_traits<char>> &) (isz = 20) (sz = 27)
        -> EXTERN: (1034,10) std::__1::basic_ostream<char, std::__1::char_traits<char>>::put(std::__1::basic_ostream<char, std::__1::char_traits<char>> *, std::__1::basic_ostream<char, std::__1::char_traits<char>>::char_type)
        -> INLINE (MANUAL): (1034,19) std::__1::basic_ios<char, std::__1::char_traits<char>>::widen(const std::__1::basic_ios<char, std::__1::char_traits<char>> *, char) const (isz = 28) (sz = 37)
          -> /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,12) std::__1::use_facet<std::__1::ctype<char>>(const std::__1::locale &) (isz = 3) (sz = 10)
             [[ Callee not marked with inlining pragma ]]
          -> EXTERN: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,41) std::__1::ios_base::getloc(std::__1::locale *, const std::__1::ios_base *) const
          -> EXTERN: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,41) std::__1::locale::~locale(std::__1::locale *)
          -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,51) std::__1::ctype<char>::widen(const std::__1::ctype<char> *, char) const (isz = 6) (sz = 15)
            -> INDIRECT- (VIRTUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/__locale:(603,25)  EXPR_CONV.SI64.P64(*((SI64*) (this_14503_V$155.0.26.479->__vptr_V$4d_2.12 + EXPR_CONV.SI32.I64(7(SI32)) * 8(I64))))
               [[ Unable to inline indirect callsite ]]
          -> EXTERN: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,51) std::__1::locale::~locale(std::__1::locale *)
        -> EXTERN: (1035,10) std::__1::basic_ostream<char, std::__1::char_traits<char>>::flush(std::__1::basic_ostream<char, std::__1::char_traits<char>> *)
    -> (68,19) std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char, std::__1::char_traits<char>> &, const char *) (isz = 266) (sz = 275)
       [[ Callee not marked with inlining pragma ]]
    -> (68,31) std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char, std::__1::char_traits<char>> &, const char *) (isz = 266) (sz = 275)
       [[ Callee not marked with inlining pragma ]]
    -> (68,43) std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char, std::__1::char_traits<char>> &, const char *) (isz = 266) (sz = 275)
       [[ Callee not marked with inlining pragma ]]
    -> EXTERN: (68,58) std::__1::basic_ostream<char, std::__1::char_traits<char>>::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char>> *, int)
    -> (68,70) std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char, std::__1::char_traits<char>> &, const char *) (isz = 266) (sz = 275)
       [[ Callee not marked with inlining pragma ]]
    -> INLINE (MANUAL): (68,78) std::__1::basic_ostream<char, std::__1::char_traits<char>>::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char>> *, std::__1::basic_ostream<char, std::__1::char_traits<char>> &(*)(std::__1::basic_ostream<char, std::__1::char_traits<char>> &)) (isz = 0) (sz = 9)
      -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ostream:(322,12) std::__1::endl<char, std::__1::char_traits<char>>(std::__1::basic_ostream<char, std::__1::char_traits<char>> &) (isz = 20) (sz = 27)
        -> EXTERN: (1034,10) std::__1::basic_ostream<char, std::__1::char_traits<char>>::put(std::__1::basic_ostream<char, std::__1::char_traits<char>> *, std::__1::basic_ostream<char, std::__1::char_traits<char>>::char_type)
        -> INLINE (MANUAL): (1034,19) std::__1::basic_ios<char, std::__1::char_traits<char>>::widen(const std::__1::basic_ios<char, std::__1::char_traits<char>> *, char) const (isz = 28) (sz = 37)
          -> /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,12) std::__1::use_facet<std::__1::ctype<char>>(const std::__1::locale &) (isz = 3) (sz = 10)
             [[ Callee not marked with inlining pragma ]]
          -> EXTERN: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,41) std::__1::ios_base::getloc(std::__1::locale *, const std::__1::ios_base *) const
          -> EXTERN: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,41) std::__1::locale::~locale(std::__1::locale *)
          -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,51) std::__1::ctype<char>::widen(const std::__1::ctype<char> *, char) const (isz = 6) (sz = 15)
            -> INDIRECT- (VIRTUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/__locale:(603,25)  EXPR_CONV.SI64.P64(*((SI64*) (this_14503_V$155.0.26.483->__vptr_V$4d_2.12 + EXPR_CONV.SI32.I64(7(SI32)) * 8(I64))))
               [[ Unable to inline indirect callsite ]]
          -> EXTERN: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,51) std::__1::locale::~locale(std::__1::locale *)
        -> EXTERN: (1035,10) std::__1::basic_ostream<char, std::__1::char_traits<char>>::flush(std::__1::basic_ostream<char, std::__1::char_traits<char>> *)
    -> (69,9) Array::Destroy(Array *) (isz = 19) (sz = 24)
       [[ Callee not marked with inlining pragma ]]
    -> EXTERN: (70,9) exit(int)
    -> INLINE (MANUAL): (79,5) std::__1::fill<real *, double>(real *, real *, const double &) (isz = 1) (sz = 10)
      -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm:(2099,5) std::__1::__fill<real *, double>(real *, real *, const double &, std::__1::random_access_iterator_tag) (isz = 3) (sz = 14)
        -> INLINE (MANUAL): (2091,5) std::__1::fill_n<real *, long, double>(real *, long, const double &) (isz = 4) (sz = 15)
          -> INLINE (MANUAL): (2072,11) std::__1::__fill_n<real *, long, double>(real *, long, const double &) (isz = 13) (sz = 24)
          -> INLINE (MANUAL): (2072,36) std::__1::__convert_to_integral(long) (isz = 0) (sz = 5)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at array.cpp(74,5) inlined into array.cpp(107,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this->ptr2[_i1] (75:9) and this->ptr2 (75:9)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at array.cpp(74,5) inlined into array.cpp(107,5)
<Remainder>
LOOP END

LOOP BEGIN at array.cpp(76,5) inlined into array.cpp(107,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this->ptr3[_i2] (77:9) and this->ptr3 (77:9)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at array.cpp(76,5) inlined into array.cpp(107,5)
<Remainder>
LOOP END

LOOP BEGIN at /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm(2046,5) inlined into array.cpp(107,5)
   remark #25408: memset generated
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm(2046,5) inlined into array.cpp(107,5)
      remark #15389: vectorization support: reference *__first has unaligned access   [ /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm(2047,10) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 2
      remark #15399: vectorization support: unroll factor set to 2
      remark #15309: vectorization support: normalized vectorization overhead 0.300
      remark #15300: LOOP WAS VECTORIZED
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 2.500 
      remark #15478: estimated potential speedup: 1.090 
      remark #15488: --- end vector cost summary ---
      remark #25015: Estimate of max trip count of loop=3
   LOOP END

   LOOP BEGIN at /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm(2046,5) inlined into array.cpp(107,5)
   <Remainder loop for vectorization>
      remark #25015: Estimate of max trip count of loop=12
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm(2047,10):remark #34014: optimization advice for memset: increase the destination's alignment to 16 (and use __assume_aligned) to speed up library implementation
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm(2047,10):remark #34026: call to memset implemented as a call to optimized library version
array.cpp(105,1):remark #34051: REGISTER ALLOCATION : [__ZN5ArrayC1Eiii] array.cpp:105

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   16[ rax rdx rcx rbx rbp rsi rdi r8-r15 zmm0]
        
    Routine temporaries
        Total         :     195
            Global    :      66
            Local     :     129
        Regenerable   :      30
        Spilled       :       6
        
    Routine stack
        Variables     :      28 bytes*
            Reads     :       4 [0.00e+00 ~ 0.0%]
            Writes    :       8 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: Array::Array(Array *const, int, int, int)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (Array::Array(Array *const, int, int, int)) [11/74=14.9%] array.cpp(104,8)
  -> INLINE: (104,8) Array::Array(Array *, int, int, int) (isz = 192) (sz = 203)
    -> INLINE: (106,5) Array::Init(Array *) (isz = 28) (sz = 33)
      -> INLINE (MANUAL): (12,12) std::__1::__get_nullptr_t() (isz = 3) (sz = 8)
        -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/cstddef:(85,94) std::__1::nullptr_t::nullptr_t(std::__1::nullptr_t *, long) (isz = 0) (sz = 6)
      -> DELETED: (12,12) std::__1::nullptr_t::operator real *<real>(const std::__1::nullptr_t *) const (isz = 0) (sz = 5)
      -> INLINE (MANUAL): (12,28) std::__1::__get_nullptr_t() (isz = 3) (sz = 8)
        -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/cstddef:(85,94) std::__1::nullptr_t::nullptr_t(std::__1::nullptr_t *, long) (isz = 0) (sz = 6)
      -> DELETED: (12,28) std::__1::nullptr_t::operator real **<real *>(const std::__1::nullptr_t *) const (isz = 0) (sz = 5)
      -> INLINE (MANUAL): (12,44) std::__1::__get_nullptr_t() (isz = 3) (sz = 8)
        -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/cstddef:(85,94) std::__1::nullptr_t::nullptr_t(std::__1::nullptr_t *, long) (isz = 0) (sz = 6)
      -> DELETED: (12,44) std::__1::nullptr_t::operator real ***<real **>(const std::__1::nullptr_t *) const (isz = 0) (sz = 5)
    -> INLINE: (107,5) Array::Allocate(Array *, int, int, int) (isz = 156) (sz = 167)
      -> EXTERN: (61,32) operator new[](size_t)
      -> EXTERN: (62,30) operator new[](size_t)
      -> EXTERN: (63,30) operator new[](size_t)
      -> EXTERN: (66,5) ___cxa_end_catch
      -> EXTERN: (66,5) ___cxa_begin_catch
      -> (67,19) std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char, std::__1::char_traits<char>> &, const char *) (isz = 266) (sz = 275)
         [[ Callee not marked with inlining pragma ]]
      -> (67,58) std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char, std::__1::char_traits<char>> &, const char *) (isz = 266) (sz = 275)
         [[ Callee not marked with inlining pragma ]]
      -> INDIRECT- (VIRTUAL): (67,61)  EXPR_CONV.SI64.P64(*((SI64*) (_e.19832_V$1cf.0.59.489->__vptr_V$2d_2.14 + EXPR_CONV.SI32.I64(2(SI32)) * 8(I64))))
         [[ Unable to inline indirect callsite ]]
      -> INLINE (MANUAL): (67,70) std::__1::basic_ostream<char, std::__1::char_traits<char>>::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char>> *, std::__1::basic_ostream<char, std::__1::char_traits<char>> &(*)(std::__1::basic_ostream<char, std::__1::char_traits<char>> &)) (isz = 0) (sz = 9)
        -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ostream:(322,12) std::__1::endl<char, std::__1::char_traits<char>>(std::__1::basic_ostream<char, std::__1::char_traits<char>> &) (isz = 20) (sz = 27)
          -> EXTERN: (1034,10) std::__1::basic_ostream<char, std::__1::char_traits<char>>::put(std::__1::basic_ostream<char, std::__1::char_traits<char>> *, std::__1::basic_ostream<char, std::__1::char_traits<char>>::char_type)
          -> INLINE (MANUAL): (1034,19) std::__1::basic_ios<char, std::__1::char_traits<char>>::widen(const std::__1::basic_ios<char, std::__1::char_traits<char>> *, char) const (isz = 28) (sz = 37)
            -> /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,12) std::__1::use_facet<std::__1::ctype<char>>(const std::__1::locale &) (isz = 3) (sz = 10)
               [[ Callee not marked with inlining pragma ]]
            -> EXTERN: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,41) std::__1::ios_base::getloc(std::__1::locale *, const std::__1::ios_base *) const
            -> EXTERN: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,41) std::__1::locale::~locale(std::__1::locale *)
            -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,51) std::__1::ctype<char>::widen(const std::__1::ctype<char> *, char) const (isz = 6) (sz = 15)
              -> INDIRECT- (VIRTUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/__locale:(603,25)  EXPR_CONV.SI64.P64(*((SI64*) (this_14503_V$155.0.26.493->__vptr_V$4d_2.12 + EXPR_CONV.SI32.I64(7(SI32)) * 8(I64))))
                 [[ Unable to inline indirect callsite ]]
            -> EXTERN: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,51) std::__1::locale::~locale(std::__1::locale *)
          -> EXTERN: (1035,10) std::__1::basic_ostream<char, std::__1::char_traits<char>>::flush(std::__1::basic_ostream<char, std::__1::char_traits<char>> *)
      -> (68,19) std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char, std::__1::char_traits<char>> &, const char *) (isz = 266) (sz = 275)
         [[ Callee not marked with inlining pragma ]]
      -> (68,31) std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char, std::__1::char_traits<char>> &, const char *) (isz = 266) (sz = 275)
         [[ Callee not marked with inlining pragma ]]
      -> (68,43) std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char, std::__1::char_traits<char>> &, const char *) (isz = 266) (sz = 275)
         [[ Callee not marked with inlining pragma ]]
      -> EXTERN: (68,58) std::__1::basic_ostream<char, std::__1::char_traits<char>>::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char>> *, int)
      -> (68,70) std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char, std::__1::char_traits<char>> &, const char *) (isz = 266) (sz = 275)
         [[ Callee not marked with inlining pragma ]]
      -> INLINE (MANUAL): (68,78) std::__1::basic_ostream<char, std::__1::char_traits<char>>::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char>> *, std::__1::basic_ostream<char, std::__1::char_traits<char>> &(*)(std::__1::basic_ostream<char, std::__1::char_traits<char>> &)) (isz = 0) (sz = 9)
        -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ostream:(322,12) std::__1::endl<char, std::__1::char_traits<char>>(std::__1::basic_ostream<char, std::__1::char_traits<char>> &) (isz = 20) (sz = 27)
          -> EXTERN: (1034,10) std::__1::basic_ostream<char, std::__1::char_traits<char>>::put(std::__1::basic_ostream<char, std::__1::char_traits<char>> *, std::__1::basic_ostream<char, std::__1::char_traits<char>>::char_type)
          -> INLINE (MANUAL): (1034,19) std::__1::basic_ios<char, std::__1::char_traits<char>>::widen(const std::__1::basic_ios<char, std::__1::char_traits<char>> *, char) const (isz = 28) (sz = 37)
            -> /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,12) std::__1::use_facet<std::__1::ctype<char>>(const std::__1::locale &) (isz = 3) (sz = 10)
               [[ Callee not marked with inlining pragma ]]
            -> EXTERN: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,41) std::__1::ios_base::getloc(std::__1::locale *, const std::__1::ios_base *) const
            -> EXTERN: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,41) std::__1::locale::~locale(std::__1::locale *)
            -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,51) std::__1::ctype<char>::widen(const std::__1::ctype<char> *, char) const (isz = 6) (sz = 15)
              -> INDIRECT- (VIRTUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/__locale:(603,25)  EXPR_CONV.SI64.P64(*((SI64*) (this_14503_V$155.0.26.497->__vptr_V$4d_2.12 + EXPR_CONV.SI32.I64(7(SI32)) * 8(I64))))
                 [[ Unable to inline indirect callsite ]]
            -> EXTERN: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,51) std::__1::locale::~locale(std::__1::locale *)
          -> EXTERN: (1035,10) std::__1::basic_ostream<char, std::__1::char_traits<char>>::flush(std::__1::basic_ostream<char, std::__1::char_traits<char>> *)
      -> (69,9) Array::Destroy(Array *) (isz = 19) (sz = 24)
         [[ Callee not marked with inlining pragma ]]
      -> EXTERN: (70,9) exit(int)
      -> INLINE (MANUAL): (79,5) std::__1::fill<real *, double>(real *, real *, const double &) (isz = 1) (sz = 10)
        -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm:(2099,5) std::__1::__fill<real *, double>(real *, real *, const double &, std::__1::random_access_iterator_tag) (isz = 3) (sz = 14)
          -> INLINE (MANUAL): (2091,5) std::__1::fill_n<real *, long, double>(real *, long, const double &) (isz = 4) (sz = 15)
            -> INLINE (MANUAL): (2072,11) std::__1::__fill_n<real *, long, double>(real *, long, const double &) (isz = 13) (sz = 24)
            -> INLINE (MANUAL): (2072,36) std::__1::__convert_to_integral(long) (isz = 0) (sz = 5)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at array.cpp(74,5) inlined into array.cpp(104,8)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this->ptr2[_i1] (75:9) and this->ptr2 (75:9)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at array.cpp(74,5) inlined into array.cpp(104,8)
<Remainder>
LOOP END

LOOP BEGIN at array.cpp(76,5) inlined into array.cpp(104,8)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this->ptr3[_i2] (77:9) and this->ptr3 (77:9)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at array.cpp(76,5) inlined into array.cpp(104,8)
<Remainder>
LOOP END

LOOP BEGIN at /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm(2046,5) inlined into array.cpp(104,8)
   remark #25408: memset generated
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm(2046,5) inlined into array.cpp(104,8)
      remark #15389: vectorization support: reference *__first has unaligned access   [ /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm(2047,10) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 2
      remark #15399: vectorization support: unroll factor set to 2
      remark #15309: vectorization support: normalized vectorization overhead 0.300
      remark #15300: LOOP WAS VECTORIZED
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 2.500 
      remark #15478: estimated potential speedup: 1.090 
      remark #15488: --- end vector cost summary ---
      remark #25015: Estimate of max trip count of loop=3
   LOOP END

   LOOP BEGIN at /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm(2046,5) inlined into array.cpp(104,8)
   <Remainder loop for vectorization>
      remark #25015: Estimate of max trip count of loop=12
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm(2047,10):remark #34014: optimization advice for memset: increase the destination's alignment to 16 (and use __assume_aligned) to speed up library implementation
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm(2047,10):remark #34026: call to memset implemented as a call to optimized library version
array.cpp(104,8):remark #34051: REGISTER ALLOCATION : [__ZN5ArrayC2Eiii] array.cpp:104

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   16[ rax rdx rcx rbx rbp rsi rdi r8-r15 zmm0]
        
    Routine temporaries
        Total         :     195
            Global    :      66
            Local     :     129
        Regenerable   :      30
        Spilled       :       6
        
    Routine stack
        Variables     :      28 bytes*
            Reads     :       4 [0.00e+00 ~ 0.0%]
            Writes    :       8 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: Array::~Array(Array *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (Array::~Array(Array *)) [12/74=16.2%] array.cpp(114,1)
  -> INLINE: (115,5) Array::Destroy(Array *) (isz = 19) (sz = 24)
    -> EXTERN: (17,5) operator delete[](void *)
    -> EXTERN: (18,5) operator delete[](void *)
    -> EXTERN: (19,5) operator delete[](void *)


    Report from: Code generation optimizations [cg]

array.cpp(114,1):remark #34051: REGISTER ALLOCATION : [__ZN5ArrayD1Ev] array.cpp:114

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rbx rdi]
        
    Routine temporaries
        Total         :      14
            Global    :      10
            Local     :       4
        Regenerable   :       0
        Spilled       :       1
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: Array::~Array(Array *const)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (Array::~Array(Array *const)) [13/74=17.6%] array.cpp(113,8)
  -> INLINE: (113,8) Array::~Array(Array *) (isz = 19) (sz = 24)
    -> INLINE: (115,5) Array::Destroy(Array *) (isz = 19) (sz = 24)
      -> EXTERN: (17,5) operator delete[](void *)
      -> EXTERN: (18,5) operator delete[](void *)
      -> EXTERN: (19,5) operator delete[](void *)


    Report from: Code generation optimizations [cg]

array.cpp(113,8):remark #34051: REGISTER ALLOCATION : [__ZN5ArrayD2Ev] array.cpp:113

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rbx rdi]
        
    Routine temporaries
        Total         :      14
            Global    :      10
            Local     :       4
        Regenerable   :       0
        Spilled       :       1
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: Array::GetVal(const Array *, int) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (Array::GetVal(const Array *, int) const) array.hpp(29,31)

===========================================================================

Begin optimization report for: Array::GetVal(const Array *, int, int) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (Array::GetVal(const Array *, int, int) const) array.hpp(30,39)

===========================================================================

Begin optimization report for: Array::GetVal(const Array *, int, int, int) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (Array::GetVal(const Array *, int, int, int) const) array.hpp(31,47)

===========================================================================

Begin optimization report for: Array::GetPtr1(const Array *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (Array::GetPtr1(const Array *) const) array.hpp(32,27)

===========================================================================

Begin optimization report for: Array::size(const Array *, int *) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (Array::size(const Array *, int *) const) [18/74=24.3%] array.cpp(119,1)


    Report from: Code generation optimizations [cg]

array.cpp(119,1):remark #34051: REGISTER ALLOCATION : [__ZNK5Array4sizeEPi] array.cpp:119

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rsi rdi]
        
    Routine temporaries
        Total         :      11
            Global    :       0
            Local     :      11
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: Array::size(const Array *, int *, int *) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (Array::size(const Array *, int *, int *) const) [19/74=25.7%] array.cpp(124,1)


    Report from: Code generation optimizations [cg]

array.cpp(124,1):remark #34051: REGISTER ALLOCATION : [__ZNK5Array4sizeEPiS0_] array.cpp:124

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    5[ rax rdx rcx rsi rdi]
        
    Routine temporaries
        Total         :      14
            Global    :       0
            Local     :      14
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: Array::size(const Array *, int *, int *, int *) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (Array::size(const Array *, int *, int *, int *) const) [20/74=27.0%] array.cpp(130,1)


    Report from: Code generation optimizations [cg]

array.cpp(130,1):remark #34051: REGISTER ALLOCATION : [__ZNK5Array4sizeEPiS0_S0_] array.cpp:130

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    7[ rax rdx rcx rsi rdi r8-r9]
        
    Routine temporaries
        Total         :      17
            Global    :       0
            Local     :      17
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: Array::operator=(Array *, const Array &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (Array::operator=(Array *, const Array &)) [21/74=28.4%] array.cpp(138,1)
  -> INLINE: (140,9) Array::size(const Array *, int *, int *, int *) const (isz = 4) (sz = 15)
  -> INLINE: (146,9) Array::Destroy(Array *) (isz = 19) (sz = 24)
    -> EXTERN: (17,5) operator delete[](void *)
    -> EXTERN: (18,5) operator delete[](void *)
    -> EXTERN: (19,5) operator delete[](void *)
  -> INLINE: (154,18) Array::Allocate(Array *, int, int, int) (isz = 156) (sz = 167)
    -> EXTERN: (61,32) operator new[](size_t)
    -> EXTERN: (62,30) operator new[](size_t)
    -> EXTERN: (63,30) operator new[](size_t)
    -> EXTERN: (66,5) ___cxa_end_catch
    -> EXTERN: (66,5) ___cxa_begin_catch
    -> (67,19) std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char, std::__1::char_traits<char>> &, const char *) (isz = 266) (sz = 275)
       [[ Callee not marked with inlining pragma ]]
    -> (67,58) std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char, std::__1::char_traits<char>> &, const char *) (isz = 266) (sz = 275)
       [[ Callee not marked with inlining pragma ]]
    -> INDIRECT- (VIRTUAL): (67,61)  EXPR_CONV.SI64.P64(*((SI64*) (_e.19832_V$1cf.0.59.461->__vptr_V$2d_2.14 + EXPR_CONV.SI32.I64(2(SI32)) * 8(I64))))
       [[ Unable to inline indirect callsite ]]
    -> INLINE (MANUAL): (67,70) std::__1::basic_ostream<char, std::__1::char_traits<char>>::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char>> *, std::__1::basic_ostream<char, std::__1::char_traits<char>> &(*)(std::__1::basic_ostream<char, std::__1::char_traits<char>> &)) (isz = 0) (sz = 9)
      -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ostream:(322,12) std::__1::endl<char, std::__1::char_traits<char>>(std::__1::basic_ostream<char, std::__1::char_traits<char>> &) (isz = 20) (sz = 27)
        -> EXTERN: (1034,10) std::__1::basic_ostream<char, std::__1::char_traits<char>>::put(std::__1::basic_ostream<char, std::__1::char_traits<char>> *, std::__1::basic_ostream<char, std::__1::char_traits<char>>::char_type)
        -> INLINE (MANUAL): (1034,19) std::__1::basic_ios<char, std::__1::char_traits<char>>::widen(const std::__1::basic_ios<char, std::__1::char_traits<char>> *, char) const (isz = 28) (sz = 37)
          -> /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,12) std::__1::use_facet<std::__1::ctype<char>>(const std::__1::locale &) (isz = 3) (sz = 10)
             [[ Callee not marked with inlining pragma ]]
          -> EXTERN: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,41) std::__1::ios_base::getloc(std::__1::locale *, const std::__1::ios_base *) const
          -> EXTERN: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,41) std::__1::locale::~locale(std::__1::locale *)
          -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,51) std::__1::ctype<char>::widen(const std::__1::ctype<char> *, char) const (isz = 6) (sz = 15)
            -> INDIRECT- (VIRTUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/__locale:(603,25)  EXPR_CONV.SI64.P64(*((SI64*) (this_14503_V$155.0.26.465->__vptr_V$4d_2.12 + EXPR_CONV.SI32.I64(7(SI32)) * 8(I64))))
               [[ Unable to inline indirect callsite ]]
          -> EXTERN: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,51) std::__1::locale::~locale(std::__1::locale *)
        -> EXTERN: (1035,10) std::__1::basic_ostream<char, std::__1::char_traits<char>>::flush(std::__1::basic_ostream<char, std::__1::char_traits<char>> *)
    -> (68,19) std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char, std::__1::char_traits<char>> &, const char *) (isz = 266) (sz = 275)
       [[ Callee not marked with inlining pragma ]]
    -> (68,31) std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char, std::__1::char_traits<char>> &, const char *) (isz = 266) (sz = 275)
       [[ Callee not marked with inlining pragma ]]
    -> (68,43) std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char, std::__1::char_traits<char>> &, const char *) (isz = 266) (sz = 275)
       [[ Callee not marked with inlining pragma ]]
    -> EXTERN: (68,58) std::__1::basic_ostream<char, std::__1::char_traits<char>>::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char>> *, int)
    -> (68,70) std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char, std::__1::char_traits<char>> &, const char *) (isz = 266) (sz = 275)
       [[ Callee not marked with inlining pragma ]]
    -> INLINE (MANUAL): (68,78) std::__1::basic_ostream<char, std::__1::char_traits<char>>::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char>> *, std::__1::basic_ostream<char, std::__1::char_traits<char>> &(*)(std::__1::basic_ostream<char, std::__1::char_traits<char>> &)) (isz = 0) (sz = 9)
      -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ostream:(322,12) std::__1::endl<char, std::__1::char_traits<char>>(std::__1::basic_ostream<char, std::__1::char_traits<char>> &) (isz = 20) (sz = 27)
        -> EXTERN: (1034,10) std::__1::basic_ostream<char, std::__1::char_traits<char>>::put(std::__1::basic_ostream<char, std::__1::char_traits<char>> *, std::__1::basic_ostream<char, std::__1::char_traits<char>>::char_type)
        -> INLINE (MANUAL): (1034,19) std::__1::basic_ios<char, std::__1::char_traits<char>>::widen(const std::__1::basic_ios<char, std::__1::char_traits<char>> *, char) const (isz = 28) (sz = 37)
          -> /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,12) std::__1::use_facet<std::__1::ctype<char>>(const std::__1::locale &) (isz = 3) (sz = 10)
             [[ Callee not marked with inlining pragma ]]
          -> EXTERN: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,41) std::__1::ios_base::getloc(std::__1::locale *, const std::__1::ios_base *) const
          -> EXTERN: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,41) std::__1::locale::~locale(std::__1::locale *)
          -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,51) std::__1::ctype<char>::widen(const std::__1::ctype<char> *, char) const (isz = 6) (sz = 15)
            -> INDIRECT- (VIRTUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/__locale:(603,25)  EXPR_CONV.SI64.P64(*((SI64*) (this_14503_V$155.0.26.469->__vptr_V$4d_2.12 + EXPR_CONV.SI32.I64(7(SI32)) * 8(I64))))
               [[ Unable to inline indirect callsite ]]
          -> EXTERN: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,51) std::__1::locale::~locale(std::__1::locale *)
        -> EXTERN: (1035,10) std::__1::basic_ostream<char, std::__1::char_traits<char>>::flush(std::__1::basic_ostream<char, std::__1::char_traits<char>> *)
    -> (69,9) Array::Destroy(Array *) (isz = 19) (sz = 24)
       [[ Callee not marked with inlining pragma ]]
    -> EXTERN: (70,9) exit(int)
    -> INLINE (MANUAL): (79,5) std::__1::fill<real *, double>(real *, real *, const double &) (isz = 1) (sz = 10)
      -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm:(2099,5) std::__1::__fill<real *, double>(real *, real *, const double &, std::__1::random_access_iterator_tag) (isz = 3) (sz = 14)
        -> INLINE (MANUAL): (2091,5) std::__1::fill_n<real *, long, double>(real *, long, const double &) (isz = 4) (sz = 15)
          -> INLINE (MANUAL): (2072,11) std::__1::__fill_n<real *, long, double>(real *, long, const double &) (isz = 13) (sz = 24)
          -> INLINE (MANUAL): (2072,36) std::__1::__convert_to_integral(long) (isz = 0) (sz = 5)
  -> EXTERN: (155,9) memcpy(void *, const void *, size_t)
  -> INLINE (MANUAL): (155,26) Array::GetPtr1(const Array *) const (isz = 0) (sz = 6)
  -> INLINE: (159,18) Array::Allocate(Array *, int, int) (isz = 123) (sz = 132)
    -> EXTERN: (41,29) operator new[](size_t)
    -> EXTERN: (42,29) operator new[](size_t)
    -> EXTERN: (45,5) ___cxa_begin_catch
    -> EXTERN: (45,5) ___cxa_end_catch
    -> (46,19) std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char, std::__1::char_traits<char>> &, const char *) (isz = 266) (sz = 275)
       [[ Callee not marked with inlining pragma ]]
    -> (46,58) std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char, std::__1::char_traits<char>> &, const char *) (isz = 266) (sz = 275)
       [[ Callee not marked with inlining pragma ]]
    -> INDIRECT- (VIRTUAL): (46,61)  EXPR_CONV.SI64.P64(*((SI64*) (_e.19611_V$1c8.0.58.341->__vptr_V$2d_2.14 + EXPR_CONV.SI32.I64(2(SI32)) * 8(I64))))
       [[ Unable to inline indirect callsite ]]
    -> INLINE (MANUAL): (46,70) std::__1::basic_ostream<char, std::__1::char_traits<char>>::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char>> *, std::__1::basic_ostream<char, std::__1::char_traits<char>> &(*)(std::__1::basic_ostream<char, std::__1::char_traits<char>> &)) (isz = 0) (sz = 9)
      -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ostream:(322,12) std::__1::endl<char, std::__1::char_traits<char>>(std::__1::basic_ostream<char, std::__1::char_traits<char>> &) (isz = 20) (sz = 27)
        -> EXTERN: (1034,10) std::__1::basic_ostream<char, std::__1::char_traits<char>>::put(std::__1::basic_ostream<char, std::__1::char_traits<char>> *, std::__1::basic_ostream<char, std::__1::char_traits<char>>::char_type)
        -> INLINE (MANUAL): (1034,19) std::__1::basic_ios<char, std::__1::char_traits<char>>::widen(const std::__1::basic_ios<char, std::__1::char_traits<char>> *, char) const (isz = 28) (sz = 37)
          -> /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,12) std::__1::use_facet<std::__1::ctype<char>>(const std::__1::locale &) (isz = 3) (sz = 10)
             [[ Callee not marked with inlining pragma ]]
          -> EXTERN: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,41) std::__1::ios_base::getloc(std::__1::locale *, const std::__1::ios_base *) const
          -> EXTERN: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,41) std::__1::locale::~locale(std::__1::locale *)
          -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,51) std::__1::ctype<char>::widen(const std::__1::ctype<char> *, char) const (isz = 6) (sz = 15)
            -> INDIRECT- (VIRTUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/__locale:(603,25)  EXPR_CONV.SI64.P64(*((SI64*) (this_14503_V$155.0.26.350->__vptr_V$4d_2.12 + EXPR_CONV.SI32.I64(7(SI32)) * 8(I64))))
               [[ Unable to inline indirect callsite ]]
          -> EXTERN: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,51) std::__1::locale::~locale(std::__1::locale *)
        -> EXTERN: (1035,10) std::__1::basic_ostream<char, std::__1::char_traits<char>>::flush(std::__1::basic_ostream<char, std::__1::char_traits<char>> *)
    -> (47,19) std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char, std::__1::char_traits<char>> &, const char *) (isz = 266) (sz = 275)
       [[ Callee not marked with inlining pragma ]]
    -> (47,31) std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char, std::__1::char_traits<char>> &, const char *) (isz = 266) (sz = 275)
       [[ Callee not marked with inlining pragma ]]
    -> (47,43) std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char, std::__1::char_traits<char>> &, const char *) (isz = 266) (sz = 275)
       [[ Callee not marked with inlining pragma ]]
    -> EXTERN: (47,58) std::__1::basic_ostream<char, std::__1::char_traits<char>>::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char>> *, int)
    -> (47,70) std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char, std::__1::char_traits<char>> &, const char *) (isz = 266) (sz = 275)
       [[ Callee not marked with inlining pragma ]]
    -> INLINE (MANUAL): (47,78) std::__1::basic_ostream<char, std::__1::char_traits<char>>::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char>> *, std::__1::basic_ostream<char, std::__1::char_traits<char>> &(*)(std::__1::basic_ostream<char, std::__1::char_traits<char>> &)) (isz = 0) (sz = 9)
      -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ostream:(322,12) std::__1::endl<char, std::__1::char_traits<char>>(std::__1::basic_ostream<char, std::__1::char_traits<char>> &) (isz = 20) (sz = 27)
        -> EXTERN: (1034,10) std::__1::basic_ostream<char, std::__1::char_traits<char>>::put(std::__1::basic_ostream<char, std::__1::char_traits<char>> *, std::__1::basic_ostream<char, std::__1::char_traits<char>>::char_type)
        -> INLINE (MANUAL): (1034,19) std::__1::basic_ios<char, std::__1::char_traits<char>>::widen(const std::__1::basic_ios<char, std::__1::char_traits<char>> *, char) const (isz = 28) (sz = 37)
          -> /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,12) std::__1::use_facet<std::__1::ctype<char>>(const std::__1::locale &) (isz = 3) (sz = 10)
             [[ Callee not marked with inlining pragma ]]
          -> EXTERN: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,41) std::__1::ios_base::getloc(std::__1::locale *, const std::__1::ios_base *) const
          -> EXTERN: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,41) std::__1::locale::~locale(std::__1::locale *)
          -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,51) std::__1::ctype<char>::widen(const std::__1::ctype<char> *, char) const (isz = 6) (sz = 15)
            -> INDIRECT- (VIRTUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/__locale:(603,25)  EXPR_CONV.SI64.P64(*((SI64*) (this_14503_V$155.0.26.354->__vptr_V$4d_2.12 + EXPR_CONV.SI32.I64(7(SI32)) * 8(I64))))
               [[ Unable to inline indirect callsite ]]
          -> EXTERN: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,51) std::__1::locale::~locale(std::__1::locale *)
        -> EXTERN: (1035,10) std::__1::basic_ostream<char, std::__1::char_traits<char>>::flush(std::__1::basic_ostream<char, std::__1::char_traits<char>> *)
    -> (48,9) Array::Destroy(Array *) (isz = 19) (sz = 24)
       [[ Callee not marked with inlining pragma ]]
    -> EXTERN: (49,9) exit(int)
    -> INLINE (MANUAL): (55,5) std::__1::fill<real *, double>(real *, real *, const double &) (isz = 1) (sz = 10)
      -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm:(2099,5) std::__1::__fill<real *, double>(real *, real *, const double &, std::__1::random_access_iterator_tag) (isz = 3) (sz = 14)
        -> INLINE (MANUAL): (2091,5) std::__1::fill_n<real *, long, double>(real *, long, const double &) (isz = 4) (sz = 15)
          -> INLINE (MANUAL): (2072,11) std::__1::__fill_n<real *, long, double>(real *, long, const double &) (isz = 13) (sz = 24)
          -> INLINE (MANUAL): (2072,36) std::__1::__convert_to_integral(long) (isz = 0) (sz = 5)
  -> EXTERN: (160,9) memcpy(void *, const void *, size_t)
  -> INLINE (MANUAL): (160,26) Array::GetPtr1(const Array *) const (isz = 0) (sz = 6)
  -> INLINE: (164,18) Array::Allocate(Array *, int) (isz = 93) (sz = 100)
    -> EXTERN: (25,28) operator new[](size_t)
    -> EXTERN: (28,5) ___cxa_begin_catch
    -> EXTERN: (28,5) ___cxa_end_catch
    -> (29,19) std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char, std::__1::char_traits<char>> &, const char *) (isz = 266) (sz = 275)
       [[ Callee not marked with inlining pragma ]]
    -> (29,58) std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char, std::__1::char_traits<char>> &, const char *) (isz = 266) (sz = 275)
       [[ Callee not marked with inlining pragma ]]
    -> INDIRECT- (VIRTUAL): (29,61)  EXPR_CONV.SI64.P64(*((SI64*) (_e.19366_V$1b9.0.57.299->__vptr_V$2d_2.14 + EXPR_CONV.SI32.I64(2(SI32)) * 8(I64))))
       [[ Unable to inline indirect callsite ]]
    -> INLINE (MANUAL): (29,70) std::__1::basic_ostream<char, std::__1::char_traits<char>>::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char>> *, std::__1::basic_ostream<char, std::__1::char_traits<char>> &(*)(std::__1::basic_ostream<char, std::__1::char_traits<char>> &)) (isz = 0) (sz = 9)
      -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ostream:(322,12) std::__1::endl<char, std::__1::char_traits<char>>(std::__1::basic_ostream<char, std::__1::char_traits<char>> &) (isz = 20) (sz = 27)
        -> EXTERN: (1034,10) std::__1::basic_ostream<char, std::__1::char_traits<char>>::put(std::__1::basic_ostream<char, std::__1::char_traits<char>> *, std::__1::basic_ostream<char, std::__1::char_traits<char>>::char_type)
        -> INLINE (MANUAL): (1034,19) std::__1::basic_ios<char, std::__1::char_traits<char>>::widen(const std::__1::basic_ios<char, std::__1::char_traits<char>> *, char) const (isz = 28) (sz = 37)
          -> /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,12) std::__1::use_facet<std::__1::ctype<char>>(const std::__1::locale &) (isz = 3) (sz = 10)
             [[ Callee not marked with inlining pragma ]]
          -> EXTERN: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,41) std::__1::ios_base::getloc(std::__1::locale *, const std::__1::ios_base *) const
          -> EXTERN: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,41) std::__1::locale::~locale(std::__1::locale *)
          -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,51) std::__1::ctype<char>::widen(const std::__1::ctype<char> *, char) const (isz = 6) (sz = 15)
            -> INDIRECT- (VIRTUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/__locale:(603,25)  EXPR_CONV.SI64.P64(*((SI64*) (this_14503_V$155.0.26.308->__vptr_V$4d_2.12 + EXPR_CONV.SI32.I64(7(SI32)) * 8(I64))))
               [[ Unable to inline indirect callsite ]]
          -> EXTERN: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,51) std::__1::locale::~locale(std::__1::locale *)
        -> EXTERN: (1035,10) std::__1::basic_ostream<char, std::__1::char_traits<char>>::flush(std::__1::basic_ostream<char, std::__1::char_traits<char>> *)
    -> (30,19) std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char, std::__1::char_traits<char>> &, const char *) (isz = 266) (sz = 275)
       [[ Callee not marked with inlining pragma ]]
    -> (30,31) std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char, std::__1::char_traits<char>> &, const char *) (isz = 266) (sz = 275)
       [[ Callee not marked with inlining pragma ]]
    -> (30,43) std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char, std::__1::char_traits<char>> &, const char *) (isz = 266) (sz = 275)
       [[ Callee not marked with inlining pragma ]]
    -> EXTERN: (30,58) std::__1::basic_ostream<char, std::__1::char_traits<char>>::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char>> *, int)
    -> (30,70) std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char, std::__1::char_traits<char>> &, const char *) (isz = 266) (sz = 275)
       [[ Callee not marked with inlining pragma ]]
    -> INLINE (MANUAL): (30,78) std::__1::basic_ostream<char, std::__1::char_traits<char>>::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char>> *, std::__1::basic_ostream<char, std::__1::char_traits<char>> &(*)(std::__1::basic_ostream<char, std::__1::char_traits<char>> &)) (isz = 0) (sz = 9)
      -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ostream:(322,12) std::__1::endl<char, std::__1::char_traits<char>>(std::__1::basic_ostream<char, std::__1::char_traits<char>> &) (isz = 20) (sz = 27)
        -> EXTERN: (1034,10) std::__1::basic_ostream<char, std::__1::char_traits<char>>::put(std::__1::basic_ostream<char, std::__1::char_traits<char>> *, std::__1::basic_ostream<char, std::__1::char_traits<char>>::char_type)
        -> INLINE (MANUAL): (1034,19) std::__1::basic_ios<char, std::__1::char_traits<char>>::widen(const std::__1::basic_ios<char, std::__1::char_traits<char>> *, char) const (isz = 28) (sz = 37)
          -> /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,12) std::__1::use_facet<std::__1::ctype<char>>(const std::__1::locale &) (isz = 3) (sz = 10)
             [[ Callee not marked with inlining pragma ]]
          -> EXTERN: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,41) std::__1::ios_base::getloc(std::__1::locale *, const std::__1::ios_base *) const
          -> EXTERN: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,41) std::__1::locale::~locale(std::__1::locale *)
          -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,51) std::__1::ctype<char>::widen(const std::__1::ctype<char> *, char) const (isz = 6) (sz = 15)
            -> INDIRECT- (VIRTUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/__locale:(603,25)  EXPR_CONV.SI64.P64(*((SI64*) (this_14503_V$155.0.26.312->__vptr_V$4d_2.12 + EXPR_CONV.SI32.I64(7(SI32)) * 8(I64))))
               [[ Unable to inline indirect callsite ]]
          -> EXTERN: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,51) std::__1::locale::~locale(std::__1::locale *)
        -> EXTERN: (1035,10) std::__1::basic_ostream<char, std::__1::char_traits<char>>::flush(std::__1::basic_ostream<char, std::__1::char_traits<char>> *)
    -> (31,9) Array::Destroy(Array *) (isz = 19) (sz = 24)
       [[ Callee not marked with inlining pragma ]]
    -> EXTERN: (32,9) exit(int)
    -> INLINE (MANUAL): (35,5) std::__1::fill<real *, double>(real *, real *, const double &) (isz = 1) (sz = 10)
      -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm:(2099,5) std::__1::__fill<real *, double>(real *, real *, const double &, std::__1::random_access_iterator_tag) (isz = 3) (sz = 14)
        -> INLINE (MANUAL): (2091,5) std::__1::fill_n<real *, long, double>(real *, long, const double &) (isz = 4) (sz = 15)
          -> INLINE (MANUAL): (2072,11) std::__1::__fill_n<real *, long, double>(real *, long, const double &) (isz = 13) (sz = 24)
          -> INLINE (MANUAL): (2072,36) std::__1::__convert_to_integral(long) (isz = 0) (sz = 5)
  -> EXTERN: (165,9) memcpy(void *, const void *, size_t)
  -> INLINE (MANUAL): (165,26) Array::GetPtr1(const Array *) const (isz = 0) (sz = 6)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at array.cpp(74,5) inlined into array.cpp(154,18)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this->ptr2[_i1] (75:9) and this->ptr2 (75:9)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at array.cpp(74,5) inlined into array.cpp(154,18)
<Remainder>
LOOP END

LOOP BEGIN at array.cpp(76,5) inlined into array.cpp(154,18)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this->ptr3[_i2] (77:9) and this->ptr3 (77:9)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at array.cpp(76,5) inlined into array.cpp(154,18)
<Remainder>
LOOP END

LOOP BEGIN at /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm(2046,5) inlined into array.cpp(154,18)
   remark #25408: memset generated
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm(2046,5) inlined into array.cpp(154,18)
      remark #15389: vectorization support: reference *__first has unaligned access   [ /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm(2047,10) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 2
      remark #15399: vectorization support: unroll factor set to 2
      remark #15309: vectorization support: normalized vectorization overhead 0.300
      remark #15300: LOOP WAS VECTORIZED
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 2.500 
      remark #15478: estimated potential speedup: 1.090 
      remark #15488: --- end vector cost summary ---
      remark #25015: Estimate of max trip count of loop=3
   LOOP END

   LOOP BEGIN at /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm(2046,5) inlined into array.cpp(154,18)
   <Remainder loop for vectorization>
      remark #25015: Estimate of max trip count of loop=12
   LOOP END
LOOP END

LOOP BEGIN at array.cpp(52,5) inlined into array.cpp(159,18)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this->ptr2[_i1] (53:9) and this->ptr2 (53:9)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at array.cpp(52,5) inlined into array.cpp(159,18)
<Remainder>
LOOP END

LOOP BEGIN at /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm(2046,5) inlined into array.cpp(159,18)
   remark #25408: memset generated
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm(2046,5) inlined into array.cpp(159,18)
      remark #15389: vectorization support: reference *__first has unaligned access   [ /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm(2047,10) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 2
      remark #15399: vectorization support: unroll factor set to 2
      remark #15309: vectorization support: normalized vectorization overhead 0.300
      remark #15300: LOOP WAS VECTORIZED
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 2.500 
      remark #15478: estimated potential speedup: 1.090 
      remark #15488: --- end vector cost summary ---
      remark #25015: Estimate of max trip count of loop=3
   LOOP END

   LOOP BEGIN at /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm(2046,5) inlined into array.cpp(159,18)
   <Remainder loop for vectorization>
      remark #25015: Estimate of max trip count of loop=12
   LOOP END
LOOP END

LOOP BEGIN at /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm(2046,5) inlined into array.cpp(164,18)
   remark #25408: memset generated
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm(2046,5) inlined into array.cpp(164,18)
      remark #15389: vectorization support: reference *__first has unaligned access   [ /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm(2047,10) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 2
      remark #15399: vectorization support: unroll factor set to 2
      remark #15309: vectorization support: normalized vectorization overhead 0.300
      remark #15300: LOOP WAS VECTORIZED
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 2.500 
      remark #15478: estimated potential speedup: 1.090 
      remark #15488: --- end vector cost summary ---
      remark #25015: Estimate of max trip count of loop=3
   LOOP END

   LOOP BEGIN at /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm(2046,5) inlined into array.cpp(164,18)
   <Remainder loop for vectorization>
      remark #25015: Estimate of max trip count of loop=12
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm(2047,10):remark #34014: optimization advice for memset: increase the destination's alignment to 16 (and use __assume_aligned) to speed up library implementation
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm(2047,10):remark #34026: call to memset implemented as a call to optimized library version
array.cpp(155,9):remark #34014: optimization advice for _memcpy: increase the destination's alignment to 16 (and use __assume_aligned) to speed up library implementation
array.cpp(155,9):remark #34014: optimization advice for _memcpy: increase the source's alignment to 16 (and use __assume_aligned) to speed up library implementation
array.cpp(155,9):remark #34026: call to _memcpy implemented as a call to optimized library version
array.cpp(160,9):remark #34014: optimization advice for _memcpy: increase the destination's alignment to 16 (and use __assume_aligned) to speed up library implementation
array.cpp(160,9):remark #34014: optimization advice for _memcpy: increase the source's alignment to 16 (and use __assume_aligned) to speed up library implementation
array.cpp(160,9):remark #34026: call to _memcpy implemented as a call to optimized library version
array.cpp(165,9):remark #34014: optimization advice for _memcpy: increase the destination's alignment to 16 (and use __assume_aligned) to speed up library implementation
array.cpp(165,9):remark #34014: optimization advice for _memcpy: increase the source's alignment to 16 (and use __assume_aligned) to speed up library implementation
array.cpp(165,9):remark #34026: call to _memcpy implemented as a call to optimized library version
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm(2047,10):remark #34014: optimization advice for memset: increase the destination's alignment to 16 (and use __assume_aligned) to speed up library implementation
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm(2047,10):remark #34026: call to memset implemented as a call to optimized library version
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm(2047,10):remark #34014: optimization advice for memset: increase the destination's alignment to 16 (and use __assume_aligned) to speed up library implementation
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm(2047,10):remark #34026: call to memset implemented as a call to optimized library version
array.cpp(138,1):remark #34051: REGISTER ALLOCATION : [__ZN5ArrayaSERKS_] array.cpp:138

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   16[ rax rdx rcx rbx rbp rsi rdi r8-r15 zmm0]
        
    Routine temporaries
        Total         :     494
            Global    :     164
            Local     :     330
        Regenerable   :      93
        Spilled       :       7
        
    Routine stack
        Variables     :      60 bytes*
            Reads     :      12 [0.00e+00 ~ 0.0%]
            Writes    :      24 [0.00e+00 ~ 0.0%]
        Spills        :       8 bytes*
            Reads     :       3 [1.26e-01 ~ 0.2%]
            Writes    :       1 [4.20e-02 ~ 0.1%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::__1::use_facet<std::__1::ctype<char>>(const std::__1::locale &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (std::__1::use_facet<std::__1::ctype<char>>(const std::__1::locale &)) [22/74=29.7%] /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/__locale(186,1)
  -> EXTERN: (187,44) std::__1::locale::use_facet(const std::__1::locale *, std::__1::locale::id &) const


    Report from: Code generation optimizations [cg]

/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/__locale(186,1):remark #34051: REGISTER ALLOCATION : [__ZNSt3__19use_facetINS_5ctypeIcEEEERKT_RKNS_6localeE] /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/__locale:186

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rsi rdi]
        
    Routine temporaries
        Total         :      11
            Global    :       0
            Local     :      11
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char, std::__1::char_traits<char>> &, const char *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char, std::__1::char_traits<char>> &, const char *)) [23/74=31.1%] /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ostream(893,1)
  -> INLINE (MANUAL): (894,12) std::__1::__put_character_sequence<char, std::__1::char_traits<char>>(std::__1::basic_ostream<char, std::__1::char_traits<char>> &, const char *, size_t) (isz = 260) (sz = 271)
    -> EXTERN: (751,61) std::__1::basic_ostream<char, std::__1::char_traits<char>>::sentry::sentry(std::__1::basic_ostream<char, std::__1::char_traits<char>>::sentry *, std::__1::basic_ostream<char, std::__1::char_traits<char>> &)
    -> EXTERN: (751,61) std::__1::basic_ostream<char, std::__1::char_traits<char>>::sentry::~sentry(std::__1::basic_ostream<char, std::__1::char_traits<char>>::sentry *)
    -> INLINE (MANUAL): (752,13) std::__1::basic_ostream<char, std::__1::char_traits<char>>::sentry::operator bool(const std::__1::basic_ostream<char, std::__1::char_traits<char>>::sentry *) const (isz = 0) (sz = 6)
    -> INLINE (MANUAL): (755,38) std::__1::ostreambuf_iterator<char, std::__1::char_traits<char>>::ostreambuf_iterator(std::__1::ostreambuf_iterator<char, std::__1::char_traits<char>> *, std::__1::ostreambuf_iterator<char, std::__1::char_traits<char>>::ostream_type &) (isz = 12) (sz = 19)
      -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/iterator:(908,23) std::__1::basic_ios<char, std::__1::char_traits<char>>::rdbuf(const std::__1::basic_ios<char, std::__1::char_traits<char>> *) const (isz = 1) (sz = 8)
        -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(696,66) std::__1::ios_base::rdbuf(const std::__1::ios_base *) const (isz = 0) (sz = 6)
    -> INLINE (MANUAL): (757,40) std::__1::ios_base::flags(const std::__1::ios_base *) const (isz = 0) (sz = 6)
    -> INLINE (MANUAL): (762,39) std::__1::basic_ios<char, std::__1::char_traits<char>>::fill(const std::__1::basic_ios<char, std::__1::char_traits<char>> *) const (isz = 20) (sz = 27)
      -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(742,9) std::__1::char_traits<char>::eq_int_type(std::__1::char_traits<char>::int_type, std::__1::char_traits<char>::int_type) (isz = 0) (sz = 9)
      -> DELETED: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(742,34) std::__1::char_traits<char>::eof() (isz = 0) (sz = 4)
      -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(743,19) std::__1::basic_ios<char, std::__1::char_traits<char>>::widen(const std::__1::basic_ios<char, std::__1::char_traits<char>> *, char) const (isz = 28) (sz = 37)
        -> INLINE (MANUAL): (734,12) std::__1::use_facet<std::__1::ctype<char>>(const std::__1::locale &) (isz = 3) (sz = 10)
          -> EXTERN: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/__locale:(187,44) std::__1::locale::use_facet(const std::__1::locale *, std::__1::locale::id &) const
        -> EXTERN: (734,41) std::__1::ios_base::getloc(std::__1::locale *, const std::__1::ios_base *) const
        -> EXTERN: (734,41) std::__1::locale::~locale(std::__1::locale *)
        -> INLINE (MANUAL): (734,51) std::__1::ctype<char>::widen(const std::__1::ctype<char> *, char) const (isz = 6) (sz = 15)
          -> INDIRECT- (VIRTUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/__locale:(603,25)  EXPR_CONV.SI64.P64(*((SI64*) (this_14503_V$155.0.26.392->__vptr_V$4d_2.12 + EXPR_CONV.SI32.I64(7(SI32)) * 8(I64))))
             [[ Unable to inline indirect callsite ]]
        -> EXTERN: (734,51) std::__1::locale::~locale(std::__1::locale *)
    -> INLINE (MANUAL): (762,39) std::__1::__pad_and_output<char, std::__1::char_traits<char>>(std::__1::ostreambuf_iterator<char, std::__1::char_traits<char>>, const char *, const char *, const char *, std::__1::ios_base &, char) (isz = 139) (sz = 160)
      -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/locale:(1487,24) std::__1::__get_nullptr_t() (isz = 3) (sz = 8)
        -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/cstddef:(85,94) std::__1::nullptr_t::nullptr_t(std::__1::nullptr_t *, long) (isz = 0) (sz = 6)
      -> DELETED: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/locale:(1487,24) std::__1::nullptr_t::operator std::__1::ostreambuf_iterator<char, std::__1::char_traits<char>>::streambuf_type *<std::__1::ostreambuf_iterator<char, std::__1::char_traits<char>>::streambuf_type>(const std::__1::nullptr_t *) const (isz = 0) (sz = 5)
      -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/locale:(1490,29) std::__1::ios_base::width(const std::__1::ios_base *) const (isz = 0) (sz = 6)
      -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/locale:(1498,26) std::__1::basic_streambuf<char, std::__1::char_traits<char>>::sputn(std::__1::basic_streambuf<char, std::__1::char_traits<char>> *, const std::__1::basic_streambuf<char, std::__1::char_traits<char>>::char_type *, std::__1::streamsize) (isz = 6) (sz = 17)
        -> INDIRECT- (VIRTUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/streambuf:(360,24)  EXPR_CONV.SI64.P64(*((SI64*) (this_20363_V$162.0.32.457->__vptr_V$12f + EXPR_CONV.SI32.I64(12(SI32)) * 8(I64))))
           [[ Unable to inline indirect callsite ]]
      -> DELETED: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/locale:(1500,27) std::__1::nullptr_t::operator std::__1::ostreambuf_iterator<char, std::__1::char_traits<char>>::streambuf_type *<std::__1::ostreambuf_iterator<char, std::__1::char_traits<char>>::streambuf_type>(const std::__1::nullptr_t *) const (isz = 0) (sz = 5)
      -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/locale:(1500,27) std::__1::__get_nullptr_t() (isz = 3) (sz = 8)
        -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/cstddef:(85,94) std::__1::nullptr_t::nullptr_t(std::__1::nullptr_t *, long) (isz = 0) (sz = 6)
      -> EXTERN: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/locale:(1506,50) std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::~basic_string(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> *)
      -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/locale:(1506,50) std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::basic_string(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> *, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::size_type, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::value_type) (isz = 11) (sz = 20)
        -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/string:(2155,44) std::__1::__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::allocator_type>::__compressed_pair(std::__1::__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::allocator_type> *) (isz = 7) (sz = 12)
          -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory:(2409,31) std::__1::__libcpp_compressed_pair_imp<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::allocator_type, 2U>::__libcpp_compressed_pair_imp(std::__1::__libcpp_compressed_pair_imp<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::allocator_type, 2U> *const) (isz = 7) (sz = 12)
            -> INLINE (MANUAL): (2230,31) std::__1::__libcpp_compressed_pair_imp<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::allocator_type, 2U>::__libcpp_compressed_pair_imp(std::__1::__libcpp_compressed_pair_imp<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::allocator_type, 2U> *) (isz = 7) (sz = 12)
              -> EXTERN: (2230,31) memset(void *, int, size_t)
              -> DELETED: (2230,31) std::__1::allocator<char>::allocator(std::__1::allocator<char> *const) (isz = 0) (sz = 5)
        -> EXTERN: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/string:(2157,5) std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__init(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> *, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::size_type, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::value_type)
      -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/locale:(1507,26) std::__1::basic_streambuf<char, std::__1::char_traits<char>>::sputn(std::__1::basic_streambuf<char, std::__1::char_traits<char>> *, const std::__1::basic_streambuf<char, std::__1::char_traits<char>>::char_type *, std::__1::streamsize) (isz = 6) (sz = 17)
        -> INDIRECT- (VIRTUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/streambuf:(360,24)  EXPR_CONV.SI64.P64(*((SI64*) (this_20363_V$162.0.32.446->__vptr_V$12f + EXPR_CONV.SI32.I64(12(SI32)) * 8(I64))))
           [[ Unable to inline indirect callsite ]]
      -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/locale:(1507,37) std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::data(const std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> *) const (isz = 26) (sz = 33)
        -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/string:(1633,55) std::__1::__to_raw_pointer<const char>(const char *) (isz = 0) (sz = 6)
        -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/string:(1633,79) std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__get_pointer(const std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> *) const (isz = 34) (sz = 41)
          -> INLINE (MANUAL): (1791,17) std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__is_long(const std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> *) const (isz = 16) (sz = 23)
            -> INLINE (MANUAL): (1697,27) std::__1::__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::allocator_type>::first(const std::__1::__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::allocator_type> *) const (isz = 5) (sz = 12)
              -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory:(2465,83) std::__1::__libcpp_compressed_pair_imp<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::allocator_type, 2U>::first(const std::__1::__libcpp_compressed_pair_imp<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::allocator_type, 2U> *) const (isz = 1) (sz = 7)
          -> INLINE (MANUAL): (1791,31) std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__get_long_pointer(const std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> *) const (isz = 12) (sz = 19)
            -> INLINE (MANUAL): (1779,22) std::__1::__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::allocator_type>::first(const std::__1::__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::allocator_type> *) const (isz = 5) (sz = 12)
              -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory:(2465,83) std::__1::__libcpp_compressed_pair_imp<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::allocator_type, 2U>::first(const std::__1::__libcpp_compressed_pair_imp<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::allocator_type, 2U> *) const (isz = 1) (sz = 7)
          -> INLINE (MANUAL): (1791,54) std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__get_short_pointer(const std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> *) const (isz = 21) (sz = 28)
            -> INLINE (MANUAL): (1785,17) std::__1::pointer_traits<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::const_pointer>::pointer_to(std::__1::conditional<false, std::__1::pointer_traits<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::const_pointer>::__nat, std::__1::pointer_traits<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::const_pointer>::element_type>::type &) (isz = 4) (sz = 11)
              -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory:(932,17) std::__1::addressof<std::__1::conditional<false, std::__1::pointer_traits<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::const_pointer>::__nat, std::__1::pointer_traits<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::const_pointer>::element_type>::type>(std::__1::conditional<false, std::__1::pointer_traits<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::const_pointer>::__nat, std::__1::pointer_traits<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::const_pointer>::element_type>::type &) (isz = 0) (sz = 6)
            -> INLINE (MANUAL): (1785,64) std::__1::__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::allocator_type>::first(const std::__1::__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::allocator_type> *) const (isz = 5) (sz = 12)
              -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory:(2465,83) std::__1::__libcpp_compressed_pair_imp<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::allocator_type, 2U>::first(const std::__1::__libcpp_compressed_pair_imp<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::allocator_type, 2U> *) const (isz = 1) (sz = 7)
      -> DELETED: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/locale:(1509,27) std::__1::nullptr_t::operator std::__1::ostreambuf_iterator<char, std::__1::char_traits<char>>::streambuf_type *<std::__1::ostreambuf_iterator<char, std::__1::char_traits<char>>::streambuf_type>(const std::__1::nullptr_t *) const (isz = 0) (sz = 5)
      -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/locale:(1509,27) std::__1::__get_nullptr_t() (isz = 3) (sz = 8)
        -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/cstddef:(85,94) std::__1::nullptr_t::nullptr_t(std::__1::nullptr_t *, long) (isz = 0) (sz = 6)
      -> EXTERN: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/locale:(1510,13) std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::~basic_string(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> *)
      -> EXTERN: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/locale:(1512,5) std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::~basic_string(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> *)
      -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/locale:(1516,26) std::__1::basic_streambuf<char, std::__1::char_traits<char>>::sputn(std::__1::basic_streambuf<char, std::__1::char_traits<char>> *, const std::__1::basic_streambuf<char, std::__1::char_traits<char>>::char_type *, std::__1::streamsize) (isz = 6) (sz = 17)
        -> INDIRECT- (VIRTUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/streambuf:(360,24)  EXPR_CONV.SI64.P64(*((SI64*) (this_20363_V$162.0.32.450->__vptr_V$12f + EXPR_CONV.SI32.I64(12(SI32)) * 8(I64))))
           [[ Unable to inline indirect callsite ]]
      -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/locale:(1518,27) std::__1::__get_nullptr_t() (isz = 3) (sz = 8)
        -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/cstddef:(85,94) std::__1::nullptr_t::nullptr_t(std::__1::nullptr_t *, long) (isz = 0) (sz = 6)
      -> DELETED: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/locale:(1518,27) std::__1::nullptr_t::operator std::__1::ostreambuf_iterator<char, std::__1::char_traits<char>>::streambuf_type *<std::__1::ostreambuf_iterator<char, std::__1::char_traits<char>>::streambuf_type>(const std::__1::nullptr_t *) const (isz = 0) (sz = 5)
      -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/locale:(1522,11) std::__1::ios_base::width(std::__1::ios_base *, std::__1::streamsize) (isz = 1) (sz = 10)
    -> INLINE (MANUAL): (762,47) std::__1::ostreambuf_iterator<char, std::__1::char_traits<char>>::failed(const std::__1::ostreambuf_iterator<char, std::__1::char_traits<char>> *) const (isz = 2) (sz = 9)
    -> INLINE (MANUAL): (763,22) std::__1::basic_ios<char, std::__1::char_traits<char>>::setstate(std::__1::basic_ios<char, std::__1::char_traits<char>> *, std::__1::ios_base::iostate) (isz = 0) (sz = 7)
      -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(589,59) std::__1::ios_base::setstate(std::__1::ios_base *, std::__1::ios_base::iostate) (isz = 2) (sz = 9)
        -> EXTERN: (524,5) std::__1::ios_base::clear(std::__1::ios_base *, std::__1::ios_base::iostate)
    -> EXTERN: (766,5) std::__1::basic_ostream<char, std::__1::char_traits<char>>::sentry::~sentry(std::__1::basic_ostream<char, std::__1::char_traits<char>>::sentry *)
    -> EXTERN: (767,5) ___cxa_begin_catch
    -> EXTERN: (768,5) ___cxa_end_catch
    -> EXTERN: (769,14) ___cxa_end_catch
    -> EXTERN: (769,14) std::__1::ios_base::__set_badbit_and_consider_rethrow(std::__1::ios_base *)
  -> INLINE (MANUAL): (894,57) std::__1::char_traits<char>::length(const std::__1::char_traits<char>::char_type *) (isz = 1) (sz = 8)
    -> EXTERN: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/string:(644,63) strlen(const char *)


    Report from: Code generation optimizations [cg]

/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory(2230,31):remark #34000: call to _memset implemented inline with stores with proven (alignment, offset): (16, 0)
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ostream(893,1):remark #34051: REGISTER ALLOCATION : [__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc] /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ostream:893

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   13[ rax rdx rcx rbx rbp rsi rdi r8 r12-r15 zmm0]
        
    Routine temporaries
        Total         :     117
            Global    :      34
            Local     :      83
        Regenerable   :      20
        Spilled       :      11
        
    Routine stack
        Variables     :      56 bytes*
            Reads     :       5 [1.02e+00 ~ 2.5%]
            Writes    :       7 [1.81e-02 ~ 0.0%]
        Spills        :      40 bytes*
            Reads     :      10 [2.50e-01 ~ 0.6%]
            Writes    :       7 [2.14e-01 ~ 0.5%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::__1::char_traits<char>::eof()

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::char_traits<char>::eof()) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/string(666,9)

===========================================================================

Begin optimization report for: std::__1::allocator<char>::allocator(std::__1::allocator<char> *const)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::allocator<char>::allocator(std::__1::allocator<char> *const)) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory(1722,31)

===========================================================================

Begin optimization report for: std::__1::nullptr_t::operator std::__1::ostreambuf_iterator<char, std::__1::char_traits<char>>::streambuf_type *<std::__1::ostreambuf_iterator<char, std::__1::char_traits<char>>::streambuf_type>(const std::__1::nullptr_t *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::nullptr_t::operator std::__1::ostreambuf_iterator<char, std::__1::char_traits<char>>::streambuf_type *<std::__1::ostreambuf_iterator<char, std::__1::char_traits<char>>::streambuf_type>(const std::__1::nullptr_t *) const) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/cstddef(71,32)

===========================================================================

Begin optimization report for: Array::Destroy(Array *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (Array::Destroy(Array *)) [27/74=36.5%] array.cpp(16,1)
  -> EXTERN: (17,5) operator delete[](void *)
  -> EXTERN: (18,5) operator delete[](void *)
  -> EXTERN: (19,5) operator delete[](void *)


    Report from: Code generation optimizations [cg]

array.cpp(16,1):remark #34051: REGISTER ALLOCATION : [__ZN5Array7DestroyEv] array.cpp:16

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rbx rdi]
        
    Routine temporaries
        Total         :      14
            Global    :      10
            Local     :       4
        Regenerable   :       0
        Spilled       :       1
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: Array::AvgAbs(Array *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (Array::AvgAbs(Array *)) [28/74=37.8%] array.cpp(173,1)
  -> INLINE (MANUAL): (184,36) Array::GetVal(const Array *, int, int, int) const (isz = 6) (sz = 18)
  -> INLINE (MANUAL): (195,32) Array::GetVal(const Array *, int, int) const (isz = 4) (sz = 14)
  -> INLINE (MANUAL): (205,28) Array::GetVal(const Array *, int) const (isz = 2) (sz = 10)


    Report from: OpenMP optimizations [openmp]

array.cpp(179:1-179:1):OMP:__ZN5Array6AvgAbsEv:  OpenMP DEFINED LOOP WAS PARALLELIZED
array.cpp(191:1-191:1):OMP:__ZN5Array6AvgAbsEv:  OpenMP DEFINED LOOP WAS PARALLELIZED
array.cpp(202:1-202:1):OMP:__ZN5Array6AvgAbsEv:  OpenMP DEFINED LOOP WAS PARALLELIZED

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at array.cpp(202,1)
<Peeled loop for vectorization>
   remark #25015: Estimate of max trip count of loop=1
LOOP END

LOOP BEGIN at array.cpp(202,1)
   remark #25084: Preprocess Loopnests: Moving Out Store    [ array.cpp(205,13) ]
   remark #15388: vectorization support: reference this->ptr1[i0] has aligned access   [ array.hpp(29,39) ]
   remark #15305: vectorization support: vector length 2
   remark #15399: vectorization support: unroll factor set to 4
   remark #15309: vectorization support: normalized vectorization overhead 1.208
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 10 
   remark #15477: vector cost: 3.000 
   remark #15478: estimated potential speedup: 3.130 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at array.cpp(202,1)
<Remainder loop for vectorization>
   remark #15388: vectorization support: reference this->ptr1[i0] has aligned access   [ array.hpp(29,39) ]
   remark #15305: vectorization support: vector length 2
   remark #15309: vectorization support: normalized vectorization overhead 3.625
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at array.cpp(202,1)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at array.cpp(193,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at array.cpp(194,13)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=1
   LOOP END

   LOOP BEGIN at array.cpp(194,13)
      remark #25084: Preprocess Loopnests: Moving Out Store    [ array.cpp(195,17) ]
      remark #15388: vectorization support: reference *(*(this->ptr2+($i1+i1-1)*8)+($i2-1)*8) has aligned access   [ array.hpp(30,47) ]
      remark #15305: vectorization support: vector length 2
      remark #15399: vectorization support: unroll factor set to 4
      remark #15309: vectorization support: normalized vectorization overhead 1.542
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 13 
      remark #15477: vector cost: 3.000 
      remark #15478: estimated potential speedup: 3.990 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at array.cpp(194,13)
   <Remainder loop for vectorization>
      remark #15389: vectorization support: reference *(*(this->ptr2+($i1+i1-1)*8)+($i2+?-1)*8) has unaligned access   [ array.hpp(30,47) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 3.556
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at array.cpp(194,13)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at array.cpp(181,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at array.cpp(182,13)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at array.cpp(183,17)
      <Peeled loop for vectorization>
         remark #25015: Estimate of max trip count of loop=1
      LOOP END

      LOOP BEGIN at array.cpp(183,17)
         remark #25084: Preprocess Loopnests: Moving Out Store    [ array.cpp(184,21) ]
         remark #15388: vectorization support: reference *(*(*(this->ptr3+($i1+i2-1)*8)+($i2-1)*8)+($i3-1)*8) has aligned access   [ array.hpp(31,55) ]
         remark #15305: vectorization support: vector length 2
         remark #15399: vectorization support: unroll factor set to 4
         remark #15309: vectorization support: normalized vectorization overhead 1.708
         remark #15300: LOOP WAS VECTORIZED
         remark #15442: entire loop may be executed in remainder
         remark #15448: unmasked aligned unit stride loads: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 16 
         remark #15477: vector cost: 3.000 
         remark #15478: estimated potential speedup: 4.830 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at array.cpp(183,17)
      <Remainder loop for vectorization>
         remark #15389: vectorization support: reference *(*(*(this->ptr3+($i1+i2-1)*8)+($i2-1)*8)+($i3+?-1)*8) has unaligned access   [ array.hpp(31,55) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 3.556
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at array.cpp(183,17)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

array.cpp(173,1):remark #34051: REGISTER ALLOCATION : [__ZN5Array6AvgAbsEv] array.cpp:173

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   25[ rax rdx rcx rbx rbp rsi rdi r8-r15 zmm0-zmm9]
        
    Routine temporaries
        Total         :     541
            Global    :     133
            Local     :     408
        Regenerable   :     162
        Spilled       :       8
        
    Routine stack
        Variables     :      92 bytes*
            Reads     :      25 [3.00e+00 ~ 0.1%]
            Writes    :      24 [3.76e+01 ~ 1.1%]
        Spills        :     112 bytes*
            Reads     :      54 [1.34e+01 ~ 0.4%]
            Writes    :      54 [1.95e+01 ~ 0.6%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::__1::nullptr_t::nullptr_t(std::__1::nullptr_t *, long)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::nullptr_t::nullptr_t(std::__1::nullptr_t *, long)) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/cstddef(65,79)

===========================================================================

Begin optimization report for: std::__1::char_traits<char>::length(const std::__1::char_traits<char>::char_type *)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::char_traits<char>::length(const std::__1::char_traits<char>::char_type *)) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/string(644,55)

===========================================================================

Begin optimization report for: std::__1::char_traits<char>::eq_int_type(std::__1::char_traits<char>::int_type, std::__1::char_traits<char>::int_type)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::char_traits<char>::eq_int_type(std::__1::char_traits<char>::int_type, std::__1::char_traits<char>::int_type)) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/string(664,9)

===========================================================================

Begin optimization report for: std::__1::allocator<char>::allocator(std::__1::allocator<char> *)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::allocator<char>::allocator(std::__1::allocator<char> *)) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory(1722,53)

===========================================================================

Begin optimization report for: std::__1::__libcpp_compressed_pair_imp<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::allocator_type, 2U>::__libcpp_compressed_pair_imp(std::__1::__libcpp_compressed_pair_imp<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::allocator_type, 2U> *)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::__libcpp_compressed_pair_imp<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::allocator_type, 2U>::__libcpp_compressed_pair_imp(std::__1::__libcpp_compressed_pair_imp<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::allocator_type, 2U> *)) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory(2230,75)

===========================================================================

Begin optimization report for: std::__1::__libcpp_compressed_pair_imp<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::allocator_type, 2U>::__libcpp_compressed_pair_imp(std::__1::__libcpp_compressed_pair_imp<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::allocator_type, 2U> *const)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::__libcpp_compressed_pair_imp<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::allocator_type, 2U>::__libcpp_compressed_pair_imp(std::__1::__libcpp_compressed_pair_imp<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::allocator_type, 2U> *const)) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory(2230,31)

===========================================================================

Begin optimization report for: std::__1::__libcpp_compressed_pair_imp<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::allocator_type, 2U>::first(const std::__1::__libcpp_compressed_pair_imp<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::allocator_type, 2U> *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::__libcpp_compressed_pair_imp<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::allocator_type, 2U>::first(const std::__1::__libcpp_compressed_pair_imp<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::allocator_type, 2U> *) const) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory(2293,75)

===========================================================================

Begin optimization report for: std::__1::__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::allocator_type>::__compressed_pair(std::__1::__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::allocator_type> *)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::allocator_type>::__compressed_pair(std::__1::__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::allocator_type> *)) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory(2409,51)

===========================================================================

Begin optimization report for: std::__1::__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::allocator_type>::first(const std::__1::__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::allocator_type> *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::allocator_type>::first(const std::__1::__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::allocator_type> *) const) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory(2465,75)

===========================================================================

Begin optimization report for: std::__1::ctype<char>::widen(const std::__1::ctype<char> *, char) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::ctype<char>::widen(const std::__1::ctype<char> *, char) const) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/__locale(602,5)

===========================================================================

Begin optimization report for: std::__1::ios_base::flags(const std::__1::ios_base *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::ios_base::flags(const std::__1::ios_base *) const) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios(436,1)

===========================================================================

Begin optimization report for: std::__1::ios_base::width(const std::__1::ios_base *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::ios_base::width(const std::__1::ios_base *) const) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios(498,1)

===========================================================================

Begin optimization report for: std::__1::ios_base::width(std::__1::ios_base *, std::__1::streamsize)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::ios_base::width(std::__1::ios_base *, std::__1::streamsize)) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios(505,1)

===========================================================================

Begin optimization report for: std::__1::ios_base::setstate(std::__1::ios_base *, std::__1::ios_base::iostate)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::ios_base::setstate(std::__1::ios_base *, std::__1::ios_base::iostate)) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios(523,1)

===========================================================================

Begin optimization report for: std::__1::ios_base::rdbuf(const std::__1::ios_base *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::ios_base::rdbuf(const std::__1::ios_base *) const) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios(337,47)

===========================================================================

Begin optimization report for: std::__1::ostreambuf_iterator<char, std::__1::char_traits<char>>::ostreambuf_iterator(std::__1::ostreambuf_iterator<char, std::__1::char_traits<char>> *, std::__1::ostreambuf_iterator<char, std::__1::char_traits<char>>::ostream_type &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::ostreambuf_iterator<char, std::__1::char_traits<char>>::ostreambuf_iterator(std::__1::ostreambuf_iterator<char, std::__1::char_traits<char>> *, std::__1::ostreambuf_iterator<char, std::__1::char_traits<char>>::ostream_type &)) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/iterator(908,32)

===========================================================================

Begin optimization report for: std::__1::pointer_traits<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::const_pointer>::pointer_to(std::__1::conditional<false, std::__1::pointer_traits<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::const_pointer>::__nat, std::__1::pointer_traits<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::const_pointer>::element_type>::type &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::pointer_traits<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::const_pointer>::pointer_to(std::__1::conditional<false, std::__1::pointer_traits<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::const_pointer>::__nat, std::__1::pointer_traits<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::const_pointer>::element_type>::type &)) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory(932,9)

===========================================================================

Begin optimization report for: std::__1::__get_nullptr_t()

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::__get_nullptr_t()) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/cstddef(85,76)

===========================================================================

Begin optimization report for: std::__1::__convert_to_integral(long)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::__convert_to_integral(long)) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/type_traits(3727,40)

===========================================================================

Begin optimization report for: std::__1::endl<char, std::__1::char_traits<char>>(std::__1::basic_ostream<char, std::__1::char_traits<char>> &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (std::__1::endl<char, std::__1::char_traits<char>>(std::__1::basic_ostream<char, std::__1::char_traits<char>> &)) [61/74=82.4%] /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ostream(1033,1)
  -> EXTERN: (1034,10) std::__1::basic_ostream<char, std::__1::char_traits<char>>::put(std::__1::basic_ostream<char, std::__1::char_traits<char>> *, std::__1::basic_ostream<char, std::__1::char_traits<char>>::char_type)
  -> INLINE (MANUAL): (1034,19) std::__1::basic_ios<char, std::__1::char_traits<char>>::widen(const std::__1::basic_ios<char, std::__1::char_traits<char>> *, char) const (isz = 28) (sz = 37)
    -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,12) std::__1::use_facet<std::__1::ctype<char>>(const std::__1::locale &) (isz = 3) (sz = 10)
      -> EXTERN: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/__locale:(187,44) std::__1::locale::use_facet(const std::__1::locale *, std::__1::locale::id &) const
    -> EXTERN: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,41) std::__1::ios_base::getloc(std::__1::locale *, const std::__1::ios_base *) const
    -> EXTERN: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,41) std::__1::locale::~locale(std::__1::locale *)
    -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,51) std::__1::ctype<char>::widen(const std::__1::ctype<char> *, char) const (isz = 6) (sz = 15)
      -> INDIRECT- (VIRTUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/__locale:(603,25)  EXPR_CONV.SI64.P64(*((SI64*) (this_14503_V$155.0.26.156->__vptr_V$4d_2.12 + EXPR_CONV.SI32.I64(7(SI32)) * 8(I64))))
         [[ Unable to inline indirect callsite ]]
    -> EXTERN: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:(734,51) std::__1::locale::~locale(std::__1::locale *)
  -> EXTERN: (1035,10) std::__1::basic_ostream<char, std::__1::char_traits<char>>::flush(std::__1::basic_ostream<char, std::__1::char_traits<char>> *)


    Report from: Code generation optimizations [cg]

/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ostream(1033,1):remark #34051: REGISTER ALLOCATION : [__ZNSt3__14endlIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_] /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ostream:1033

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rsi rdi r14-r15]
        
    Routine temporaries
        Total         :      37
            Global    :      13
            Local     :      24
        Regenerable   :       7
        Spilled       :       2
        
    Routine stack
        Variables     :      16 bytes*
            Reads     :       1 [0.00e+00 ~ 0.0%]
            Writes    :       1 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::__1::fill<real *, double>(real *, real *, const double &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::fill<real *, double>(real *, real *, const double &)) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm(2098,1)

===========================================================================

Begin optimization report for: std::__1::__put_character_sequence<char, std::__1::char_traits<char>>(std::__1::basic_ostream<char, std::__1::char_traits<char>> &, const char *, size_t)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::__put_character_sequence<char, std::__1::char_traits<char>>(std::__1::basic_ostream<char, std::__1::char_traits<char>> &, const char *, size_t)) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ostream(746,1)

===========================================================================

Begin optimization report for: std::__1::__pad_and_output<char, std::__1::char_traits<char>>(std::__1::ostreambuf_iterator<char, std::__1::char_traits<char>>, const char *, const char *, const char *, std::__1::ios_base &, char)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::__pad_and_output<char, std::__1::char_traits<char>>(std::__1::ostreambuf_iterator<char, std::__1::char_traits<char>>, const char *, const char *, const char *, std::__1::ios_base &, char)) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/locale(1486,1)

===========================================================================

Begin optimization report for: std::__1::addressof<std::__1::conditional<false, std::__1::pointer_traits<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::const_pointer>::__nat, std::__1::pointer_traits<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::const_pointer>::element_type>::type>(std::__1::conditional<false, std::__1::pointer_traits<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::const_pointer>::__nat, std::__1::pointer_traits<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::const_pointer>::element_type>::type &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::addressof<std::__1::conditional<false, std::__1::pointer_traits<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::const_pointer>::__nat, std::__1::pointer_traits<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::const_pointer>::element_type>::type>(std::__1::conditional<false, std::__1::pointer_traits<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::const_pointer>::__nat, std::__1::pointer_traits<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::const_pointer>::element_type>::type &)) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/__functional_base(86,1)

===========================================================================

Begin optimization report for: std::__1::__to_raw_pointer<const char>(const char *)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::__to_raw_pointer<const char>(const char *)) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory(1066,1)

===========================================================================

Begin optimization report for: std::__1::__fill<real *, double>(real *, real *, const double &, std::__1::random_access_iterator_tag)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::__fill<real *, double>(real *, real *, const double &, std::__1::random_access_iterator_tag)) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm(2090,1)

===========================================================================

Begin optimization report for: std::__1::fill_n<real *, long, double>(real *, long, const double &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::fill_n<real *, long, double>(real *, long, const double &)) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm(2071,1)

===========================================================================

Begin optimization report for: std::__1::__fill_n<real *, long, double>(real *, long, const double &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::__fill_n<real *, long, double>(real *, long, const double &)) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm(2045,1)

===========================================================================

Begin optimization report for: std::__1::nullptr_t::operator real *<real>(const std::__1::nullptr_t *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::nullptr_t::operator real *<real>(const std::__1::nullptr_t *) const) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/cstddef(71,32)

===========================================================================

Begin optimization report for: std::__1::nullptr_t::operator real **<real *>(const std::__1::nullptr_t *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::nullptr_t::operator real **<real *>(const std::__1::nullptr_t *) const) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/cstddef(71,32)

===========================================================================

Begin optimization report for: std::__1::nullptr_t::operator real ***<real **>(const std::__1::nullptr_t *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::nullptr_t::operator real ***<real **>(const std::__1::nullptr_t *) const) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/cstddef(71,32)

===========================================================================

Begin optimization report for: std::__1::ostreambuf_iterator<char, std::__1::char_traits<char>>::failed(const std::__1::ostreambuf_iterator<char, std::__1::char_traits<char>> *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::ostreambuf_iterator<char, std::__1::char_traits<char>>::failed(const std::__1::ostreambuf_iterator<char, std::__1::char_traits<char>> *) const) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/iterator(920,61)

===========================================================================

Begin optimization report for: Array::Init(Array *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (Array::Init(Array *)) [74/74=100.0%] array.cpp(10,1)
  -> DELETED: (12,12) std::__1::nullptr_t::operator real *<real>(const std::__1::nullptr_t *) const (isz = 0) (sz = 5)
  -> INLINE (MANUAL): (12,12) std::__1::__get_nullptr_t() (isz = 3) (sz = 8)
    -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/cstddef:(85,94) std::__1::nullptr_t::nullptr_t(std::__1::nullptr_t *, long) (isz = 0) (sz = 6)
  -> DELETED: (12,28) std::__1::nullptr_t::operator real **<real *>(const std::__1::nullptr_t *) const (isz = 0) (sz = 5)
  -> INLINE (MANUAL): (12,28) std::__1::__get_nullptr_t() (isz = 3) (sz = 8)
    -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/cstddef:(85,94) std::__1::nullptr_t::nullptr_t(std::__1::nullptr_t *, long) (isz = 0) (sz = 6)
  -> DELETED: (12,44) std::__1::nullptr_t::operator real ***<real **>(const std::__1::nullptr_t *) const (isz = 0) (sz = 5)
  -> INLINE (MANUAL): (12,44) std::__1::__get_nullptr_t() (isz = 3) (sz = 8)
    -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/cstddef:(85,94) std::__1::nullptr_t::nullptr_t(std::__1::nullptr_t *, long) (isz = 0) (sz = 6)


    Report from: Code generation optimizations [cg]

array.cpp(10,1):remark #34051: REGISTER ALLOCATION : [__ZN5Array4InitEv] array.cpp:10

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rdx rdi]
        
    Routine temporaries
        Total         :      10
            Global    :       0
            Local     :      10
        Regenerable   :       2
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================
