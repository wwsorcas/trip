"--------------------------------------- use cases --------------------------------------",
  " ",
  " App uses staggered grid FD acoustic modeling operator S[c], model parameters c = ",
  " [bulk modulus, buoyancy], acts on distributed source f to produce seismic traces d",
  " = S[c]f. Annihilator A annihilates point sources - multiplication by offset. Under",
  " point source assumption, inverse problem of fitting data d with point source f is ",
  " equivalent to minimizing ",
  " ",
  "    J = 1/2 [ |S[c]f-d|^2 + alpha^2 |Af|^2 ]",
  " ",
  " Sources base parameters may have multiple components, described below. ",
  " ",
  " Use Cases",
  " ",
  " In all cases, parameters must include all model params, at least one data",
  " param, and at least one source param. Finite difference, PML, taper and mute,",
  " and MPI params are also required: these are listed after the description of use ",
  " cases, below. Since all cases involve inversion for source params via CG, must ",
  " include CG parameters, also listed below. Note that values given are defaults. ",
  " Parameters without defaults must be specified explicitly.",
  " ",
  " 1. Given model parameters c, find source parameters f to minimize J with alpha = 0",
  " ",
  " Source params f are initial estimate on call, inverted on return. Typical use:",
  " copy initial source estimate, created using SU, M8R, etc., over files for output",
  " source params, run. ",
  " ",
  " Additional required parameters: none.",
  " ",
  " Optional parameters:",
  "   for each data parameter <name>, ",
  "     est_<name> : estimated data using inverted source",
  "     res_<name> : estimated residual",
  "   for each source parameter <name>,",
  "     ann_<name> : annihilator value",
  " ",
  " 2. Given model parameters c, find source paramters f to minimize J with alpha > 0",
  " ",
  " Additional required parameters:",
  "   weight  = 0.0: value of alpha",
  "   precond = 0; if set, precondition by (1+alpha^2 offset^2)^{-1}",
  " ",
  " Optional parameters: same as Case 1",
  " ",
  " 3. Given model parameters c, find source parameters f and update alpha, using ",
  " discrepancy principle as described in Fu & Symes Geophysics 82 (2017) R189-R200.",
  " this implementation iterates update formula until it returns repeated value, or ",
  " max number of updates reached.",
  " ",
  " Additional required parameters:",
  "   weightin       = \"\":   name of text file containing input value of alpha",
  "                          (file must exist)",
  "  weightout       = \"\":   name of text file containing output value of alpha (file created or",
  "                          overwritten)",
  "  MaxAlphaUpdate  = 1:    bound on number of alpha updates to be computed",
  "  RelResUpperBnd  = 0.12: upper bound for relative residual at computed approx",
  "                          minimizer of J - must be possible to achieve with given",
  "                          CG params and alpha=0",
  "  RelResLowerBnd  = 0.08: lower bound for relative residual at computed approx",
  "                          minimizer of J - updates continue until rel resid is",
  "                          at least this large",
  "  AlphaDecrFac    = 0.1:  if upper bound for relative residual at computed approx",
  "                          minimizer of J is larger than RelResUpperBnd, alpha reduced",
  "                          by this factor (should never happen if updates begin at",
  "                          alpha=0)",
  "  AlphaUpdateTol  = 0.01:  updates stop if ",
  "                          alpha_next - alpha_curr < AlphaUpdateTol * alpha_next",
  " ",
  " Optional parameters: same as Case 1",
  " ",
  " 4. Given model parameters c, find source parameters f, update alpha, and when ",
  " alpha updates stabilize, compute gradient of J with respect to (a subset of the",
  " parameters) c",
  " ",
  " Additional required parameters: those for Case 3, plus",
  "   <par>_grad = \"\":       filename for gradient data, model component name <par>",
  "                          expl: bulkmod_grad",
  " ",
  " 5. Given model parameters c, find source parameters f, update alpha, and when ",
  " alpha updates stabilize, compute preconditioned (smoothed) gradient of J with ",
  " respect to (a subset of the parameters) c = gradient with respect to norm in",
  " model space defined by inverse of smoothing operator. In current implementation",
  " smoothing operator is iterated rectangular moving average.",
  " ",
  " Additional required parameters: those for Case 4, plus",
  "   <par>_pgrad = \"\":     filename for precond grad data, model component name <par>",
  "                         expl: bulkmod_pgrad",
  "   rectn       = 0:      radius (in grid points of smoothing rectangle in dimension n",
  "   repeat      = 0:      smoothing iterations (0: no smoothing)",
  " ",
  " 6. Update model parameters c using Variable Projection Method and preconditioned",
  " steepest descent with backtracking line search",
  " ",
  " Additional required parameters: those for Case 5, plus",
  "   <par>_upd   = \"\":     filename for precond grad data, model component name <par>",
  "                         expl: bulkmod_pgrad",
  "   MaxSubSteps = 10:     max number of backtracks",
  " InitStepBound = 0.1:    initial step is this fraction of distance to boundary of ",
  "                         feasible set, determined by min and max bounds on paramters",
  "   MinDecrease = 0.1:    lower Goldstein-Armijo bound: backtrack (multiply step by",
  "                         StepDecrFactor if computed decrease less than this fraction",
  "                         of predicted decrease",
  "  GoodDecrease = 0.7:    upper Goldstein-Armijo bound: internal doubling - multiply",
  "                         step by this StepIncrFactor if computed decrease greater ",
  "                         than thisfraction of predicted decrease",
  "StepDecrFactor = 0.5",
  "StepIncrFactor = 1.8",
  " ",
  "--------------------------------------- use cases --------------------------------------",

