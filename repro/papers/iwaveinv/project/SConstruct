#############################################################################
###################### COMMON DEFINITIONS - DO NOT ALTER ####################
#############################################################################
from rsf.proj import *
from trip.proj import getThreads
from trip.proj import getCommand
from trip.prog import run
import os

#############################################################################
###################### END COMMON DEFINITIONS ###############################
#############################################################################

######################## LOCAL DEFINITIONS ##################################
# local parallel parameters
lenv = {'stampede2' : { 'nodes'    : 2,
                        'ppn'      : 45,
                        'wall'     : '01:00:00'
                      },
         'davinci' :  { 'nodes'    : 2,
                       	'ppn'      : 16,
                        'wall'     : '08:00:00'
                      },
         'macbook' :  { 'ppn'      : 2},
	 'getafix' :  { 'ppn'      : 10},
	 'obelix'  :  { 'ppn'      : 12},
	 }
       

######## abbreviations for commands used in flows - put these first, if
######## you use abbreviations
# example:
#          CWPROOT         = os.getenv('CWPROOT')
#          ...
#          sunull          = os.path.join(CWPROOT,'bin/sunull')
CWPROOT         = os.getenv('CWPROOT')
segyread        = os.path.join(CWPROOT,'bin/segyread')
suwind          = os.path.join(CWPROOT,'bin/suwind')
susort          = os.path.join(CWPROOT,'bin/susort')
sumute          = os.path.join(CWPROOT,'bin/sumute')
sufilter        = os.path.join(CWPROOT,'bin/sufilter')
suvelan         = os.path.join(CWPROOT,'bin/suvelan')
sunmo           = os.path.join(CWPROOT,'bin/sunmo')
sustack         = os.path.join(CWPROOT,'bin/sustack')
sugain          = os.path.join(CWPROOT,'bin/sugain')
sugazmig        = os.path.join(CWPROOT,'bin/sugazmig')
velconv         = os.path.join(CWPROOT,'bin/velconv')
smooth2         = os.path.join(CWPROOT,'bin/smooth2')
unisam2         = os.path.join(CWPROOT,'bin/unisam2')
transp          = os.path.join(CWPROOT,'bin/transp')
sumigpspi       = os.path.join(CWPROOT,'bin/sumigpspi')
sumigfd         = os.path.join(CWPROOT,'bin/sumigfd')
sufilter        = os.path.join(CWPROOT,'bin/sufilter')
sufft           = os.path.join(CWPROOT,'bin/sufft')
suamp           = os.path.join(CWPROOT,'bin/suamp')
suspike         = os.path.join(CWPROOT,'bin/suspike')
sushw           = os.path.join(CWPROOT,'bin/sushw')
suchw           = os.path.join(CWPROOT,'bin/suchw')
suop2           = os.path.join(CWPROOT,'bin/suop2')
suwaveform      = os.path.join(CWPROOT,'bin/suwaveform')
MYAPPS          = os.getenv('MYAPPS')
towed_array     = os.path.join(MYAPPS,'trip/iwave/trace/main/towed_array.x')
taper           = os.path.join(MYAPPS,'trip/iwave/trace/main/taper.x')
acd             = os.path.join(MYAPPS,'trip/iwave/acd/main/sim.x')
acdfwi          = os.path.join(MYAPPS,'trip/iwave/acd/main/fwi.x')
acdcgne         = os.path.join(MYAPPS,'trip/iwave/acd/main/cg.x')

fetches = {
    'line100m.su' : ['marmousi', 'http://www.trip.caam.rice.edu'],
    'wavelet_base.su' : ['marmousi', 'http://www.trip.caam.rice.edu'],
    'velocity.HH' : ['marmousi', 'http://www.trip.caam.rice.edu']
}
for file in fetches.keys():
    Fetch(file,fetches[file][0],server=fetches[file][1])   

Flow('hdr6km.su','line100m.su',suwind + ' key=fldr min=6000 max=6000')

#Flow('berlagef.su',None,suwaveform + ' type=berlage fpeak=8 dt=0.004 ns=201 |sushw key=delrt a=200|sushift tmin=0.0|sufilter f=2,5,15,25 ')


# model parameters
NZ=141
NX=444
FX=383
DZX=24
V000=1.5
JZX=6
NSPRAY=60
NH2O=15
NS=60
OH=-480.0
NH=20

Flow('ocean',None,'makevel n1=' + str(NZ) + ' d1=' + str(DZX) + ' n2=' + str(NX) + ' d2=' + str(DZX) +
' o1=0 o2=0 v000=' + str(V000) + ' | put data_type=vel data_format=native_float label1=Depth unit1=m label2=Position unit2=m unit=m/ms esize=4',stdin=0) 
Flow('vel24base','velocity.HH','dd form=native | window j1=' + str(JZX) + ' j2=' + str(JZX))
Flow('vext','vel24base','window f2=' + str(FX) + ' n2=1 | spray axis=2 d=' + str(DZX) + ' n=' + str(NSPRAY))
Flow('extv',['vel24base', 'vext'], 'cat axis=2 d=' + str(DZX) + ' ${SOURCES[1]}')
Flow('vel24',['ocean','extv'],'window n1=' + str(NH2O) + ' f1=0 | cat axis=1 d=' + str(DZX) + ' ${SOURCES[1]}') 
Flow('vel24sm','vel24','smooth rect1=5 rect2=5 repeat=10')
Flow('vel24sm2','vel24','smooth rect1=5 rect2=5 repeat=2')
Flow('vel24sm4','vel24','smooth rect1=5 rect2=5 repeat=4')
Flow('vel24big','vel24','smooth rect1=10 rect2=10 repeat=10')

Flow('csq24','vel24','add mode=p ${SOURCES[0]} |put data_type=csq')
Flow('csq24sm','vel24sm','add mode=p ${SOURCES[0]} |put data_type=csq')
Flow('csq24sm2','vel24sm2','add mode=p ${SOURCES[0]} |put data_type=csq')
Flow('csq24big','vel24big','add mode=p ${SOURCES[0]} |put data_type=csq')
Flow('csq24noah','ocean','add mode=p ${SOURCES[0]} |put data_type=csq')
Flow('csqbig80pct',['csq24big.rsf', 'csq24noah.rsf'], 
     'add < ${SOURCES[0]} ${SOURCES[1]} scale=0.8,0.2 > ${TARGETS[0]}')

Flow('dcsq24', ['csq24', 'csq24sm2'],'add mode=a scale=1,-1 < ${SOURCES[0]} ${SOURCES[1]} |window min1=180| sfpad beg1=8') 
Flow('dcsq24_extsr','dcsq24', 
     'spray < ${SOURCES[0]} axis=3 n=' + str(NS) + ' d=1.0 o=0.0| ' +
     'put dim=2 gdim=3 id1=0 id2=1 id3=3 label3=Source')
Flow('dcsq24_extso','dcsq24',
     'pad beg3=' + str(NH) + ' + end3=' + str(NH) + 
     ' | put d3=' + str(DZX) + ' o3=' + str(OH) + ' dim=2 gdim=3 id1=0 id2=1 id3=101 label3=Offset')

# transposes
Flow('csq24bigtr','csq24big','transp | put id1=1 id2=0');
Flow('dcsq24tr','dcsq24','transp | put id1=1 id2=0');
Flow('dcsq24_extsrtr','dcsq24_extsr','transp | put id1=1 id2=0');
Flow('dcsq24_extsotr','dcsq24_extso','transp | put id1=1 id2=0');

# add source coordinates from hdrfile to source AND receiver 
# coordinates from wavelet to create "dressed" wavelet for array
# source option in iwave. 


# use naming convention: time series stored in wavelet_base, 
# headers for experiment foo stored in hdrfoo.su, wavelet in
# waveletfoo.su

for foo in ['line100m', 'hdr6km']:
    Flow('wavelet_' + foo + '.su', ['wavelet_base.su', foo + '.su'],
         towed_array + 
         '''
         data=${SOURCES[1]} 
         src=${SOURCES[0]} 
         towed=${TARGETS[0]}
         ''',
         stdin=0, stdout=0)

# parallel parameters
NODES=2
PPN=16
PTASK=12
#PTASK=32

# job definition dictionary

jobs = [
        { 'job': 'shot6km',
          'pre': '/bin/cp ${SOURCES[0]} $TARGET',
          'src': ['hdr6km.su', 'wavelet_hdr6km.su', 'csq24'],
          'tgt': ['shot6km.su'],
          'cmd': acd + ' ' + 
		 'deriv=0 adjoint=0 order=2 cfl=0.5 cmin=1.0 cmax=6.0 sampord=1 ' +
		 'csq=${SOURCES[2]} source=${SOURCES[1]} ' +
		 'data=${TARGETS[0]} adjtest=1',
	},
        { 'job': 'unborn',
          'pre': '/bin/cp ${SOURCES[0]} $TARGET',
          'src': ['line100m.su', 'wavelet_line100m.su', 'csq24'],
          'tgt': ['unborn.su'],
          'cmd': acd + ' ' + 
		 'deriv=0 adjoint=0 order=2 cfl=0.5 cmin=1.0 cmax=6.0 sampord=1 ' +
		 'csq=${SOURCES[2]} source=${SOURCES[1]} ' +
		 'data=${TARGETS[0]} dump_term=1 partask=' + str(PTASK),
	},
        { 'job': 'born',
          'pre': '/bin/cp ${SOURCES[0]} $TARGET',
          'src': ['line100m.su', 'wavelet_line100m.su', 'csq24big', 'dcsq24'],
          'tgt': ['born.su'],
          'cmd': acd + ' ' + 
		 'deriv=1 adjoint=0 order=2 cfl=0.5 cmin=1.0 cmax=6.0 sampord=1 ' +
		 'csq=${SOURCES[2]} csq_d1=${SOURCES[3]} source=${SOURCES[1]} ' +
		 'data=${TARGETS[0]} dump_term=1 partask=' + str(PTASK),
	},
	{ 'job': 'mig',
          'pre': 'add scale=0.0 < ${SOURCES[3]} > $TARGET',
	  'src': ['born.su', 'wavelet_line100m.su', 'csq24big', 'dcsq24'],
          'tgt': ['mig'],
          'cmd': acd + ' ' + 
		 'deriv=1 adjoint=1 order=2 cfl=0.5 ' +
		 'cmin=1.0 cmax=6.0 sampord=1 nsnaps=20 ' +
		 'csq=${SOURCES[2]} csq_b1=$TARGET ' +
		 'source=${SOURCES[1]} ' +
		 'data=${SOURCES[0]} partask=' + str(PTASK),
        },
	{ 'job': 'fwi3it',
          'pre': 'add scale=0.0 < ${SOURCES[2]} > ${TARGETS[0]} && ' +
	         'add scale=0.0 < ${SOURCES[2]} > ${TARGETS[1]} && ' +
	         '/bin/cp ${SOURCES[0]} ${TARGETS[2]}',
	  'src': ['unborn.su', 'wavelet_line100m.su', 'csq24big'],
          'tgt': ['fwi3it_est', 'fwi3it_inv', 'fwi3it_res.su'],
          'cmd': acdfwi + ' ' + 
		 'order=2 cfl=0.5 ' +
		 'cmin=1.0 cmax=6.0 sampord=1 nsnaps=20 ' +
		 'csq_min=1.0 csq_max=36.0 ' +
		 'csq=${SOURCES[2]} ' +
		 'csq_est=${TARGETS[0]} csq_inv=${TARGETS[1]} ' +
		 'source=${SOURCES[1]} data=${SOURCES[0]} data_res=${TARGETS[2]} ' +
		 'MaxSteps=3 OptMethod=trcg InitStepBound=10000 ' +
		 'outfile=fwi3it.out partask='+ str(PTASK),
        },
	{ 'job': 'fwi10it',
          'pre': 'add scale=0.0 < ${SOURCES[2]} > ${TARGETS[0]} && ' +
	         'add scale=0.0 < ${SOURCES[2]} > ${TARGETS[1]} && ' +
	         '/bin/cp ${SOURCES[0]} ${TARGETS[2]}',
	  'src': ['unborn.su', 'wavelet_line100m.su', 'csq24big'],
          'tgt': ['fwi10it_est', 'fwi10it_inv', 'fwi10it_res.su'],
          'cmd': acdfwi + ' ' + 
		 'order=2 cfl=0.5 ' +
		 'cmin=1.0 cmax=6.0 sampord=1 nsnaps=20 ' +
		 'csq_min=1.0 csq_max=36.0 ' +
		 'csq=${SOURCES[2]} ' +
		 'csq_est=${TARGETS[0]} csq_inv=${TARGETS[1]} ' +
		 'source=${SOURCES[1]} data=${SOURCES[0]} data_res=${TARGETS[2]} ' +
		 'MaxSteps=10 OptMethod=trcg InitStepBound=10000 ' +
		 'outfile=fwi3it.out partask='+ str(PTASK),
        },
	{ 'job': 'fwi3lbfgs',
          'pre': 'add scale=0.0 < ${SOURCES[2]} > ${TARGETS[0]} && ' +
	         'add scale=0.0 < ${SOURCES[2]} > ${TARGETS[1]} && ' +
	         '/bin/cp ${SOURCES[0]} ${TARGETS[2]}',
	  'src': ['unborn.su', 'wavelet_line100m.su', 'csq24big'],
          'tgt': ['fwi3lbfgs_est', 'fwi3lbfgs_inv', 'fwi3lbfgs_res.su'],
          'cmd': acdfwi + ' ' + 
		 'order=2 cfl=0.5 ' +
		 'cmin=1.0 cmax=6.0 sampord=1 nsnaps=20 ' +
		 'csq_min=1.0 csq_max=36.0 ' +
		 'csq=${SOURCES[2]} ' +
		 'csq_est=${TARGETS[0]} csq_inv=${TARGETS[1]} ' +
		 'source=${SOURCES[1]} data=${SOURCES[0]} data_res=${TARGETS[2]} ' +
		 'MaxSteps=3 OptMethod=lbfgs InitStepBound=100000 ' +
		 'outfile=fwi3it.out partask='+ str(PTASK),
        },
	{ 'job': 'fwi10lbfgs',
          'pre': 'add scale=0.0 < ${SOURCES[2]} > ${TARGETS[0]} && ' +
	         'add scale=0.0 < ${SOURCES[2]} > ${TARGETS[1]} && ' +
	         '/bin/cp ${SOURCES[0]} ${TARGETS[2]}',
	  'src': ['unborn.su', 'wavelet_line100m.su', 'csq24big'],
          'tgt': ['fwi10lbfgs_est', 'fwi10lbfgs_inv', 'fwi10lbfgs_res.su'],
          'cmd': acdfwi + ' ' + 
		 'order=2 cfl=0.5 ' +
		 'cmin=1.0 cmax=6.0 sampord=1 nsnaps=20 ' +
		 'csq_min=1.0 csq_max=36.0 ' +
		 'csq=${SOURCES[2]} ' +
		 'csq_est=${TARGETS[0]} csq_inv=${TARGETS[1]} ' +
		 'source=${SOURCES[1]} data=${SOURCES[0]} data_res=${TARGETS[2]} ' +
		 'MaxSteps=10 OptMethod=lbfgs InitStepBound=100000 ' +
		 'outfile=fwi10lbfgs.out partask='+ str(PTASK),
        },
	{ 'job': 'fwi3sd',
          'pre': 'add scale=0.0 < ${SOURCES[2]} > ${TARGETS[0]} && ' +
	         'add scale=0.0 < ${SOURCES[2]} > ${TARGETS[1]} && ' +
	         '/bin/cp ${SOURCES[0]} ${TARGETS[2]}',
	  'src': ['unborn.su', 'wavelet_line100m.su', 'csq24big'],
          'tgt': ['fwi3sd_est', 'fwi3sd_inv', 'fwi3sd_res.su'],
          'cmd': acdfwi + ' ' + 
		 'order=2 cfl=0.5 ' +
		 'cmin=1.0 cmax=6.0 sampord=1 nsnaps=20 ' +
		 'csq_min=1.0 csq_max=36.0 ' +
		 'csq=${SOURCES[2]} ' +
		 'csq_est=${TARGETS[0]} csq_inv=${TARGETS[1]} ' +
		 'source=${SOURCES[1]} data=${SOURCES[0]} data_res=${TARGETS[2]} ' +
		 'MaxSteps=3 MaxInvHessianUpdates=0 OptMethod=lbfgs InitStepBound=100000 ' +
		 'outfile=${TARGETS[1]}.out partask='+ str(PTASK),
        },
	{ 'job': 'fwi10sd',
          'pre': 'add scale=0.0 < ${SOURCES[2]} > ${TARGETS[0]} && ' +
	         'add scale=0.0 < ${SOURCES[2]} > ${TARGETS[1]} && ' +
	         '/bin/cp ${SOURCES[0]} ${TARGETS[2]}',
	  'src': ['unborn.su', 'wavelet_line100m.su', 'csq24big'],
          'tgt': ['fwi10sd_est', 'fwi10sd_inv', 'fwi10sd_res.su'],
          'cmd': acdfwi + ' ' + 
		 'order=2 cfl=0.5 ' +
		 'cmin=1.0 cmax=6.0 sampord=1 nsnaps=20 ' +
		 'csq_min=1.0 csq_max=36.0 ' +
		 'csq=${SOURCES[2]} ' +
		 'csq_est=${TARGETS[0]} csq_inv=${TARGETS[1]} ' +
		 'source=${SOURCES[1]} data=${SOURCES[0]} data_res=${TARGETS[2]} ' +
		 'MaxSteps=10 MaxInvHessianUpdates=0 OptMethod=lbfgs InitStepBound=100000 ' +
		 'outfile=fwi10sd.out partask='+ str(PTASK),
        },
	{ 'job': 'fwi40sd',
          'pre': 'add scale=0.0 < ${SOURCES[2]} > ${TARGETS[0]} && ' +
	         'add scale=0.0 < ${SOURCES[2]} > ${TARGETS[1]} && ' +
	         '/bin/cp ${SOURCES[0]} ${TARGETS[2]}',
	  'src': ['unborn.su', 'wavelet_line100m.su', 'csq24big'],
          'tgt': ['fwi40sd_est', 'fwi40sd_inv', 'fwi40sd_res.su'],
          'cmd': acdfwi + ' ' + 
		 'order=2 cfl=0.5 ' +
		 'cmin=1.0 cmax=6.0 sampord=1 nsnaps=20 ' +
		 'csq_min=1.0 csq_max=36.0 ' +
		 'csq=${SOURCES[2]} ' +
		 'csq_est=${TARGETS[0]} csq_inv=${TARGETS[1]} ' +
		 'source=${SOURCES[1]} data=${SOURCES[0]} data_res=${TARGETS[2]} ' +
		 'MaxSteps=40 MaxInvHessianUpdates=0 OptMethod=lbfgs InitStepBound=100000 ' +
		 'outfile=fwi40sd.out partask='+ str(PTASK),
        },
	{ 'job': 'fwi100sd',
          'pre': 'add scale=0.0 < ${SOURCES[2]} > ${TARGETS[0]} && ' +
	         'add scale=0.0 < ${SOURCES[2]} > ${TARGETS[1]} && ' +
	         '/bin/cp ${SOURCES[0]} ${TARGETS[2]}',
	  'src': ['unborn.su', 'wavelet_line100m.su', 'fwi40sd_inv'],
          'tgt': ['fwi100sd_est', 'fwi100sd_inv', 'fwi100sd_res.su'],
          'cmd': acdfwi + ' ' + 
		 'order=2 cfl=0.5 ' +
		 'cmin=1.0 cmax=6.0 sampord=1 nsnaps=20 ' +
		 'csq_min=1.0 csq_max=36.0 ' +
		 'csq=${SOURCES[2]} ' +
		 'csq_est=${TARGETS[0]} csq_inv=${TARGETS[1]} ' +
		 'source=${SOURCES[1]} data=${SOURCES[0]} data_res=${TARGETS[2]} ' +
		 'MaxSteps=60 MaxInvHessianUpdates=0 OptMethod=lbfgs InitStepBound=100000 ' +
		 'outfile=fwi100sd.out partask='+ str(PTASK),
        },
     ]

run(jobs,lenv)

Flow('nearoff.su', None, suchw + ' < unborn.su key1=offset key2=gx key3=sx b=1 c=-1 | ' +
     sushw + ' key=sx a=0.0 | ' + suwind + ' key=offset min=-200 max=-200')

Flow('halfcsq24big','csq24big','add scale=0.0|add add=1.0')
Flow('refl','dcsq24','window min1=400 max1=2400 min2=500 max2=10000')
Flow('expldata.su',['nearoff.su','dcsq24','halfcsq24big'],
     '/bin/cp ${SOURCES[0]} ${TARGETS[0]} && ' +
     acd + ' ' +
     'deriv=0 adjoint=0 order=2 cfl=0.5 cmin=0.5 cmax=3.0 sampord=1 ' +
     'csq=${SOURCES[2]} source=${SOURCES[1]} ' +
     'data=${TARGETS[0]}',stdin=0,stdout=-1)
     



# figures
Result('csq24','window max1=2000 min2=2000 max2=9000 | grey color=j mean=y scalebar=y barreverse=y')
Result('csq24big','window max1=2000 min2=2000 max2=9000 | grey color=j mean=y scalebar=y barreverse=y')
Result('dcsq24','window max1=2000 min2=2000 max2=9000 | grey color=j mean=y scalebar=y barreverse=y')
Result('born','born.su', 'suread endian=0  read=data | put n2=96 n3=60 | window j3=6 | put n2=960 n3=1 label1=Time label2=Trace unit1=s | grey clip=0.001')
Result('unborn','unborn.su', 'suread endian=0  read=data | put n2=96 n3=60 | window j3=6 | put n2=960 n3=1 label1=Time label2=Trace unit1=s | grey clip=0.001')
Result('mig','window max1=2000 min2=2000 max2=9000 | grey color=j clip=2.e-8')
Result('fwi3it_inv','window max1=2000 min2=2000 max2=9000 | grey color=j mean=y scalebar=y barreverse=y')
Result('fwi10it_inv','window max1=2000 min2=2000 max2=9000 | grey color=j mean=y scalebar=y barreverse=y')
Result('fwi3it_res','fwi3it_res.su', 'suread endian=0  read=data | put n2=96 n3=60 | window j3=6 | put n2=960 n3=1 label1=Time label2=Trace unit1=s | grey clip=0.001')
Result('fwi10it_res','fwi10it_res.su', 'suread endian=0  read=data | put n2=96 n3=60 | window j3=6 | put n2=960 n3=1 label1=Time label2=Trace unit1=s | grey clip=0.001')


End()
