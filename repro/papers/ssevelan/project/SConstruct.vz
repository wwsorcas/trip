from rsf.proj import *
import os

####################### EDIT TO CHOOSE BETWEEN ########################
################ MADAGASCAR AND STANDALONE INSTALLS ###################
#asg = 'asg'
#stdmdl='standardmodel'
################################# OR ##################################
CWPROOT         = os.getenv('CWPROOT')
sunull          = os.path.join(CWPROOT,'bin/sunull')
sushw           = os.path.join(CWPROOT,'bin/sushw')
suchw           = os.path.join(CWPROOT,'bin/suchw')
sugain          = os.path.join(CWPROOT,'bin/sugain')
suwind          = os.path.join(CWPROOT,'bin/suwind')
suwaveform      = os.path.join(CWPROOT,'bin/suwaveform')
supsimage       = os.path.join(CWPROOT,'bin/supsimage')
suspike         = os.path.join(CWPROOT,'bin/suspike')
sufilter        = os.path.join(CWPROOT,'bin/sufilter')
suconv          = os.path.join(CWPROOT,'bin/suconv')
sucddecon       = os.path.join(CWPROOT,'bin/sucddecon')
sufrac          = os.path.join(CWPROOT,'bin/sufrac')
sustack         = os.path.join(CWPROOT,'bin/sustack')
suop            = os.path.join(CWPROOT,'bin/suop')
sugain          = os.path.join(CWPROOT,'bin/sugain')
sumax           = os.path.join(CWPROOT,'bin/sumax')
suop2           = os.path.join(CWPROOT,'bin/suop2')
suflip          = os.path.join(CWPROOT,'bin/suflip')
sutxtaper       = os.path.join(CWPROOT,'bin/sutxtaper')
a2b             = os.path.join(CWPROOT,'bin/a2b')
suresamp        = os.path.join(CWPROOT,'bin/suresamp')
sudiff          = os.path.join(CWPROOT,'bin/sudiff')
MYAPPS          = os.getenv('MYAPPS')
asg             = os.path.join(MYAPPS,'trip2.1/iwave/asg/main/asg.x')
asg1            = os.path.join(MYAPPS,'trip2.1/iwave/asg/main/asg1.x')
asgsrcinv       = os.path.join(MYAPPS,'trip2.1/iwave/asg/main/asgsrcinv.x')
poisson         = os.path.join(MYAPPS,'trip2.1/iwave/asg/main/poisson.x')
stdmdl          = os.path.join(MYAPPS,'trip2.1/iwave/grid/main/standardmodel.x')
#######################################################################

# dummy target
Flow('cout0.txt',None,'touch $TARGET')

BULK = 4.0
BUOY = 1.0
DX   = [20,10,5]
DT   = [0.008,0.004,0.002]
NX   = [401,801,1601]
NZ   = [201,401,801]
F1   = [1,2,4]
F2   = [2.5,5,10]
F3   = [7.5,15,30]
F4   = [12.5,25,50]
CLIP = [0.015,0.05,0.15]
SCLIP= [0.025,0.08,0.2]

Flow('pthdr1.su', None,
     sunull + ' nt=2001 ntr=401 dt=0.002 | ' + 
     sushw + ' key=gx a=2000 b=10 j=401 | ' + 
     sushw + ' key=gelev a=-1000',
     stdin=0)

Flow('pthdr3.su', None,
     sunull + ' nt=2001 ntr=401 dt=0.002 | ' + 
     sushw + ' key=gx a=2000 b=10 j=401 | ' + 
     sushw + ' key=gelev a=-3000',
     stdin=0)

### create wavelet, src file scale by 250 for time delta and 10 for z delta

for i in range(0,3):

    NXL=NX[i]
    NZL=NZ[i]
    DXL=DX[i]
    DTL=DT[i]

    Flow('bmh'+str(i), None, 
         'makevel n1=' + str(NZL) + ' n2=' + str(NXL) +
         ' d1=' + str(DXL) + ' d2=' + str(DXL) + 
         ' label1=Depth label2=Distance' + 
         ' unit1=m unit2=m' + 
         ' label=Bulk_modulus unit=GPa' +
         ' v000=' + str(BULK) + ' | ' +
         ' sfput dim=2 gdim=2 id1=0 id2=1',
         stdin=0) 

    Flow('byh'+str(i), None, 
         'makevel n1=' + str(NZL) + ' n2=' + str(NXL) +
         ' d1=' + str(DXL) + ' d2=' + str(DXL) + 
         ' label1=Depth label2=Distance' + 
         ' unit1=m unit2=m' + 
         ' label=Bulk_modulus unit=GPa' +
         ' v000=' + str(BUOY) + ' | ' +
         ' sfput dim=2 gdim=2 id1=0 id2=1',
         stdin=0) 

    Flow('ptsrc'+str(i)+'.su', None, suspike +
         ' nt=1001 ntr=401 offset=0 ix1=151 nspk=1 it1=500 dt=0.002 | ' +
         sufilter + ' f=' +
	 str(F1[i]) + ',' + str(F2[i]) + ',' +
	 str(F3[i]) + ',' + str(F4[i]) + ' | ' +
         sugain + ' scale=2500.0 | ' + 
         sushw + ' key=delrt,gelev a=-1000,-3000 | ' +
         sushw + ' key=gx a=2000 b=10 j=401',
	 stdin=0)

    Flow('ptp' + str(i) + '.su ptvz' + str(i) + '.su',
    	 'bmh' + str(i) + ' byh' + str(i) + ' ptsrc' + str(i) + '.su pthdr1.su',
         '/bin/cp ${SOURCES[3]} ${TARGETS[0]}; ' +
         '/bin/cp ${SOURCES[3]} ${TARGETS[1]}; ' +
         asg + 
         '''
         bulkmod=${SOURCES[0]} buoyancy=${SOURCES[1]} 
         source_p=${SOURCES[2]} data_p=${TARGETS[0]} data_v0=${TARGETS[1]} 
         deriv=0 adjoint=0 order=2 cfl=0.5 cmin=1.0 cmax=3.0 
         dmin=0.8 dmax=3.0 nl1=250 nr1=250 nl2=250 nr2=250 pmlampl=1.0
         ''', stdin=0, stdout=0) 

    Flow('ptvzflip' + str(i) + '.su','ptvz' + str(i) + '.su',
         suflip + ' flip=3') 
    Flow('ptvzfliprd' + str(i) + '.su','ptvzflip' + str(i) + '.su',
         sushw + ' key=delrt a=-4000')
	 
# fwd prop time-reversed hom vz
    Flow('srcp' + str(i) + '.su srcvz' + str(i) + '.su',
         'bmh' + str(i) + ' byh' + str(i) + ' ptvzfliprd' + str(i) + '.su ptsrc' + str(i) + '.su',
         '/bin/cp ${SOURCES[3]} ${TARGETS[0]}; ' +
         '/bin/cp ${SOURCES[3]} ${TARGETS[1]}; ' +
         asg + 
         '''
         bulkmod=${SOURCES[0]} buoyancy=${SOURCES[1]} 
         source_p=${SOURCES[2]} data_p=${TARGETS[0]} data_v0=${TARGETS[1]} 
         deriv=0 adjoint=0 order=2 cfl=0.5 cmin=1.0 cmax=3.0 
         dmin=0.8 dmax=3.0 nl1=250 nr1=250 nl2=250 nr2=250 pmlampl=1.0
         ''', stdin=0, stdout=0) 

# backwards prop hom vz
    Flow('srcvzbw' + str(i) + '.su',
         'bmh' + str(i) + ' byh' + str(i) +
	 ' ptvz' + str(i) + '.su ptsrc' + str(i) + '.su',
         sugain + ' scale=0.0 < ${SOURCES[3]} > ${TARGETS[0]} && ' + 
         asg1 + 
         '''
         bulkmod=${SOURCES[0]} buoyancy=${SOURCES[1]} 
         source_p=${TARGETS[0]} data_v0=${SOURCES[2]} 
         deriv=0 adjoint=1 order=2 cfl=0.5 cmin=1.0 cmax=3.0 
         dmin=0.8 dmax=3.0 nl1=250 nr1=250 nl2=250 nr2=250 pmlampl=1.0
         ''', stdin=0, stdout=0)

# flip back for positive time
    Flow('srcvzflip' + str(i) + '.su','srcvz' + str(i) + '.su',
         suflip + ' flip=3') 

End()
