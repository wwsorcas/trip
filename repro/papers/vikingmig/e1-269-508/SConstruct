#############################################################################
###################### COMMON DEFINITIONS - DO NOT ALTER ####################
#############################################################################
from rsf.proj import *
from trip.proj import getThreads
from trip.proj import getCommand
from trip.prog import run
import os

# local parallel parameters
lenv = {'stampede2' : { 'nodes'    : 4,
                        'ppn'      : 60,
                        'wall'     : '04:00:00'
                      },
         'davinci' :  { 'nodes'    : 2,
                       	'ppn'      : 16,
                        'wall'     : '08:00:00'
                      },
         'macbook' :  { 'ppn'      : 2},
	 'getafix' :  { 'ppn'      : 10},
	 }

#############################################################################
###################### END COMMON DEFINITIONS ###############################
#############################################################################

######################## LOCAL DEFINITIONS ##################################
######## abbreviations for commands used in flows - put these first, if
######## you use abbreviations
# example:
#          CWPROOT         = os.getenv('CWPROOT')
#          ...
#          sunull          = os.path.join(CWPROOT,'bin/sunull')
CWPROOT         = os.getenv('CWPROOT')
segyread        = os.path.join(CWPROOT,'bin/segyread')
suwind          = os.path.join(CWPROOT,'bin/suwind')
susort          = os.path.join(CWPROOT,'bin/susort')
sumute          = os.path.join(CWPROOT,'bin/sumute')
sufilter        = os.path.join(CWPROOT,'bin/sufilter')
suvelan         = os.path.join(CWPROOT,'bin/suvelan')
sunmo           = os.path.join(CWPROOT,'bin/sunmo')
sustack         = os.path.join(CWPROOT,'bin/sustack')
sugain          = os.path.join(CWPROOT,'bin/sugain')
sugazmig        = os.path.join(CWPROOT,'bin/sugazmig')
velconv         = os.path.join(CWPROOT,'bin/velconv')
smooth2         = os.path.join(CWPROOT,'bin/smooth2')
unisam2         = os.path.join(CWPROOT,'bin/unisam2')
transp          = os.path.join(CWPROOT,'bin/transp')
sumigpspi       = os.path.join(CWPROOT,'bin/sumigpspi')
sumigfd         = os.path.join(CWPROOT,'bin/sumigfd')
sufilter        = os.path.join(CWPROOT,'bin/sufilter')
sufft           = os.path.join(CWPROOT,'bin/sufft')
suamp           = os.path.join(CWPROOT,'bin/suamp')
suspike         = os.path.join(CWPROOT,'bin/suspike')
sushw           = os.path.join(CWPROOT,'bin/sushw')
suresamp        = os.path.join(CWPROOT,'bin/suresamp')
sutxtaper       = os.path.join(CWPROOT,'bin/sutxtaper')
MYAPPS          = os.getenv('MYAPPS')
TRIP            = os.path.join(MYAPPS,'trip')
GCCTRIP         = os.path.join(MYAPPS,'gcctrip')
asg             = os.path.join(TRIP,'iwave/asg/main/sim.x')
borninv         = os.path.join(TRIP,'iwave/asg/main/pcg.x')
dgrid           = os.path.join(GCCTRIP,'iwave/grid/main/GridDeriv.x')
dsegy           = os.path.join(GCCTRIP,'iwave/trace/main/SEGYDeriv.x')
decon           = os.path.join(GCCTRIP,'iwave/trace/main/SEGYCGDecon.x')
lmute           = os.path.join(GCCTRIP,'iwave/trace/main/linmute.x')
towed           = os.path.join(GCCTRIP,'iwave/trace/main/towed_array.x')

# fetch data from TRIP repo
fetches = {
    'paracdp.segy' : ['mobil', 'http://www.trip.caam.rice.edu'],
    'padbubblepulse.su' : ['mobil', 'http://www.trip.caam.rice.edu'],
}

for file in fetches.keys():
    Fetch(file,fetches[file][0],server=fetches[file][1])

# window, filter, sort data
Flow('shots269-508.su', 'paracdp.segy', segyread + ' tape=paracdp.segy conv=1 | ' +
     sugain + ' qclip=0.99 | ' +
     sufilter + ' f=2.5,5,35,40 | ' +
     suwind + ' tmax=3.0 key=fldr min=269 max=508 | ' +
     susort + ' sx gx > ${TARGETS[0]}; ' +
     ' /bin/rm binary header', stdin=0, stdout=-1)
     
# filter far field wavelet
Flow('pulse.su','padbubblepulse.su',sufilter + ' f=2.5,5,35,40 | ' +
     suresamp + ' dt=0.004 nt=251')

# decon
Flow('shots269-508dc.su',['shots269-508.su','pulse.su'],
     '/bin/cp ${SOURCES[0]} ${TARGETS[0]} && ' +
     decon + ' data=${SOURCES[0]} soln=${TARGETS[0]} kernel=${SOURCES[1]} ' +
     'mode=solve MaxIter=20',stdin=0,stdout=-1)

# filter, taper, mute
MZO = 0.0
MSL = 1.1
MWD = 100

Flow('shots269-508dcf.su','shots269-508dc.su',
     sufilter + ' f=5,10,35,40')
Flow('shots269-508dcfi.su','shots269-508dcf.su',
     '/bin/cp ${SOURCES[0]} ${TARGETS[0]}; ' + dsegy +
     ' in=${TARGETS[0]} order=-1',stdin=0,stdout=-1)
Flow('shots269-508dcft.su','shots269-508dcfi.su',     
     lmute + ' input=${SOURCES[0]} output=${TARGETS[0]} mute_slope=' + str(MSL) + 
     ' mute_zotime=' + str(MZO) + ' mute_width=' + str(MWD),
     stdin=0, stdout=-1)
Flow('zdshots269-508dcft.su','shots269-508dcft.su', sushw + ' key=gelev,selev a=0.0,0.0')

Flow('shots269-508dipf.su',None,
     sufilter + ' f=5,10,35,40 < ../project/shots269-508dip.su')
Flow('shots269-508dipfi.su','shots269-508dipf.su','/bin/cp ${SOURCES[0]} ${TARGETS[0]}; ' + dsegy +
     ' in=${TARGETS[0]} order=-1',stdin=0,stdout=-1)
Flow('shots269-508dipft.su','shots269-508dipfi.su',
     '/bin/cp ${SOURCES[0]} ${TARGETS[0]}; ' + 
     lmute + ' input=${SOURCES[0]} output=${TARGETS[0]} mute_slope=' + str(MSL) + 
     ' mute_zotime=' + str(MZO) + ' mute_width=' + str(MWD),
     stdin=0,stdout=-1)
Flow('zdshots269-508dipft.su','shots269-508dipft.su', sushw + ' key=gelev,selev a=0.0,0.0')

# approx bulk modulus of water, GPa
BULK = 2.25

# bandpass wavelet 
Flow('spike.su', None,
      suspike + ' nt=201 ntr=1 offset=0 ix1=1 nspk=1 it1=100 dt=0.004 | ' +
      sugain + ' scale=' + str(BULK/4) + ' | ' +
      sushw + ' key=delrt a=-400')
Flow('bandpass.su', 'spike.su', sufilter + ' f=2.5,5,35,40')
Flow('intbandpass.su','bandpass.su','/bin/cp ${SOURCES[0]} ${TARGETS[0]}; ' + dsegy + ' in=${TARGETS[0]} order=-1',stdin=0,stdout=-1)

#towed sources
Flow('src269-508.su',['shots269-508.su','intbandpass.su'],'towed_array data=${SOURCES[0]} src=${SOURCES[1]} towed=$TARGET',stdin=0,stdout=-1)
Flow('zdsrc269-508.su','src269-508.su', sushw + ' key=gelev,selev a=0.0,0.0')

# bulk mod - from archived v^2, assuming density=1
Flow('bulk',None,'dd form=native < ../project/Orig/paracsq.HH | window max1=3500 min2=8000 max2=17000',stdin=0)

# bulk mod padded with artificial water layer
Flow('deepbulk','bulk','window n1=1 f1=0 | ' +
     'spray axis=1 n=10 d=10 o=-100 | ' +
     'cat axis=1 d=10 o=-100 ${SOURCES[0]}')

# unit buoyancy
Flow('buoy','bulk','add scale=0.0| add add=1.0')
Flow('deepbuoy','deepbulk','add scale=0.0| add add=1.0')

# physical extension - pad by zeros
NH = 0
DX = 12.5
OH = -DX*NH

Flow('extbulk','bulk',
     'add scale=' + str(1.0/DX) + ' |' +
     'pad beg3=' + str(NH) + ' end3=' + str(NH) + 
     ' | put d3=' + str(DX) + ' o3=' + str(OH) + ' dim=2 gdim=3 id1=0 id2=1 id3=101 label3=Offset')
     
Flow('extdeepbulk','deepbulk',
     'add scale=' + str(1.0/DX) + ' |' +
     'pad beg3=' + str(NH) + ' end3=' + str(NH) + 
     ' | put d3=' + str(DX) + ' o3=' + str(OH) + ' dim=2 gdim=3 id1=0 id2=1 id3=101 label3=Offset')     

PTASK = getThreads(lenv)

# max frequency in KHz
MAXFREQ = 0.04

basecmd = ' deriv=0 order=4 adjtest=0 cfl=0.5 cmin=1.0 cmax=4.0 dmin=0.8 dmax=3.0 sampord=1 nsnaps=20 maxfreq=' + str(MAXFREQ) + ' freebulkmod=${SOURCES[4]} freebuoyancy=${SOURCES[5]} freebulkmodpert=${SOURCES[6]} absbbulkmod=${SOURCES[7]} absbbuoyancy=${SOURCES[8]} absbbulkmodpert=${SOURCES[9]} freesource_p=${SOURCES[2]} absbsource_p=${SOURCES[3]} freedata_p=${SOURCES[0]} absbdata_p=${SOURCES[1]} pmlwidth=500 pmlampl=1.0 dump_term=0 dump_lda=0 dump_ldc=0 printact=0 num_threads=1 partask=' + str(PTASK) + ' '

jobs = [
         { 'job': 'mig269-508',
	   'pre': 'add scale=0.0 < ${SOURCES[2]} > ${TARGETS[0]} && ' +
	   'add scale=0.0 < ${SOURCES[3]} > ${TARGETS[1]}',	
	   'src': ['shots269-508dcf.su', 'src269-508.su', 'bulk', 'buoy'],
	   'tgt': ['bulkmig', 'buoymig'],
	   'cmd': asg + ' ' + 
	   'deriv=1 adjoint=1 order=2 cfl=0.5 ' +
	   'cmin=1.0 cmax=4.0 dmin=0.8 dmax=1.2 sampord=1 nsnaps=20 ' +
	   'nl1=0.0 nr1=250 nl2=250 nr2=250 pmlampl=1.0 ' +
	   'bulkmod=${SOURCES[2]} bulkmod_b1=${TARGETS[0]} ' +
	   'buoyancy=${SOURCES[3]} buoyancy_b1=${TARGETS[1]} ' +	
	   'source_p=${SOURCES[1]} data_p=${SOURCES[0]} ' +
	   'num_threads=1 partask=' + str(getThreads(lenv))
	},
	{ 'job': 'invp0it0',
       	  'pre': 'add scale=0 < ${SOURCES[6]} > ${TARGETS[0]}',
       	  'src': ['shots269-508dcft.su','zdshots269-508dcft.su', 'src269-508.su','zdsrc269-508.su',
                  'bulk', 'buoy', 'extbulk',
	  	  'deepbulk','deepbuoy','extdeepbulk'],
          'tgt': ['bulkinvp0it0'],
	  'cmd': borninv + basecmd + 
                 'freesurface=1 ' +
                 'precond=0 ' +
	         'ResidualTol=0.01 GradientTol=0.01 MaxIter=0 ' + 
                 'outfile=cgne.rpt ' +
 		 'mute_slope=' + str(MSL) + ' ' +
                 'mute_width=' + str(MWD) + ' ' +
                 'mute_zotime=' + str(MZO) + ' ' +
		 'top=200.0 bot=300.0 ' + 	  
		 'freebulkmodpert=${TARGETS[0]} ' 
	},
	{ 'job': 'invp1it0',
       	  'pre': 'add scale=0 < ${SOURCES[6]} > ${TARGETS[0]}',
       	  'src': ['shots269-508dcft.su','zdshots269-508dcft.su', 'src269-508.su','zdsrc269-508.su',
                  'bulk', 'buoy', 'extbulk',
	  	  'deepbulk','deepbuoy','extdeepbulk'],
          'tgt': ['bulkinvp1it0'],
	  'cmd': borninv + basecmd + 
                 'freesurface=1 ' +
                 'precond=1 ' +
	         'ResidualTol=0.01 GradientTol=0.01 MaxIter=0 ' + 
                 'outfile=cgne.rpt ' +
 		 'mute_slope=' + str(MSL) + ' ' +
                 'mute_width=' + str(MWD) + ' ' +
                 'mute_zotime=' + str(MZO) + ' ' +
		 'top=200.0 bot=300.0 ' + 	  
		 'freebulkmodpert=${TARGETS[0]} ' 
	},
	{ 'job': 'invp0it0dip',
       	  'pre': 'add scale=0 < ${SOURCES[6]} > ${TARGETS[0]}',
       	  'src': ['shots269-508dipft.su','zdshots269-508dipft.su', 'src269-508.su','zdsrc269-508.su',
                  'bulk', 'buoy', 'extbulk',
	  	  'deepbulk','deepbuoy','extdeepbulk'],
          'tgt': ['bulkinvp0it0dip'],
	  'cmd': borninv + basecmd + 
                 'freesurface=1 ' +
                 'precond=0 ' +
	         'ResidualTol=0.01 GradientTol=0.01 MaxIter=0 ' + 
                 'outfile=cgne.rpt ' +
 		 'mute_slope=' + str(MSL) + ' ' +
                 'mute_width=' + str(MWD) + ' ' +
                 'mute_zotime=' + str(MZO) + ' ' +
		 'top=200.0 bot=300.0 ' + 	  
		 'freebulkmodpert=${TARGETS[0]} ' 
	},
	{ 'job': 'invp1it0dip',
       	  'pre': 'add scale=0 < ${SOURCES[6]} > ${TARGETS[0]}',
       	  'src': ['shots269-508dipft.su','zdshots269-508dipft.su', 'src269-508.su','zdsrc269-508.su',
                  'bulk', 'buoy', 'extbulk',
	  	  'deepbulk','deepbuoy','extdeepbulk'],
          'tgt': ['bulkinvp1it0dip'],
	  'cmd': borninv + basecmd + 
                 'freesurface=1 ' +
                 'precond=1 ' +
	         'ResidualTol=0.01 GradientTol=0.01 MaxIter=0 ' + 
                 'outfile=cgne.rpt ' +
 		 'mute_slope=' + str(MSL) + ' ' +
                 'mute_width=' + str(MWD) + ' ' +
                 'mute_zotime=' + str(MZO) + ' ' +
		 'top=200.0 bot=300.0 ' + 	  
		 'freebulkmodpert=${TARGETS[0]} ' 
	},
	{ 'job': 'invp0it10',
       	  'pre': 'add scale=0 < ${SOURCES[6]} > ${TARGETS[0]}',
       	  'src': ['shots269-508dcft.su','zdshots269-508dcft.su', 'src269-508.su','zdsrc269-508.su',
                  'bulk', 'buoy', 'extbulk',
	  	  'deepbulk','deepbuoy','extdeepbulk'],
          'tgt': ['bulkinvp0it10'],
	  'cmd': borninv + basecmd + 
                 'freesurface=1 ' +
                 'precond=0 ' +
	         'ResidualTol=0.01 GradientTol=0.01 MaxIter=10 ' + 
                 'outfile=cgne.rpt ' +
 		 'mute_slope=' + str(MSL) + ' ' +
                 'mute_width=' + str(MWD) + ' ' +
                 'mute_zotime=' + str(MZO) + ' ' +
		 'top=200.0 bot=300.0 ' + 	  
		 'freebulkmodpert=${TARGETS[0]} ' 
	},
	{ 'job': 'invp1it10',
       	  'pre': 'add scale=0 < ${SOURCES[6]} > ${TARGETS[0]}',
       	  'src': ['shots269-508dcft.su','zdshots269-508dcft.su', 'src269-508.su','zdsrc269-508.su',
                  'bulk', 'buoy', 'extbulk',
	  	  'deepbulk','deepbuoy','extdeepbulk'],
          'tgt': ['bulkinvp1it10'],
	  'cmd': borninv + basecmd + 
                 'freesurface=1 ' +
                 'precond=1 ' +
	         'ResidualTol=0.01 GradientTol=0.01 MaxIter=10 ' + 
                 'outfile=cgne.rpt ' +
 		 'mute_slope=' + str(MSL) + ' ' +
                 'mute_width=' + str(MWD) + ' ' +
                 'mute_zotime=' + str(MZO) + ' ' +
		 'top=200.0 bot=300.0 ' + 	  
		 'freebulkmodpert=${TARGETS[0]} ' 
	},
	{ 'job': 'invp0it10dip',
       	  'pre': 'add scale=0 < ${SOURCES[6]} > ${TARGETS[0]}',
       	  'src': ['shots269-508dipft.su','zdshots269-508dipft.su', 'src269-508.su','zdsrc269-508.su',
                  'bulk', 'buoy', 'extbulk',
	  	  'deepbulk','deepbuoy','extdeepbulk'],
          'tgt': ['bulkinvp0it10dip'],
	  'cmd': borninv + basecmd + 
                 'freesurface=1 ' +
                 'precond=0 ' +
	         'ResidualTol=0.01 GradientTol=0.01 MaxIter=10 ' + 
                 'outfile=cgne.rpt ' +
 		 'mute_slope=' + str(MSL) + ' ' +
                 'mute_width=' + str(MWD) + ' ' +
                 'mute_zotime=' + str(MZO) + ' ' +
		 'top=200.0 bot=300.0 ' + 	  
		 'freebulkmodpert=${TARGETS[0]} ' 
	},	
	{ 'job': 'invp1it10diptop3',
       	  'pre': 'add scale=0 < ${SOURCES[6]} > ${TARGETS[0]}',
       	  'src': ['shots269-508dipft.su','zdshots269-508dipft.su', 'src269-508.su','zdsrc269-508.su',
                  'bulk', 'buoy', 'extbulk',
	  	  'deepbulk','deepbuoy','extdeepbulk'],
          'tgt': ['bulkinvp1it10diptop3'],
	  'cmd': borninv + basecmd + 
                 'freesurface=1 ' +
                 'precond=1 ' +
	         'ResidualTol=0.01 GradientTol=0.01 MaxIter=10 ' + 
                 'outfile=cgne.rpt ' +
 		 'mute_slope=' + str(MSL) + ' ' +
                 'mute_width=' + str(MWD) + ' ' +
                 'mute_zotime=' + str(MZO) + ' ' +
		 'top=300.0 bot=500.0 ' + 	  
		 'freebulkmodpert=${TARGETS[0]} ' 
	},	
	{ 'job': 'rebornp1it10',
       	  'pre': '/bin/cp ${SOURCES[0]} ${TARGETS[0]}',
       	  'src': ['shots269-508dcft.su','zdshots269-508dcft.su', 'src269-508.su','zdsrc269-508.su',
                  'bulk', 'buoy', 'extbulk',
	  	  'deepbulk','deepbuoy','extdeepbulk'],
          'tgt': ['rebornp1it10.su'],
	  'cmd': borninv + basecmd + 
                 'freesurface=1 ' +
                 'adjoint=0 precond=0 ' +
 		 'mute_slope=' + str(MSL) + ' ' +
                 'mute_width=' + str(MWD) + ' ' +
                 'mute_zotime=' + str(MZO) + ' ' +
		 'top=200.0 bot=300.0 ' + 	  
		 'freebulkmodpert=../bulkinvp1it10.rsf ' +
		 'freedata_p=${TARGETS[0]} ' 
	},
	{ 'job': 'rebornp1it10dip',
       	  'pre': '/bin/cp ${SOURCES[0]} ${TARGETS[0]}',
       	  'src': ['shots269-508dipft.su','zdshots269-508dipft.su', 'src269-508.su','zdsrc269-508.su',
                  'bulk', 'buoy', 'extbulk',
	  	  'deepbulk','deepbuoy','extdeepbulk'],
          'tgt': ['rebornp1it10dip.su'],
	  'cmd': borninv + basecmd + 
                 'freesurface=1 ' +
                 'adjoint=0 precond=0 ' +
 		 'mute_slope=' + str(MSL) + ' ' +
                 'mute_width=' + str(MWD) + ' ' +
                 'mute_zotime=' + str(MZO) + ' ' +
		 'top=200.0 bot=300.0 ' + 	  
		 'freebulkmodpert=../bulkinvp1it10dip.rsf ' +
		 'freedata_p=${TARGETS[0]} ' 
	},
	{ 'job': 'rebornp1it10diptop3',
       	  'pre': '/bin/cp ${SOURCES[0]} ${TARGETS[0]}',
       	  'src': ['shots269-508dipft.su','zdshots269-508dipft.su', 'src269-508.su','zdsrc269-508.su',
                  'bulk', 'buoy', 'extbulk',
	  	  'deepbulk','deepbuoy','extdeepbulk'],
          'tgt': ['rebornp1it10diptop3.su'],
	  'cmd': borninv + basecmd + 
                 'freesurface=1 ' +
                 'adjoint=0 precond=0 ' +
 		 'mute_slope=' + str(MSL) + ' ' +
                 'mute_width=' + str(MWD) + ' ' +
                 'mute_zotime=' + str(MZO) + ' ' +
		 'top=200.0 bot=300.0 ' + 	  
		 'freebulkmodpert=../bulkinvp1it10diptop3.rsf ' +
		 'freedata_p=${TARGETS[0]} ' 
	},	
	]

# joblist execution
run(jobs,lenv)

# plot prestack migrations
for x in ['bulkmig','bulkinvp0it0','bulkinvp1it0','bulkinvp1it10','bulkinvp0it0dip','bulkinvp1it0dip','bulkinvp1it10dip','bulkinvp1it10diptop3']:
    Flow(x + 'import.rsf', None, 'dd < Orig/' + x + '.HH form=native')
    Result(x, x + 'import.rsf','window min2=10000 max2=15000 | put label1=Depth label2=Midpoint unit1=m unit2=m | grey xinch=10 yinch=5 wanttitle=n scalebar=y')

for x in ['bulkinvp0it0','bulkinvp0it0dip']:
    Flow(x + 'agc',x + 'import','agc')
    Result(x + 'agc','window min2=10000 max2=15000 | put label1=Depth label2=Midpoint unit1=m unit2=m | grey xinch=10 yinch=5 wanttitle=n scalebar=y')


# no dip filter, decon
for fldr in ['300','350','400','450','500']:
    Flow('shot' + fldr + '.su','shots269-508dcft.su',suwind + ' key=fldr min=' + fldr + ' max=' + fldr)
    Flow('shot' + fldr,'shot' + fldr + '.su','suread read=data endian=0')
    Flow('reborn' + fldr + '.su',None, suwind + ' < Orig/rebornp1it10dip.su key=fldr min=' + fldr + ' max=' + fldr, stdin=0)
    Flow('reborn' + fldr,'reborn' + fldr + '.su','suread read=data endian=0')
    Flow('shot' + fldr + 'wind','shot' + fldr,'window min1=1 max1=2.5 min2=60 max2=105')
    Flow('reborn' + fldr + 'wind','reborn' + fldr,'window min1=1 max1=2.5 min2=60 max2=105')
    Result('shot' + fldr + 'wind','grey clip=3.0e+5 wanttitle=n')
    Result('reborn' + fldr + 'wind','grey clip=3.0e+5 wanttitle=n')
    Plot('shot' + fldr + 'ww','shot' + fldr + 'wind','wiggle transp=y yreverse=y plotcol=5 wanttitle=n')
    Plot('reborn' + fldr + 'ww','reborn' + fldr + 'wind','wiggle transp=y yreverse=y plotcol=6 wanttitle=n')
    Result('comp' + fldr + 'ww','shot' + fldr + 'ww.vpl reborn' + fldr + 'ww.vpl','Overlay')
    Result('gcomp' + fldr + 'ww','Fig/shot' + fldr + 'wind.vpl reborn' + fldr + 'ww.vpl','Overlay')
    Flow('diff' + fldr + 'wind',['shot' + fldr + 'wind','reborn' + fldr + 'wind'],'add scale=1,-1 ${SOURCES[1]}')
    Result('diff' + fldr + 'wind','grey clip=5.0e+6 wanttitle=n')

# dip filter, no decon
for fldr in ['300','350','400','450','500']:
    Flow('shot' + fldr + 'dip.su',None,suwind + '< shots269-508dipft.su key=fldr min=' + fldr + ' max=' + fldr,stdin=0)
    Flow('shot' + fldr + 'dip','shot' + fldr + 'dip.su','suread read=data endian=0')
    Flow('reborn' + fldr + 'dip.su',None, suwind + ' < Orig/rebornp1it10diptop3.su key=fldr min=' + fldr + ' max=' + fldr, stdin=0)
    Flow('reborn' + fldr + 'dip','reborn' + fldr + 'dip.su','suread read=data endian=0')
    Flow('shot' + fldr + 'dipwind','shot' + fldr + 'dip','window min1=1 max1=2.5 min2=60 max2=105')
    Flow('reborn' + fldr + 'dipwind','reborn' + fldr + 'dip','window min1=1 max1=2.5 min2=60 max2=105')
    Result('shot' + fldr + 'dipwind','grey clip=5.0e+6 wanttitle=n')
    Result('reborn' + fldr + 'dipwind','grey clip=5.0e+6 wanttitle=n')
    Plot('shot' + fldr + 'dipww','shot' + fldr + 'dipwind','wiggle transp=y yreverse=y plotcol=5 wanttitle=n')
    Plot('reborn' + fldr + 'dipww','reborn' + fldr + 'dipwind','wiggle transp=y yreverse=y plotcol=6 wanttitle=n')
    Result('comp' + fldr + 'dipww','shot' + fldr + 'dipww.vpl reborn' + fldr + 'dipww.vpl','Overlay')
    Result('gcomp' + fldr + 'dipww','Fig/shot' + fldr + 'dipwind.vpl reborn' + fldr + 'dipww.vpl','Overlay')
    Flow('diff' + fldr + 'dipwind',['shot' + fldr + 'dipwind','reborn' + fldr + 'dipwind'],'add scale=1,-1 ${SOURCES[1]}')
    Result('diff' + fldr + 'dipwind','grey clip=5.0e+6 wanttitle=n')

End()


