#############################################################################
###################### COMMON DEFINITIONS - DO NOT ALTER ####################
#############################################################################
from rsf.proj import *
import os
#############################################################################
###################### END COMMON DEFINITIONS ###############################
#############################################################################

######################## LOCAL DEFINITIONS ##################################

######## abbreviations for commands used in flows - put these first, if
######## you use abbreviations
# example:
#          CWPROOT         = os.getenv('CWPROOT')
#          ...
#          sunull          = os.path.join(CWPROOT,'bin/sunull')
CWPROOT         = os.getenv('CWPROOT')
sushw           = os.path.join(CWPROOT,'bin/sushw')
suchw           = os.path.join(CWPROOT,'bin/suchw')
suplane         = os.path.join(CWPROOT,'bin/suplane')
suconv          = os.path.join(CWPROOT,'bin/suconv')
sunull          = os.path.join(CWPROOT,'bin/sunull')
suop2           = os.path.join(CWPROOT,'bin/suop2')
suspike         = os.path.join(CWPROOT,'bin/suspike')
sufilter        = os.path.join(CWPROOT,'bin/sufilter')
suwind          = os.path.join(CWPROOT,'bin/suwind')
sugain          = os.path.join(CWPROOT,'bin/sugain')
MYAPPS          = os.getenv('MYAPPS')
acd             = os.path.join(MYAPPS,'trip/iwave/acd/main/acd.x')
acdcgne         = os.path.join(MYAPPS,'trip/iwave/acd/main/acdcgne.x')
acdfwi          = os.path.join(MYAPPS,'trip/iwave/acd/main/acdfwi.x')
planewave       = os.path.join(MYAPPS,'trip/iwave/trace/main/planewave.x')

fetches = {
#    'wavelet_base.su' : ['marmousi', 'http://www.trip.caam.rice.edu'],
    'velocity.HH' : ['marmousi', 'http://www.trip.caam.rice.edu']
}
for file in fetches.keys():
    Fetch(file,fetches[file][0],server=fetches[file][1])   

# new diml consts
N1 = 141
D  = 24
N2 = 444
NX = 251
OX = 3000 
F2 = 383
NPW= 11
DP = 0.02
OP = -0.1
NT = 501
NTP= 101
DT = 0.004
SCALCO = 1000

# make velocity model described in text
Flow('ocean',None,'makevel n1=' + str(N1) + ' d1=' + str(D) + ' n2=' + str(N2) + ' d2=' + str(D) + ' o1=0 o2=0 v000=1.5 | put data_type=vel data_format=native_float label1=Depth unit1=m label2=Position uni2=m unit=m/ms esize=4',stdin=0) 
Flow('vel24base','velocity.HH','dd form=native | window j1=6 j2=6')
Flow('vext','vel24base','window f2=' + str(F2) + ' n2=1 | spray axis=2 d=' + str(D) + ' n=60')
Flow('extv',['vel24base', 'vext'], 'cat axis=2 d=' + str(D) + ' ${SOURCES[1]}')
Flow('vel24',['ocean','extv'],'window n1=15 f1=0 | cat axis=1 d=' + str(D) + ' ${SOURCES[1]}') 
Flow('vel24sm2','vel24','smooth rect1=5 rect2=5 repeat=2')
Flow('vel24big','vel24','smooth rect1=10 rect2=10 repeat=10')

# corresponding c-squared models
Flow('csq24','vel24','add mode=p ${SOURCES[0]} |put data_type=csq')
Flow('csq24sm2','vel24sm2','add mode=p ${SOURCES[0]} |put data_type=csq')
Flow('csq24big','vel24big','add mode=p ${SOURCES[0]} |put data_type=csq')
Flow('csq24noah','ocean','add mode=p ${SOURCES[0]} |put data_type=csq')
Flow('csq24big80pct',['csq24big.rsf', 'csq24noah.rsf'], 
     'add < ${SOURCES[0]} ${SOURCES[1]} scale=0.8,0.2 > ${TARGETS[0]}')

# extended models
Flow('csq24big_ext','csq24big', 
     'spray < ${SOURCES[0]} axis=3 n=11 d=1.0 o=0| ' +
     'put dim=2 gdim=3 id1=0 id2=1 id3=3 ' +
     '> ${TARGETS[0]}')
Flow('csq24big80pct_ext','csq24big80pct', 
     'spray < ${SOURCES[0]} axis=3 n=11 d=1.0 o=0| ' +
     'put dim=2 gdim=3 id1=0 id2=1 id3=3 ' +
     '> ${TARGETS[0]}')

# reflectivity
Flow('dcsq24', ['csq24', 'csq24sm2'],'add mode=a scale=1,-1 < csq24.rsf csq24sm2.rsf |window min1=180| sfpad beg1=8') 

# source pulse
Flow('wavelet_base.su', None, suspike + ' nt=201 ntr=1 offset=0 ix1=1 nspk=1 it1=100 dt=0.004 | ' + sufilter + ' f=1,3.5,10,12.5 | ' + sugain + ' scale=1.e+6 | '  + sushw + ' key=delrt a=-400 ', stdin=0)

# output data and input source traces
# normal incidence
Flow(['hdr1p.su','wav1p.su'],['wavelet_base.su'],
    planewave + ' CWPROOT=' + CWPROOT + 
    ' src=${SOURCES[0]} pwhdr=${TARGETS[0]} pwsrc=${TARGETS[1]}' +
    ' nt=' + str(NT) + ' ot=0 nx=' + str(NX) + ' dx=' + str(D) + ' ox=' + str(OX) + ' zs=12 zr=12' +
    ' np=1 dp=' + str(DP) + ' op=0.0 nxs=' + str(N2) + ' oxs=0 dxs=' + str(D),
    stdin=0, stdout=-1)

# 1 plane wave at p=-0.1
Flow(['hdr1pm01.su','wav1pm01.su'],['wavelet_base.su'],
    planewave + ' CWPROOT=' + CWPROOT + 
    ' src=${SOURCES[0]} pwhdr=${TARGETS[0]} pwsrc=${TARGETS[1]}' +
    ' nt=' + str(NT) + ' ot=0 nx=' + str(NX) + ' dx=' + str(D) + ' ox=' + str(OX) + ' zs=12 zr=12' +
    ' np=1 dp=' + str(DP) + ' op=' + str(OP) + ' nxs=' + str(N2) + ' oxs=0 dxs=' + str(D),
    stdin=0, stdout=-1)

# 11 plane wave components p=-0.1 -> 0.1
Flow(['hdr11p.su','wav11p.su'],['wavelet_base.su'],
    planewave + ' CWPROOT=' + CWPROOT + 
    ' src=${SOURCES[0]} pwhdr=${TARGETS[0]} pwsrc=${TARGETS[1]}' +
    ' nt=' + str(NT) + ' ot=0 nx=' + str(NX) + ' dx=' + str(D) + ' ox=' + str(OX) + ' zs=12 zr=12' +
    ' np=' + str(NPW) + ' dp=' + str(DP) + ' op=' + str(OP) + ' nxs=' + str(N2) + ' oxs=0 dxs=' + str(D),
    stdin=0, stdout=-1)

# movie-src output file
Flow('movie1p','wav1p.su csq24',
     '''
     makevel n1=141 n2=444 n3=51 d1=24 d2=24 d3=25 v000=0  | 
     put id1=0 id2=1 id3=2 dim=2 gdim=3 > ${TARGETS[0]} && 
     ''' + acd + ' ' + 
     '''
      deriv=0 order=2 cfl=0.5 cmin=1.0 cmax=6.0 
     csq=${SOURCES[1]} source=${SOURCES[0]} sampord=1 movie=${TARGETS[0]}
     ''',stdin=0,stdout=-1,workdir='${TARGETS[0]}.work')

# trace-src output file single normal incidence plane wavae
Flow('shot1p.su','wav1p.su csq24 hdr1p.su',
     '''
     /bin/cp ${SOURCES[2]} $TARGET &&
     ''' +
     acd + ' ' + 
     ''' deriv=0 order=2 cfl=0.5 cmin=1.0 cmax=6.0 
     csq=${SOURCES[1]} source=${SOURCES[0]} sampord=1 data=$TARGET
     ''',stdin=0,stdout=-1,workdir='${TARGETS[0]}.work')

# born simulation
Flow('born1p.su', ['hdr1p.su', 'wav1p.su', 'csq24big.rsf', 'dcsq24.rsf'],
     '''
     /bin/cp ${SOURCES[0]} ${TARGETS[0]} &&
     ''' +
     acd + ' ' +
     '''
     deriv=1 adjoint=0 order=2 cfl=0.5 cmin=1.0 cmax=6.0 sampord=1 
     csq=${SOURCES[2]} csq_d1=${SOURCES[3]} source=${SOURCES[1]}
     data=${TARGETS[0]}
     ''',stdin=0,stdout=-1,workdir='${TARGETS[0]}.work')

# migration of born data
Flow('mig1p.rsf', ['born1p.su', 'wav1p.su', 'csq24big.rsf'],
     '''
     add scale=0.0 < ${SOURCES[2]} > ${TARGETS[0]} &&
     ''' +
     acd + ' ' +
     '''
     deriv=1 adjoint=1 order=2 cfl=0.5
     cmin=1.0 cmax=6.0 sampord=1 nsnaps=20  adjtest=0
     csq=${SOURCES[2]} csq_b1=${TARGETS[0]}
     source=${SOURCES[1]}
     data=${SOURCES[0]}
     ''', stdin=0, stdout=-1, workdir='${TARGETS[0]}.work')

# adj 2nd deriv built out of born data
Flow('tomo1p.rsf', ['mig1p.rsf', 'born1p.su', 'wav1p.su', 'csq24big.rsf'],
     '''
     add scale=0.0 < ${SOURCES[0]} > ${TARGETS[0]} &&
     ''' +
     acd + ' ' +
     '''
     deriv=2 adjoint=1 order=2 cfl=0.5
     cmin=1.0 cmax=6.0 sampord=1 nsnaps=20  adjtest=1
     csq=${SOURCES[3]} csq_d1=${SOURCES[0]} csq_b2=${TARGETS[0]}
     source=${SOURCES[2]}
     data=${SOURCES[1]}
     ''', stdin=0, stdout=-1, workdir='${TARGETS[0]}.work')

# trace-src output file homog
Flow('shot1pnoah.su','wav1p.su csq24noah hdr1p.su',
     '''
     /bin/cp ${SOURCES[2]} $TARGET && 
     ''' +
     acd + ' ' +
     '''
     deriv=0 order=2 cfl=0.5 cmin=1.0 cmax=6.0 dump_term=1 sampord=1 
     csq=${SOURCES[1]} source=${SOURCES[0]} sampord=1 data=$TARGET
     ''',stdin=0,stdout=-1,workdir='${TARGETS[0]}.work')

Flow(['diff.su'],['shot1p.su', 'shot1pnoah.su'],
     suop2 + ' ${SOURCES[0]} ${SOURCES[1]} op=diff > ${TARGETS[0]}',
     stdin=0, stdout=-1)

Flow(['migshot1p.rsf'], ['diff.su', 'wav1p.su', 'csq24noah.rsf'],
     '''
     add scale=0.0 < ${SOURCES[2]} > ${TARGETS[0]} &&
     ''' +
     acd + ' ' +
     '''
     deriv=1 adjoint=1 order=2 cfl=0.5
     cmin=1.0 cmax=6.0 sampord=1 nsnaps=20
     csq=${SOURCES[2]} csq_b1=${TARGETS[0]}
     source=${SOURCES[1]}
     data=${SOURCES[0]}
     ''', stdin=0, stdout=-1, workdir='${TARGETS[0]}.work')

# movie-src output file, p=-0.1
Flow('movie1pm01','wav1pm01.su csq24',
     '''
     makevel n1=141 n2=444 n3=51 d1=24 d2=24 d3=25 v000=0  | 
     put id1=0 id2=1 id3=2 dim=2 gdim=3 > ${TARGETS[0]} && 
     ''' +
     acd + ' ' + 
     '''
     deriv=0 order=2 cfl=0.5 cmin=1.0 cmax=6.0 
     csq=${SOURCES[1]} source=${SOURCES[0]} sampord=1 movie=${TARGETS[0]}
     ''',stdin=0,stdout=-1,workdir='${TARGETS[0]}.work')

# 11 plane waves, slownesses unif spaces in [-0.1,0.1]
Flow('shot11p.su','wav11p.su csq24 hdr11p.su',
     '''
     /bin/cp ${SOURCES[2]} $TARGET &&
     ''' +
     acd + ' ' +
     '''
     deriv=0 order=2 cfl=0.5 cmin=1.0 cmax=6.0 
     csq=${SOURCES[1]} source=${SOURCES[0]} sampord=1 data=$TARGET
     ''',stdin=0,stdout=-1,workdir='${TARGETS[0]}.work')

# born simulation
Flow('born11p.su', ['hdr11p.su', 'wav11p.su', 'csq24big.rsf', 'dcsq24.rsf'],
     '''
     /bin/cp ${SOURCES[0]} ${TARGETS[0]} &&
     ''' +
     acd + ' ' +
     '''
     deriv=1 adjoint=0 order=2 cfl=0.5 cmin=1.0 cmax=6.0 sampord=1 
     csq=${SOURCES[2]} csq_d1=${SOURCES[3]} source=${SOURCES[1]}
     data=${TARGETS[0]}
     ''',stdin=0,stdout=-1,workdir='${TARGETS[0]}.work')

# migration of born data
Flow('mig11p', ['born11p.su', 'wav11p.su', 'csq24big'],
     '''
     add scale=0.0 < ${SOURCES[2]} > ${TARGETS[0]} &&
     ''' +
     acd + ' ' +
     '''
     deriv=1 adjoint=1 order=2 cfl=0.5
     cmin=1.0 cmax=6.0 sampord=1 nsnaps=20
     csq=${SOURCES[2]} csq_b1=${TARGETS[0]}
     source=${SOURCES[1]}
     data=${SOURCES[0]}
     ''', stdin=0, stdout=-1, workdir='${TARGETS[0]}.work')

# extended migration of born data
Flow('mig11pext',['born11p.su', 'wav11p.su', 'csq24big_ext'],
     '''
     add scale=0.0 < ${SOURCES[2]} > ${TARGETS[0]} &&
     ''' +
     acd + ' ' +
     '''
     deriv=1 adjoint=1 order=2 cfl=0.5
     cmin=1.0 cmax=6.0 sampord=1 nsnaps=20
     csq=${SOURCES[2]} csq_b1=${TARGETS[0]}
     source=${SOURCES[1]}
     data=${SOURCES[0]}
     ''', stdin=0, stdout=-1, workdir='${TARGETS[0]}.work')

# extended migration of born data - wrong velocity
Flow('mig11p80pctext',['born11p.su', 'wav11p.su', 'csq24big80pct_ext'],
     ''' 
     add scale=0.0 < ${SOURCES[2]} > ${TARGETS[0]} &&
     ''' +
     acd + ' ' + 
     '''
     deriv=1 adjoint=1 order=2 cfl=0.5
     cmin=1.0 cmax=6.0 sampord=1 nsnaps=20
     csq=${SOURCES[2]} csq_b1=${TARGETS[0]}
     source=${SOURCES[1]}
     data=${SOURCES[0]}
     ''', stdin=0, stdout=-1, workdir='${TARGETS[0]}.work')

Result('wavelet','wavelet_base.su', 'suread endian=0 read=data | put label1=Time label2=Pressure unit1=s unit2=GPa unit="GPa" |sfgraph')

Result('csq24', 'csq24', 'put label1=Depth unit1=m label2=Distance unit2=m label="V\_p\^\^2\_" unit="m\^2\_/ms\^2\_" | grey mean=n scalebar=y barreverse=y')

Result('csq24big', 'csq24big', 'put label1=Depth unit1=m label2=Distance unit2=m label="V\_p\^\^2\_" unit="m\^2\_/ms\^2\_" | grey color=c mean=y scalebar=y barreverse=y')

Result('dcsq24', 'dcsq24', 'window max1=2000 min2=2000 |put label1=Depth unit1=m label2=Distance unit2=m label="V\_p\^\^2\_" unit="m\^2\_/ms\^2\_" | grey color=c mean=y scalebar=y barreverse=y')

Result('movie1p', 'movie1p', 'window f3=50 n3=1 |put label1=Depth unit1=m label2=Distance unit2=m label="Pressure" unit="GPa" | grey color=c mean=y clip=20000 scalebar=y barreverse=y')

Result('shot1p','shot1p.su', 'suread endian=0 read=data | put label1=Time label2=Distance d2=0.024 o2=0 unit1=s unit2=km label="Pressure" unit="GPa" | grey scalebar=y barreverse=y')

Result('born1p','born1p.su', 'suread endian=0 read=data | put label1=Time label2=Trace unit1=s unit="GPa" | grey')

Result('mig1p', 'mig1p', 'window max1=2000 min2=2000 | put label1=Depth unit1=m label2 = Distance unit2=m label="V\_p\^\^2\_" unit="m\^2\_/ms\^2\_" | grey color=c mean=y clip=1.e+5')

Result('diff','diff.su', 'suread endian=0 read=data | put label1=Time label2=Trace unit1=s unit="GPa" | grey')

Result('migshot1p', 'migshot1p', 'window max1=2000 min2=2000 | put label1=Depth unit1=m label2 = Distance unit2=m label="V\_p\^\^2\_" unit="m\^2\_/ms\^2\_" | grey color=c mean=y clip=1.e+5')

Result('wav11p','wav11p.su', 'suread endian=0 read=data | put label1=Time label2=Trace unit1=s unit="GPa" label="Pressure" | grey')

Result('movie1pm01', 'movie1pm01', 'window f3=20 n3=1 |put label1=Depth unit1=m label2=Distance unit2=m label="Pressure" unit="GPa" | grey color=c mean=y clip=20000 xll=1 yll=6 yur=9 xur=12')

Result('shot11p','shot11p.su', 'suread endian=0 read=data | put label1=Time label2=Trace unit1=s unit="GPa" label="Pressure" | grey xll=1 yll=6 yur=9 xur=12')

Result('born11p','born11p.su', 'suread endian=0 read=data | put label1=Time label2=Trace unit1=s unit="GPa" label="Pressure" | grey xll=1 yll=6 yur=9 xur=12')

Result('mig11p', 'window max1=2000 min2=2000 | put label1=Depth unit1=m label2 = Distance unit2=m label="V\_p\^\^2\_" unit="m\^2\_/ms\^2\_" | grey color=c mean=y clip=1.e+5')

Result('mig11pext',      'window min2=2000 max1=2500 | byte | grey3 frame2=222 frame3=5 point1=0.8 point2=0.8')

Result('mig11p80pctext', 'window min2=2000 max1=2500 | byte | grey3 frame2=222 frame3=5 point1=0.8 point2=0.8')


End()
